import{ethers as e}from"ethers";var t={d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};t.r(n),t.d(n,{code:()=>ae,digest:()=>ie,name:()=>J,size:()=>ee});var i={};t.r(i),t.d(i,{asLegacyPieceCID:()=>Rn,asPieceCID:()=>xn,calculate:()=>Mn,createPieceCIDStream:()=>kn,downloadAndValidate:()=>D,downloadAndValidateFromUrl:()=>_});var a={};t.r(a),t.d(a,{PDPAuthHelper:()=>Un,PDPServer:()=>jn,PDPVerifier:()=>Hn,asDataSetData:()=>Wn,asDataSetPieceData:()=>Vn,isDataSetCreationStatusResponse:()=>On,isFindPieceResponse:()=>$n,isPieceAdditionStatusResponse:()=>Fn,validateDataSetCreationStatusResponse:()=>Ln,validateFindPieceResponse:()=>zn,validatePieceAdditionStatusResponse:()=>Bn});var r={};t.r(r),t.d(r,{SPRegistryService:()=>Gn});var s={};t.r(s),t.d(s,{CHAIN_IDS:()=>p,CONTRACT_ABIS:()=>d,CONTRACT_ADDRESSES:()=>h,GENESIS_TIMESTAMPS:()=>l,PDPAuthHelper:()=>Un,PDPServer:()=>jn,PDPVerifier:()=>Hn,PaymentsService:()=>A,RPC_URLS:()=>m,SIZE_CONSTANTS:()=>y,StorageContext:()=>Kn,StorageManager:()=>Zn,StorageService:()=>Kn,SubgraphService:()=>ni,Synapse:()=>pi,TIME_CONSTANTS:()=>u,TIMING_CONSTANTS:()=>c,TOKENS:()=>o,WarmStorageService:()=>oi,asDataSetData:()=>Wn,asDataSetPieceData:()=>Vn,calculateLastProofDate:()=>S,constructFindPieceUrl:()=>C,constructPieceUrl:()=>I,createError:()=>f,dateToEpoch:()=>v,epochToDate:()=>g,getCurrentEpoch:()=>P,getFilecoinNetworkType:()=>b,getGenesisTimestamp:()=>w,isDataSetCreationStatusResponse:()=>On,isFindPieceResponse:()=>$n,isPieceAdditionStatusResponse:()=>Fn,timeUntilEpoch:()=>T,validateDataSetCreationStatusResponse:()=>Ln,validateFindPieceResponse:()=>zn,validatePieceAdditionStatusResponse:()=>Bn});const o={USDFC:"USDFC",FIL:"FIL"},p={mainnet:314,calibration:314159},d={ERC20:[{type:"event",name:"Approval",inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}]},{type:"event",name:"Transfer",inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}]},{type:"function",name:"allowance",stateMutability:"view",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{type:"uint256"}]},{type:"function",name:"approve",stateMutability:"nonpayable",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{type:"bool"}]},{type:"function",name:"balanceOf",stateMutability:"view",inputs:[{name:"account",type:"address"}],outputs:[{type:"uint256"}]},{type:"function",name:"decimals",stateMutability:"view",inputs:[],outputs:[{type:"uint8"}]},{type:"function",name:"name",stateMutability:"view",inputs:[],outputs:[{type:"string"}]},{type:"function",name:"symbol",stateMutability:"view",inputs:[],outputs:[{type:"string"}]},{type:"function",name:"totalSupply",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]},{type:"function",name:"transfer",stateMutability:"nonpayable",inputs:[{name:"recipient",type:"address"},{name:"amount",type:"uint256"}],outputs:[{type:"bool"}]},{type:"function",name:"transferFrom",stateMutability:"nonpayable",inputs:[{name:"sender",type:"address"},{name:"recipient",type:"address"},{name:"amount",type:"uint256"}],outputs:[{type:"bool"}]}],PAYMENTS:[{type:"constructor",inputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"COMMISSION_MAX_BPS",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"NETWORK_FEE",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"UPGRADE_INTERFACE_VERSION",outputs:[{name:"",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[{name:"",internalType:"address",type:"address"},{name:"",internalType:"address",type:"address"}],name:"accounts",outputs:[{name:"funds",internalType:"uint256",type:"uint256"},{name:"lockupCurrent",internalType:"uint256",type:"uint256"},{name:"lockupRate",internalType:"uint256",type:"uint256"},{name:"lockupLastSettledAt",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"to",internalType:"address",type:"address"},{name:"validator",internalType:"address",type:"address"},{name:"commissionRateBps",internalType:"uint256",type:"uint256"},{name:"serviceFeeRecipient",internalType:"address",type:"address"}],name:"createRail",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"to",internalType:"address",type:"address"},{name:"amount",internalType:"uint256",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"payable"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"to",internalType:"address",type:"address"},{name:"amount",internalType:"uint256",type:"uint256"},{name:"deadline",internalType:"uint256",type:"uint256"},{name:"v",internalType:"uint8",type:"uint8"},{name:"r",internalType:"bytes32",type:"bytes32"},{name:"s",internalType:"bytes32",type:"bytes32"}],name:"depositWithPermit",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"to",internalType:"address",type:"address"},{name:"amount",internalType:"uint256",type:"uint256"},{name:"deadline",internalType:"uint256",type:"uint256"},{name:"v",internalType:"uint8",type:"uint8"},{name:"r",internalType:"bytes32",type:"bytes32"},{name:"s",internalType:"bytes32",type:"bytes32"},{name:"operator",internalType:"address",type:"address"},{name:"rateAllowance",internalType:"uint256",type:"uint256"},{name:"lockupAllowance",internalType:"uint256",type:"uint256"},{name:"maxLockupPeriod",internalType:"uint256",type:"uint256"}],name:"depositWithPermitAndApproveOperator",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"to",internalType:"address",type:"address"},{name:"amount",internalType:"uint256",type:"uint256"},{name:"deadline",internalType:"uint256",type:"uint256"},{name:"v",internalType:"uint8",type:"uint8"},{name:"r",internalType:"bytes32",type:"bytes32"},{name:"s",internalType:"bytes32",type:"bytes32"},{name:"operator",internalType:"address",type:"address"},{name:"rateAllowanceIncrease",internalType:"uint256",type:"uint256"},{name:"lockupAllowanceIncrease",internalType:"uint256",type:"uint256"}],name:"depositWithPermitAndIncreaseOperatorApproval",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"owner",internalType:"address",type:"address"}],name:"getAccountInfoIfSettled",outputs:[{name:"fundedUntilEpoch",internalType:"uint256",type:"uint256"},{name:"currentFunds",internalType:"uint256",type:"uint256"},{name:"availableFunds",internalType:"uint256",type:"uint256"},{name:"currentLockupRate",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"getRail",outputs:[{name:"",internalType:"struct Payments.RailView",type:"tuple",components:[{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"to",internalType:"address",type:"address"},{name:"operator",internalType:"address",type:"address"},{name:"validator",internalType:"address",type:"address"},{name:"paymentRate",internalType:"uint256",type:"uint256"},{name:"lockupPeriod",internalType:"uint256",type:"uint256"},{name:"lockupFixed",internalType:"uint256",type:"uint256"},{name:"settledUpTo",internalType:"uint256",type:"uint256"},{name:"endEpoch",internalType:"uint256",type:"uint256"},{name:"commissionRateBps",internalType:"uint256",type:"uint256"},{name:"serviceFeeRecipient",internalType:"address",type:"address"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"payee",internalType:"address",type:"address"},{name:"token",internalType:"address",type:"address"}],name:"getRailsForPayeeAndToken",outputs:[{name:"",internalType:"struct Payments.RailInfo[]",type:"tuple[]",components:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"isTerminated",internalType:"bool",type:"bool"},{name:"endEpoch",internalType:"uint256",type:"uint256"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"payer",internalType:"address",type:"address"},{name:"token",internalType:"address",type:"address"}],name:"getRailsForPayerAndToken",outputs:[{name:"",internalType:"struct Payments.RailInfo[]",type:"tuple[]",components:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"isTerminated",internalType:"bool",type:"bool"},{name:"endEpoch",internalType:"uint256",type:"uint256"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"getRateChangeQueueSize",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"",internalType:"address",type:"address"}],name:"hasCollectedFees",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"operator",internalType:"address",type:"address"},{name:"rateAllowanceIncrease",internalType:"uint256",type:"uint256"},{name:"lockupAllowanceIncrease",internalType:"uint256",type:"uint256"}],name:"increaseOperatorApproval",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"period",internalType:"uint256",type:"uint256"},{name:"lockupFixed",internalType:"uint256",type:"uint256"}],name:"modifyRailLockup",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"newRate",internalType:"uint256",type:"uint256"},{name:"oneTimePayment",internalType:"uint256",type:"uint256"}],name:"modifyRailPayment",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"",internalType:"address",type:"address"},{name:"",internalType:"address",type:"address"},{name:"",internalType:"address",type:"address"}],name:"operatorApprovals",outputs:[{name:"isApproved",internalType:"bool",type:"bool"},{name:"rateAllowance",internalType:"uint256",type:"uint256"},{name:"lockupAllowance",internalType:"uint256",type:"uint256"},{name:"rateUsage",internalType:"uint256",type:"uint256"},{name:"lockupUsage",internalType:"uint256",type:"uint256"},{name:"maxLockupPeriod",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"owner",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"proxiableUUID",outputs:[{name:"",internalType:"bytes32",type:"bytes32"}],stateMutability:"view"},{type:"function",inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"operator",internalType:"address",type:"address"},{name:"approved",internalType:"bool",type:"bool"},{name:"rateAllowance",internalType:"uint256",type:"uint256"},{name:"lockupAllowance",internalType:"uint256",type:"uint256"},{name:"maxLockupPeriod",internalType:"uint256",type:"uint256"}],name:"setOperatorApproval",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"untilEpoch",internalType:"uint256",type:"uint256"}],name:"settleRail",outputs:[{name:"totalSettledAmount",internalType:"uint256",type:"uint256"},{name:"totalNetPayeeAmount",internalType:"uint256",type:"uint256"},{name:"totalOperatorCommission",internalType:"uint256",type:"uint256"},{name:"finalSettledEpoch",internalType:"uint256",type:"uint256"},{name:"note",internalType:"string",type:"string"}],stateMutability:"payable"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"settleTerminatedRailWithoutValidation",outputs:[{name:"totalSettledAmount",internalType:"uint256",type:"uint256"},{name:"totalNetPayeeAmount",internalType:"uint256",type:"uint256"},{name:"totalOperatorCommission",internalType:"uint256",type:"uint256"},{name:"finalSettledEpoch",internalType:"uint256",type:"uint256"},{name:"note",internalType:"string",type:"string"}],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"terminateRail",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newOwner",internalType:"address",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newImplementation",internalType:"address",type:"address"},{name:"data",internalType:"bytes",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"amount",internalType:"uint256",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"token",internalType:"address",type:"address"},{name:"to",internalType:"address",type:"address"},{name:"amount",internalType:"uint256",type:"uint256"}],name:"withdrawTo",outputs:[],stateMutability:"nonpayable"},{type:"event",anonymous:!1,inputs:[{name:"token",internalType:"address",type:"address",indexed:!0},{name:"owner",internalType:"address",type:"address",indexed:!0},{name:"lockupCurrent",internalType:"uint256",type:"uint256",indexed:!1},{name:"lockupRate",internalType:"uint256",type:"uint256",indexed:!1},{name:"lockupLastSettledAt",internalType:"uint256",type:"uint256",indexed:!1}],name:"AccountLockupSettled"},{type:"event",anonymous:!1,inputs:[{name:"token",internalType:"address",type:"address",indexed:!0},{name:"from",internalType:"address",type:"address",indexed:!0},{name:"to",internalType:"address",type:"address",indexed:!0},{name:"amount",internalType:"uint256",type:"uint256",indexed:!1},{name:"usedPermit",internalType:"bool",type:"bool",indexed:!1}],name:"DepositRecorded"},{type:"event",anonymous:!1,inputs:[{name:"version",internalType:"uint64",type:"uint64",indexed:!1}],name:"Initialized"},{type:"event",anonymous:!1,inputs:[{name:"token",internalType:"address",type:"address",indexed:!0},{name:"client",internalType:"address",type:"address",indexed:!0},{name:"operator",internalType:"address",type:"address",indexed:!0},{name:"approved",internalType:"bool",type:"bool",indexed:!1},{name:"rateAllowance",internalType:"uint256",type:"uint256",indexed:!1},{name:"lockupAllowance",internalType:"uint256",type:"uint256",indexed:!1},{name:"maxLockupPeriod",internalType:"uint256",type:"uint256",indexed:!1}],name:"OperatorApprovalUpdated"},{type:"event",anonymous:!1,inputs:[{name:"previousOwner",internalType:"address",type:"address",indexed:!0},{name:"newOwner",internalType:"address",type:"address",indexed:!0}],name:"OwnershipTransferred"},{type:"event",anonymous:!1,inputs:[{name:"railId",internalType:"uint256",type:"uint256",indexed:!0},{name:"payer",internalType:"address",type:"address",indexed:!0},{name:"payee",internalType:"address",type:"address",indexed:!0},{name:"token",internalType:"address",type:"address",indexed:!1},{name:"operator",internalType:"address",type:"address",indexed:!1},{name:"validator",internalType:"address",type:"address",indexed:!1},{name:"serviceFeeRecipient",internalType:"address",type:"address",indexed:!1},{name:"commissionRateBps",internalType:"uint256",type:"uint256",indexed:!1}],name:"RailCreated"},{type:"event",anonymous:!1,inputs:[{name:"railId",internalType:"uint256",type:"uint256",indexed:!0}],name:"RailFinalized"},{type:"event",anonymous:!1,inputs:[{name:"railId",internalType:"uint256",type:"uint256",indexed:!0},{name:"oldLockupPeriod",internalType:"uint256",type:"uint256",indexed:!1},{name:"newLockupPeriod",internalType:"uint256",type:"uint256",indexed:!1},{name:"oldLockupFixed",internalType:"uint256",type:"uint256",indexed:!1},{name:"newLockupFixed",internalType:"uint256",type:"uint256",indexed:!1}],name:"RailLockupModified"},{type:"event",anonymous:!1,inputs:[{name:"railId",internalType:"uint256",type:"uint256",indexed:!0},{name:"netPayeeAmount",internalType:"uint256",type:"uint256",indexed:!1},{name:"operatorCommission",internalType:"uint256",type:"uint256",indexed:!1}],name:"RailOneTimePaymentProcessed"},{type:"event",anonymous:!1,inputs:[{name:"railId",internalType:"uint256",type:"uint256",indexed:!0},{name:"oldRate",internalType:"uint256",type:"uint256",indexed:!1},{name:"newRate",internalType:"uint256",type:"uint256",indexed:!1}],name:"RailRateModified"},{type:"event",anonymous:!1,inputs:[{name:"railId",internalType:"uint256",type:"uint256",indexed:!0},{name:"totalSettledAmount",internalType:"uint256",type:"uint256",indexed:!1},{name:"totalNetPayeeAmount",internalType:"uint256",type:"uint256",indexed:!1},{name:"operatorCommission",internalType:"uint256",type:"uint256",indexed:!1},{name:"settledUpTo",internalType:"uint256",type:"uint256",indexed:!1}],name:"RailSettled"},{type:"event",anonymous:!1,inputs:[{name:"railId",internalType:"uint256",type:"uint256",indexed:!0},{name:"by",internalType:"address",type:"address",indexed:!0},{name:"endEpoch",internalType:"uint256",type:"uint256",indexed:!1}],name:"RailTerminated"},{type:"event",anonymous:!1,inputs:[{name:"implementation",internalType:"address",type:"address",indexed:!0}],name:"Upgraded"},{type:"event",anonymous:!1,inputs:[{name:"token",internalType:"address",type:"address",indexed:!0},{name:"from",internalType:"address",type:"address",indexed:!0},{name:"to",internalType:"address",type:"address",indexed:!0},{name:"amount",internalType:"uint256",type:"uint256",indexed:!1}],name:"WithdrawRecorded"},{type:"error",inputs:[{name:"target",internalType:"address",type:"address"}],name:"AddressEmptyCode"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"maxSettlementEpoch",internalType:"uint256",type:"uint256"},{name:"blockNumber",internalType:"uint256",type:"uint256"}],name:"CannotModifyTerminatedRailBeyondEndEpoch"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"maxAllowedEpoch",internalType:"uint256",type:"uint256"},{name:"attemptedEpoch",internalType:"uint256",type:"uint256"}],name:"CannotSettleFutureEpochs"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"requiredBlock",internalType:"uint256",type:"uint256"},{name:"currentBlock",internalType:"uint256",type:"uint256"}],name:"CannotSettleTerminatedRailBeforeMaxEpoch"},{type:"error",inputs:[{name:"maxAllowed",internalType:"uint256",type:"uint256"},{name:"actual",internalType:"uint256",type:"uint256"}],name:"CommissionRateTooHigh"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"oldLockup",internalType:"uint256",type:"uint256"},{name:"currentLockup",internalType:"uint256",type:"uint256"}],name:"CurrentLockupLessThanOldLockup"},{type:"error",inputs:[{name:"implementation",internalType:"address",type:"address"}],name:"ERC1967InvalidImplementation"},{type:"error",inputs:[],name:"ERC1967NonPayable"},{type:"error",inputs:[],name:"FailedCall"},{type:"error",inputs:[{name:"from",internalType:"address",type:"address"},{name:"token",internalType:"address",type:"address"},{name:"currentLockup",internalType:"uint256",type:"uint256"},{name:"lockupReduction",internalType:"uint256",type:"uint256"}],name:"InsufficientCurrentLockup"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"required",internalType:"uint256",type:"uint256"},{name:"actual",internalType:"uint256",type:"uint256"}],name:"InsufficientFundsForOneTimePayment"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"available",internalType:"uint256",type:"uint256"},{name:"required",internalType:"uint256",type:"uint256"}],name:"InsufficientFundsForSettlement"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"available",internalType:"uint256",type:"uint256"},{name:"required",internalType:"uint256",type:"uint256"}],name:"InsufficientLockupForSettlement"},{type:"error",inputs:[{name:"required",internalType:"uint256",type:"uint256"},{name:"sent",internalType:"uint256",type:"uint256"}],name:"InsufficientNativeTokenForBurn"},{type:"error",inputs:[{name:"available",internalType:"uint256",type:"uint256"},{name:"requested",internalType:"uint256",type:"uint256"}],name:"InsufficientUnlockedFunds"},{type:"error",inputs:[],name:"InvalidInitialization"},{type:"error",inputs:[{name:"nextRateChangeUntilEpoch",internalType:"uint256",type:"uint256"},{name:"processedEpoch",internalType:"uint256",type:"uint256"}],name:"InvalidRateChangeQueueState"},{type:"error",inputs:[{name:"actualPeriod",internalType:"uint256",type:"uint256"},{name:"actualLockupFixed",internalType:"uint256",type:"uint256"},{name:"attemptedPeriod",internalType:"uint256",type:"uint256"},{name:"attemptedLockupFixed",internalType:"uint256",type:"uint256"}],name:"InvalidTerminatedRailModification"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"},{name:"account",internalType:"address",type:"address"},{name:"lockupCurrent",internalType:"uint256",type:"uint256"},{name:"fundsCurrent",internalType:"uint256",type:"uint256"}],name:"LockupExceedsFundsInvariant"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"actualLockupFixed",internalType:"uint256",type:"uint256"},{name:"attemptedLockupFixed",internalType:"uint256",type:"uint256"}],name:"LockupFixedIncreaseNotAllowedDueToInsufficientFunds"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"expectedLockup",internalType:"uint256",type:"uint256"},{name:"actualLockup",internalType:"uint256",type:"uint256"}],name:"LockupInconsistencyDuringRailFinalization"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"from",internalType:"address",type:"address"},{name:"isSettled",internalType:"bool",type:"bool"},{name:"currentRate",internalType:"uint256",type:"uint256"},{name:"attemptedRate",internalType:"uint256",type:"uint256"}],name:"LockupNotSettledRateChangeNotAllowed"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"},{name:"from",internalType:"address",type:"address"},{name:"actualLockupPeriod",internalType:"uint256",type:"uint256"},{name:"attemptedLockupPeriod",internalType:"uint256",type:"uint256"}],name:"LockupPeriodChangeNotAllowedDueToInsufficientFunds"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"},{name:"operator",internalType:"address",type:"address"},{name:"maxAllowedPeriod",internalType:"uint256",type:"uint256"},{name:"requestedPeriod",internalType:"uint256",type:"uint256"}],name:"LockupPeriodExceedsOperatorMaximum"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"from",internalType:"address",type:"address"},{name:"paymentRate",internalType:"uint256",type:"uint256"},{name:"lockupRate",internalType:"uint256",type:"uint256"}],name:"LockupRateInconsistent"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"from",internalType:"address",type:"address"},{name:"lockupRate",internalType:"uint256",type:"uint256"},{name:"oldRate",internalType:"uint256",type:"uint256"}],name:"LockupRateLessThanOldRate"},{type:"error",inputs:[],name:"MissingServiceFeeRecipient"},{type:"error",inputs:[{name:"required",internalType:"uint256",type:"uint256"},{name:"sent",internalType:"uint256",type:"uint256"}],name:"MustSendExactNativeAmount"},{type:"error",inputs:[{name:"sent",internalType:"uint256",type:"uint256"}],name:"NativeTokenNotAccepted"},{type:"error",inputs:[],name:"NativeTokenNotSupported"},{type:"error",inputs:[{name:"to",internalType:"address",type:"address"},{name:"amount",internalType:"uint256",type:"uint256"}],name:"NativeTransferFailed"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"expectedSettledUpTo",internalType:"uint256",type:"uint256"},{name:"actualSettledUpTo",internalType:"uint256",type:"uint256"}],name:"NoProgressInSettlement"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"allowedClient",internalType:"address",type:"address"},{name:"allowedOperator",internalType:"address",type:"address"},{name:"caller",internalType:"address",type:"address"}],name:"NotAuthorizedToTerminateRail"},{type:"error",inputs:[],name:"NotInitializing"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"available",internalType:"uint256",type:"uint256"},{name:"required",internalType:"uint256",type:"uint256"}],name:"OneTimePaymentExceedsLockup"},{type:"error",inputs:[{name:"expected",internalType:"address",type:"address"},{name:"caller",internalType:"address",type:"address"}],name:"OnlyRailClientAllowed"},{type:"error",inputs:[{name:"expected",internalType:"address",type:"address"},{name:"caller",internalType:"address",type:"address"}],name:"OnlyRailOperatorAllowed"},{type:"error",inputs:[{name:"expectedFrom",internalType:"address",type:"address"},{name:"expectedOperator",internalType:"address",type:"address"},{name:"expectedTo",internalType:"address",type:"address"},{name:"caller",internalType:"address",type:"address"}],name:"OnlyRailParticipantAllowed"},{type:"error",inputs:[{name:"allowed",internalType:"uint256",type:"uint256"},{name:"attemptedUsage",internalType:"uint256",type:"uint256"}],name:"OperatorLockupAllowanceExceeded"},{type:"error",inputs:[{name:"from",internalType:"address",type:"address"},{name:"operator",internalType:"address",type:"address"}],name:"OperatorNotApproved"},{type:"error",inputs:[{name:"allowed",internalType:"uint256",type:"uint256"},{name:"attemptedUsage",internalType:"uint256",type:"uint256"}],name:"OperatorRateAllowanceExceeded"},{type:"error",inputs:[{name:"owner",internalType:"address",type:"address"}],name:"OwnableInvalidOwner"},{type:"error",inputs:[{name:"account",internalType:"address",type:"address"}],name:"OwnableUnauthorizedAccount"},{type:"error",inputs:[{name:"expected",internalType:"address",type:"address"},{name:"actual",internalType:"address",type:"address"}],name:"PermitRecipientMustBeMsgSender"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"RailAlreadyTerminated"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"RailInactiveOrSettled"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"RailNotTerminated"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"RateChangeNotAllowedOnTerminatedRail"},{type:"error",inputs:[{name:"nextUntilEpoch",internalType:"uint256",type:"uint256"}],name:"RateChangeQueueNotEmpty"},{type:"error",inputs:[],name:"ReentrancyGuardReentrantCall"},{type:"error",inputs:[{name:"token",internalType:"address",type:"address"}],name:"SafeERC20FailedOperation"},{type:"error",inputs:[],name:"UUPSUnauthorizedCallContext"},{type:"error",inputs:[{name:"slot",internalType:"bytes32",type:"bytes32"}],name:"UUPSUnsupportedProxiableUUID"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"maxAllowed",internalType:"uint256",type:"uint256"},{name:"attempted",internalType:"uint256",type:"uint256"}],name:"ValidatorModifiedAmountExceedsMaximum"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"allowedStart",internalType:"uint256",type:"uint256"},{name:"attemptedStart",internalType:"uint256",type:"uint256"}],name:"ValidatorSettledBeforeSegmentStart"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"allowedEnd",internalType:"uint256",type:"uint256"},{name:"attemptedEnd",internalType:"uint256",type:"uint256"}],name:"ValidatorSettledBeyondSegmentEnd"},{type:"error",inputs:[{name:"varName",internalType:"string",type:"string"}],name:"ZeroAddressNotAllowed"}],PDP_VERIFIER:[{type:"constructor",inputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"BURN_ACTOR",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"EXTRA_DATA_MAX_SIZE",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"FIL_USD_PRICE_FEED_ID",outputs:[{name:"",internalType:"bytes32",type:"bytes32"}],stateMutability:"view"},{type:"function",inputs:[],name:"LEAF_SIZE",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"MAX_ENQUEUED_REMOVALS",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"MAX_PIECE_SIZE_LOG2",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"NO_CHALLENGE_SCHEDULED",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"NO_PROVEN_EPOCH",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"PYTH",outputs:[{name:"",internalType:"contract IPyth",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"RANDOMNESS_PRECOMPILE",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"SECONDS_IN_DAY",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"UPGRADE_INTERFACE_VERSION",outputs:[{name:"",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[],name:"VERSION",outputs:[{name:"",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"pieceData",internalType:"struct Cids.Cid[]",type:"tuple[]",components:[{name:"data",internalType:"bytes",type:"bytes"}]},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"addPieces",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"estimatedGasFee",internalType:"uint256",type:"uint256"}],name:"calculateProofFee",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"claimDataSetStorageProvider",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"listenerAddr",internalType:"address",type:"address"},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"createDataSet",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"payable"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"dataSetLive",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"deleteDataSet",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"leafIndexs",internalType:"uint256[]",type:"uint256[]"}],name:"findPieceIds",outputs:[{name:"",internalType:"struct IPDPTypes.PieceIdAndOffset[]",type:"tuple[]",components:[{name:"pieceId",internalType:"uint256",type:"uint256"},{name:"offset",internalType:"uint256",type:"uint256"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getActivePieceCount",outputs:[{name:"activeCount",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"offset",internalType:"uint256",type:"uint256"},{name:"limit",internalType:"uint256",type:"uint256"}],name:"getActivePieces",outputs:[{name:"pieces",internalType:"struct Cids.Cid[]",type:"tuple[]",components:[{name:"data",internalType:"bytes",type:"bytes"}]},{name:"pieceIds",internalType:"uint256[]",type:"uint256[]"},{name:"rawSizes",internalType:"uint256[]",type:"uint256[]"},{name:"hasMore",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[],name:"getChallengeFinality",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getChallengeRange",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getDataSetLastProvenEpoch",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getDataSetLeafCount",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getDataSetListener",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getDataSetStorageProvider",outputs:[{name:"",internalType:"address",type:"address"},{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"getFILUSDPrice",outputs:[{name:"",internalType:"uint64",type:"uint64"},{name:"",internalType:"int32",type:"int32"}],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getNextChallengeEpoch",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"getNextDataSetId",outputs:[{name:"",internalType:"uint64",type:"uint64"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getNextPieceId",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"pieceId",internalType:"uint256",type:"uint256"}],name:"getPieceCid",outputs:[{name:"",internalType:"struct Cids.Cid",type:"tuple",components:[{name:"data",internalType:"bytes",type:"bytes"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"pieceId",internalType:"uint256",type:"uint256"}],name:"getPieceLeafCount",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"epoch",internalType:"uint256",type:"uint256"}],name:"getRandomness",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"getScheduledRemovals",outputs:[{name:"",internalType:"uint256[]",type:"uint256[]"}],stateMutability:"view"},{type:"function",inputs:[{name:"_challengeFinality",internalType:"uint256",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"migrate",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"challengeEpoch",internalType:"uint256",type:"uint256"},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"nextProvingPeriod",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"owner",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"pieceId",internalType:"uint256",type:"uint256"}],name:"pieceChallengable",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"pieceId",internalType:"uint256",type:"uint256"}],name:"pieceLive",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"newStorageProvider",internalType:"address",type:"address"}],name:"proposeDataSetStorageProvider",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"proofs",internalType:"struct IPDPTypes.Proof[]",type:"tuple[]",components:[{name:"leaf",internalType:"bytes32",type:"bytes32"},{name:"proof",internalType:"bytes32[]",type:"bytes32[]"}]}],name:"provePossession",outputs:[],stateMutability:"payable"},{type:"function",inputs:[],name:"proxiableUUID",outputs:[{name:"",internalType:"bytes32",type:"bytes32"}],stateMutability:"view"},{type:"function",inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"},{name:"pieceIds",internalType:"uint256[]",type:"uint256[]"},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"schedulePieceDeletions",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newOwner",internalType:"address",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newImplementation",internalType:"address",type:"address"},{name:"data",internalType:"bytes",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable"},{type:"event",anonymous:!1,inputs:[{name:"version",internalType:"string",type:"string",indexed:!1},{name:"implementation",internalType:"address",type:"address",indexed:!1}],name:"ContractUpgraded"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0},{name:"storageProvider",internalType:"address",type:"address",indexed:!0}],name:"DataSetCreated"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0},{name:"deletedLeafCount",internalType:"uint256",type:"uint256",indexed:!1}],name:"DataSetDeleted"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0}],name:"DataSetEmpty"},{type:"event",anonymous:!1,inputs:[{name:"version",internalType:"uint64",type:"uint64",indexed:!1}],name:"Initialized"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0},{name:"challengeEpoch",internalType:"uint256",type:"uint256",indexed:!1},{name:"leafCount",internalType:"uint256",type:"uint256",indexed:!1}],name:"NextProvingPeriod"},{type:"event",anonymous:!1,inputs:[{name:"previousOwner",internalType:"address",type:"address",indexed:!0},{name:"newOwner",internalType:"address",type:"address",indexed:!0}],name:"OwnershipTransferred"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0},{name:"pieceIds",internalType:"uint256[]",type:"uint256[]",indexed:!1},{name:"pieceCids",internalType:"struct Cids.Cid[]",type:"tuple[]",components:[{name:"data",internalType:"bytes",type:"bytes"}],indexed:!1}],name:"PiecesAdded"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0},{name:"pieceIds",internalType:"uint256[]",type:"uint256[]",indexed:!1}],name:"PiecesRemoved"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0},{name:"challenges",internalType:"struct IPDPTypes.PieceIdAndOffset[]",type:"tuple[]",components:[{name:"pieceId",internalType:"uint256",type:"uint256"},{name:"offset",internalType:"uint256",type:"uint256"}],indexed:!1}],name:"PossessionProven"},{type:"event",anonymous:!1,inputs:[{name:"reason",internalType:"bytes",type:"bytes",indexed:!1}],name:"PriceOracleFailure"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0},{name:"fee",internalType:"uint256",type:"uint256",indexed:!1},{name:"price",internalType:"uint64",type:"uint64",indexed:!1},{name:"expo",internalType:"int32",type:"int32",indexed:!1}],name:"ProofFeePaid"},{type:"event",anonymous:!1,inputs:[{name:"setId",internalType:"uint256",type:"uint256",indexed:!0},{name:"oldStorageProvider",internalType:"address",type:"address",indexed:!0},{name:"newStorageProvider",internalType:"address",type:"address",indexed:!0}],name:"StorageProviderChanged"},{type:"event",anonymous:!1,inputs:[{name:"implementation",internalType:"address",type:"address",indexed:!0}],name:"Upgraded"},{type:"error",inputs:[{name:"target",internalType:"address",type:"address"}],name:"AddressEmptyCode"},{type:"error",inputs:[{name:"implementation",internalType:"address",type:"address"}],name:"ERC1967InvalidImplementation"},{type:"error",inputs:[],name:"ERC1967NonPayable"},{type:"error",inputs:[],name:"FailedCall"},{type:"error",inputs:[{name:"idx",internalType:"uint256",type:"uint256"},{name:"msg",internalType:"string",type:"string"}],name:"IndexedError"},{type:"error",inputs:[],name:"InvalidInitialization"},{type:"error",inputs:[],name:"NotInitializing"},{type:"error",inputs:[{name:"owner",internalType:"address",type:"address"}],name:"OwnableInvalidOwner"},{type:"error",inputs:[{name:"account",internalType:"address",type:"address"}],name:"OwnableUnauthorizedAccount"},{type:"error",inputs:[],name:"UUPSUnauthorizedCallContext"},{type:"error",inputs:[{name:"slot",internalType:"bytes32",type:"bytes32"}],name:"UUPSUnsupportedProxiableUUID"}],WARM_STORAGE:[{type:"constructor",inputs:[{name:"_pdpVerifierAddress",internalType:"address",type:"address"},{name:"_paymentsContractAddress",internalType:"address",type:"address"},{name:"_usdfcTokenAddress",internalType:"address",type:"address"},{name:"_filCDNBeneficiaryAddress",internalType:"address",type:"address"},{name:"_serviceProviderRegistry",internalType:"contract ServiceProviderRegistry",type:"address"},{name:"_sessionKeyRegistry",internalType:"contract SessionKeyRegistry",type:"address"}],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"UPGRADE_INTERFACE_VERSION",outputs:[{name:"",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[],name:"VERSION",outputs:[{name:"",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],name:"addApprovedProvider",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"totalBytes",internalType:"uint256",type:"uint256"}],name:"calculateRatesPerEpoch",outputs:[{name:"storageRate",internalType:"uint256",type:"uint256"},{name:"cacheMissRate",internalType:"uint256",type:"uint256"},{name:"cdnRate",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"_maxProvingPeriod",internalType:"uint64",type:"uint64"},{name:"_challengeWindowSize",internalType:"uint256",type:"uint256"}],name:"configureProvingPeriod",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"serviceProvider",internalType:"address",type:"address"},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"dataSetCreated",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"",internalType:"uint256",type:"uint256"},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"dataSetDeleted",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"eip712Domain",outputs:[{name:"fields",internalType:"bytes1",type:"bytes1"},{name:"name",internalType:"string",type:"string"},{name:"version",internalType:"string",type:"string"},{name:"chainId",internalType:"uint256",type:"uint256"},{name:"verifyingContract",internalType:"address",type:"address"},{name:"salt",internalType:"bytes32",type:"bytes32"},{name:"extensions",internalType:"uint256[]",type:"uint256[]"}],stateMutability:"view"},{type:"function",inputs:[{name:"slot",internalType:"bytes32",type:"bytes32"}],name:"extsload",outputs:[{name:"",internalType:"bytes32",type:"bytes32"}],stateMutability:"view"},{type:"function",inputs:[{name:"slot",internalType:"bytes32",type:"bytes32"},{name:"size",internalType:"uint256",type:"uint256"}],name:"extsloadStruct",outputs:[{name:"",internalType:"bytes32[]",type:"bytes32[]"}],stateMutability:"view"},{type:"function",inputs:[],name:"filCDNBeneficiaryAddress",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"getEffectiveRates",outputs:[{name:"serviceFee",internalType:"uint256",type:"uint256"},{name:"spPayment",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"epoch",internalType:"uint256",type:"uint256"}],name:"getProvingPeriodForEpoch",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"getServicePrice",outputs:[{name:"pricing",internalType:"struct FilecoinWarmStorageService.ServicePricing",type:"tuple",components:[{name:"pricePerTiBPerMonthNoCDN",internalType:"uint256",type:"uint256"},{name:"pricePerTiBPerMonthWithCDN",internalType:"uint256",type:"uint256"},{name:"tokenAddress",internalType:"address",type:"address"},{name:"epochsPerMonth",internalType:"uint256",type:"uint256"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"_maxProvingPeriod",internalType:"uint64",type:"uint64"},{name:"_challengeWindowSize",internalType:"uint256",type:"uint256"},{name:"_filCDNControllerAddress",internalType:"address",type:"address"},{name:"_name",internalType:"string",type:"string"},{name:"_description",internalType:"string",type:"string"}],name:"initialize",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"epoch",internalType:"uint256",type:"uint256"}],name:"isEpochProven",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"_viewContract",internalType:"address",type:"address"}],name:"migrate",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"challengeEpoch",internalType:"uint256",type:"uint256"},{name:"leafCount",internalType:"uint256",type:"uint256"},{name:"",internalType:"bytes",type:"bytes"}],name:"nextProvingPeriod",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"owner",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"paymentsContractAddress",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"pdpVerifierAddress",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"firstAdded",internalType:"uint256",type:"uint256"},{name:"pieceData",internalType:"struct Cids.Cid[]",type:"tuple[]",components:[{name:"data",internalType:"bytes",type:"bytes"}]},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"piecesAdded",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"pieceIds",internalType:"uint256[]",type:"uint256[]"},{name:"extraData",internalType:"bytes",type:"bytes"}],name:"piecesScheduledRemove",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"",internalType:"uint256",type:"uint256"},{name:"",internalType:"uint256",type:"uint256"},{name:"challengeCount",internalType:"uint256",type:"uint256"}],name:"possessionProven",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"proxiableUUID",outputs:[{name:"",internalType:"bytes32",type:"bytes32"}],stateMutability:"view"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"terminator",internalType:"address",type:"address"},{name:"endEpoch",internalType:"uint256",type:"uint256"}],name:"railTerminated",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"index",internalType:"uint256",type:"uint256"}],name:"removeApprovedProvider",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"serviceCommissionBps",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"serviceProviderRegistry",outputs:[{name:"",internalType:"contract ServiceProviderRegistry",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"sessionKeyRegistry",outputs:[{name:"",internalType:"contract SessionKeyRegistry",type:"address"}],stateMutability:"view"},{type:"function",inputs:[{name:"_viewContract",internalType:"address",type:"address"}],name:"setViewContract",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"oldServiceProvider",internalType:"address",type:"address"},{name:"newServiceProvider",internalType:"address",type:"address"},{name:"",internalType:"bytes",type:"bytes"}],name:"storageProviderChanged",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"terminateCDNService",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"terminateService",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newController",internalType:"address",type:"address"}],name:"transferFilCDNController",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newOwner",internalType:"address",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newCommissionBps",internalType:"uint256",type:"uint256"}],name:"updateServiceCommission",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newImplementation",internalType:"address",type:"address"},{name:"data",internalType:"bytes",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable"},{type:"function",inputs:[],name:"usdfcTokenAddress",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"},{name:"proposedAmount",internalType:"uint256",type:"uint256"},{name:"fromEpoch",internalType:"uint256",type:"uint256"},{name:"toEpoch",internalType:"uint256",type:"uint256"},{name:"",internalType:"uint256",type:"uint256"}],name:"validatePayment",outputs:[{name:"result",internalType:"struct IValidator.ValidationResult",type:"tuple",components:[{name:"modifiedAmount",internalType:"uint256",type:"uint256"},{name:"settleUpto",internalType:"uint256",type:"uint256"},{name:"note",internalType:"string",type:"string"}]}],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"viewContractAddress",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"event",anonymous:!1,inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"endEpoch",internalType:"uint256",type:"uint256",indexed:!1},{name:"cacheMissRailId",internalType:"uint256",type:"uint256",indexed:!1},{name:"cdnRailId",internalType:"uint256",type:"uint256",indexed:!1}],name:"CDNPaymentTerminated"},{type:"event",anonymous:!1,inputs:[{name:"caller",internalType:"address",type:"address",indexed:!0},{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"cacheMissRailId",internalType:"uint256",type:"uint256",indexed:!1},{name:"cdnRailId",internalType:"uint256",type:"uint256",indexed:!1}],name:"CDNServiceTerminated"},{type:"event",anonymous:!1,inputs:[{name:"version",internalType:"string",type:"string",indexed:!1},{name:"implementation",internalType:"address",type:"address",indexed:!1}],name:"ContractUpgraded"},{type:"event",anonymous:!1,inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0},{name:"pdpRailId",internalType:"uint256",type:"uint256",indexed:!1},{name:"cacheMissRailId",internalType:"uint256",type:"uint256",indexed:!1},{name:"cdnRailId",internalType:"uint256",type:"uint256",indexed:!1},{name:"payer",internalType:"address",type:"address",indexed:!1},{name:"serviceProvider",internalType:"address",type:"address",indexed:!1},{name:"payee",internalType:"address",type:"address",indexed:!1},{name:"metadataKeys",internalType:"string[]",type:"string[]",indexed:!1},{name:"metadataValues",internalType:"string[]",type:"string[]",indexed:!1}],name:"DataSetCreated"},{type:"event",anonymous:!1,inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"oldServiceProvider",internalType:"address",type:"address",indexed:!0},{name:"newServiceProvider",internalType:"address",type:"address",indexed:!0}],name:"DataSetServiceProviderChanged"},{type:"event",anonymous:!1,inputs:[],name:"EIP712DomainChanged"},{type:"event",anonymous:!1,inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"periodsFaulted",internalType:"uint256",type:"uint256",indexed:!1},{name:"deadline",internalType:"uint256",type:"uint256",indexed:!1}],name:"FaultRecord"},{type:"event",anonymous:!1,inputs:[{name:"oldController",internalType:"address",type:"address",indexed:!1},{name:"newController",internalType:"address",type:"address",indexed:!1}],name:"FilCDNControllerChanged"},{type:"event",anonymous:!1,inputs:[{name:"name",internalType:"string",type:"string",indexed:!1},{name:"description",internalType:"string",type:"string",indexed:!1}],name:"FilecoinServiceDeployed"},{type:"event",anonymous:!1,inputs:[{name:"version",internalType:"uint64",type:"uint64",indexed:!1}],name:"Initialized"},{type:"event",anonymous:!1,inputs:[{name:"previousOwner",internalType:"address",type:"address",indexed:!0},{name:"newOwner",internalType:"address",type:"address",indexed:!0}],name:"OwnershipTransferred"},{type:"event",anonymous:!1,inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"endEpoch",internalType:"uint256",type:"uint256",indexed:!1},{name:"pdpRailId",internalType:"uint256",type:"uint256",indexed:!1}],name:"PDPPaymentTerminated"},{type:"event",anonymous:!1,inputs:[{name:"railId",internalType:"uint256",type:"uint256",indexed:!1},{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!1},{name:"originalAmount",internalType:"uint256",type:"uint256",indexed:!1},{name:"modifiedAmount",internalType:"uint256",type:"uint256",indexed:!1},{name:"faultedEpochs",internalType:"uint256",type:"uint256",indexed:!1}],name:"PaymentArbitrated"},{type:"event",anonymous:!1,inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"pieceId",internalType:"uint256",type:"uint256",indexed:!0},{name:"keys",internalType:"string[]",type:"string[]",indexed:!1},{name:"values",internalType:"string[]",type:"string[]",indexed:!1}],name:"PieceAdded"},{type:"event",anonymous:!1,inputs:[{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0}],name:"ProviderApproved"},{type:"event",anonymous:!1,inputs:[{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0}],name:"ProviderUnapproved"},{type:"event",anonymous:!1,inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"railId",internalType:"uint256",type:"uint256",indexed:!1},{name:"newRate",internalType:"uint256",type:"uint256",indexed:!1}],name:"RailRateUpdated"},{type:"event",anonymous:!1,inputs:[{name:"caller",internalType:"address",type:"address",indexed:!0},{name:"dataSetId",internalType:"uint256",type:"uint256",indexed:!0},{name:"pdpRailId",internalType:"uint256",type:"uint256",indexed:!1},{name:"cacheMissRailId",internalType:"uint256",type:"uint256",indexed:!1},{name:"cdnRailId",internalType:"uint256",type:"uint256",indexed:!1}],name:"ServiceTerminated"},{type:"event",anonymous:!1,inputs:[{name:"implementation",internalType:"address",type:"address",indexed:!0}],name:"Upgraded"},{type:"event",anonymous:!1,inputs:[{name:"viewContract",internalType:"address",type:"address",indexed:!0}],name:"ViewContractSet"},{type:"error",inputs:[{name:"target",internalType:"address",type:"address"}],name:"AddressEmptyCode"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"expectedPayer",internalType:"address",type:"address"},{name:"expectedPayee",internalType:"address",type:"address"},{name:"caller",internalType:"address",type:"address"}],name:"CallerNotPayerOrPayee"},{type:"error",inputs:[{name:"expected",internalType:"address",type:"address"},{name:"actual",internalType:"address",type:"address"}],name:"CallerNotPayments"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"windowStart",internalType:"uint256",type:"uint256"},{name:"nowBlock",internalType:"uint256",type:"uint256"}],name:"ChallengeWindowTooEarly"},{type:"error",inputs:[{name:"commissionType",internalType:"enum Errors.CommissionType",type:"uint8"},{name:"max",internalType:"uint256",type:"uint256"},{name:"actual",internalType:"uint256",type:"uint256"}],name:"CommissionExceedsMaximum"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"DataSetNotFoundForRail"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"DataSetNotRegistered"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"DataSetPaymentAlreadyTerminated"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"pdpEndEpoch",internalType:"uint256",type:"uint256"},{name:"currentBlock",internalType:"uint256",type:"uint256"}],name:"DataSetPaymentBeyondEndEpoch"},{type:"error",inputs:[],name:"DivisionByZero"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"key",internalType:"string",type:"string"}],name:"DuplicateMetadataKey"},{type:"error",inputs:[{name:"implementation",internalType:"address",type:"address"}],name:"ERC1967InvalidImplementation"},{type:"error",inputs:[],name:"ERC1967NonPayable"},{type:"error",inputs:[],name:"ExtraDataRequired"},{type:"error",inputs:[],name:"FailedCall"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"FilCDNPaymentAlreadyTerminated"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"FilCDNServiceNotConfigured"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"minExpected",internalType:"uint256",type:"uint256"},{name:"actual",internalType:"uint256",type:"uint256"}],name:"InvalidChallengeCount"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"minAllowed",internalType:"uint256",type:"uint256"},{name:"maxAllowed",internalType:"uint256",type:"uint256"},{name:"actual",internalType:"uint256",type:"uint256"}],name:"InvalidChallengeEpoch"},{type:"error",inputs:[{name:"maxProvingPeriod",internalType:"uint256",type:"uint256"},{name:"challengeWindowSize",internalType:"uint256",type:"uint256"}],name:"InvalidChallengeWindowSize"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"InvalidDataSetId"},{type:"error",inputs:[{name:"fromEpoch",internalType:"uint256",type:"uint256"},{name:"toEpoch",internalType:"uint256",type:"uint256"}],name:"InvalidEpochRange"},{type:"error",inputs:[],name:"InvalidInitialization"},{type:"error",inputs:[{name:"expected",internalType:"address",type:"address"},{name:"actual",internalType:"address",type:"address"}],name:"InvalidSignature"},{type:"error",inputs:[{name:"expectedLength",internalType:"uint256",type:"uint256"},{name:"actualLength",internalType:"uint256",type:"uint256"}],name:"InvalidSignatureLength"},{type:"error",inputs:[],name:"MaxProvingPeriodZero"},{type:"error",inputs:[{name:"metadataArrayCount",internalType:"uint256",type:"uint256"},{name:"pieceCount",internalType:"uint256",type:"uint256"}],name:"MetadataArrayCountMismatch"},{type:"error",inputs:[{name:"keysLength",internalType:"uint256",type:"uint256"},{name:"valuesLength",internalType:"uint256",type:"uint256"}],name:"MetadataKeyAndValueLengthMismatch"},{type:"error",inputs:[{name:"index",internalType:"uint256",type:"uint256"},{name:"maxAllowed",internalType:"uint256",type:"uint256"},{name:"length",internalType:"uint256",type:"uint256"}],name:"MetadataKeyExceedsMaxLength"},{type:"error",inputs:[{name:"index",internalType:"uint256",type:"uint256"},{name:"maxAllowed",internalType:"uint256",type:"uint256"},{name:"length",internalType:"uint256",type:"uint256"}],name:"MetadataValueExceedsMaxLength"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"periodDeadline",internalType:"uint256",type:"uint256"},{name:"nowBlock",internalType:"uint256",type:"uint256"}],name:"NextProvingPeriodAlreadyCalled"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"NoPDPPaymentRail"},{type:"error",inputs:[],name:"NotInitializing"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"expected",internalType:"address",type:"address"},{name:"actual",internalType:"address",type:"address"}],name:"OldServiceProviderMismatch"},{type:"error",inputs:[{name:"expected",internalType:"address",type:"address"},{name:"actual",internalType:"address",type:"address"}],name:"OnlyFilCDNControllerAllowed"},{type:"error",inputs:[{name:"expected",internalType:"address",type:"address"},{name:"actual",internalType:"address",type:"address"}],name:"OnlyPDPVerifierAllowed"},{type:"error",inputs:[{name:"expected",internalType:"address",type:"address"},{name:"actual",internalType:"address",type:"address"}],name:"OnlySelf"},{type:"error",inputs:[{name:"owner",internalType:"address",type:"address"}],name:"OwnableInvalidOwner"},{type:"error",inputs:[{name:"account",internalType:"address",type:"address"}],name:"OwnableUnauthorizedAccount"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"pdpEndEpoch",internalType:"uint256",type:"uint256"},{name:"cdnEndEpoch",internalType:"uint256",type:"uint256"}],name:"PaymentRailsNotFinalized"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"ProofAlreadySubmitted"},{type:"error",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],name:"ProviderAlreadyApproved"},{type:"error",inputs:[{name:"provider",internalType:"address",type:"address"},{name:"providerId",internalType:"uint256",type:"uint256"}],name:"ProviderNotApproved"},{type:"error",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],name:"ProviderNotInApprovedList"},{type:"error",inputs:[{name:"provider",internalType:"address",type:"address"}],name:"ProviderNotRegistered"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"ProvingNotStarted"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"deadline",internalType:"uint256",type:"uint256"},{name:"nowBlock",internalType:"uint256",type:"uint256"}],name:"ProvingPeriodPassed"},{type:"error",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"RailNotAssociated"},{type:"error",inputs:[],name:"ServiceContractMustTerminateRail"},{type:"error",inputs:[{name:"maxAllowed",internalType:"uint256",type:"uint256"},{name:"keysLength",internalType:"uint256",type:"uint256"}],name:"TooManyMetadataKeys"},{type:"error",inputs:[],name:"UUPSUnauthorizedCallContext"},{type:"error",inputs:[{name:"slot",internalType:"bytes32",type:"bytes32"}],name:"UUPSUnsupportedProxiableUUID"},{type:"error",inputs:[{name:"v",internalType:"uint8",type:"uint8"}],name:"UnsupportedSignatureV"},{type:"error",inputs:[{name:"field",internalType:"enum Errors.AddressField",type:"uint8"}],name:"ZeroAddress"}],WARM_STORAGE_VIEW:[{type:"constructor",inputs:[{name:"_service",internalType:"contract FilecoinWarmStorageService",type:"address"}],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"challengeWindow",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"payer",internalType:"address",type:"address"}],name:"clientDataSetIDs",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"payer",internalType:"address",type:"address"}],name:"clientDataSets",outputs:[{name:"dataSetIds",internalType:"uint256[]",type:"uint256[]"}],stateMutability:"view"},{type:"function",inputs:[],name:"filCDNControllerAddress",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"getAllDataSetMetadata",outputs:[{name:"keys",internalType:"string[]",type:"string[]"},{name:"values",internalType:"string[]",type:"string[]"}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"pieceId",internalType:"uint256",type:"uint256"}],name:"getAllPieceMetadata",outputs:[{name:"keys",internalType:"string[]",type:"string[]"},{name:"values",internalType:"string[]",type:"string[]"}],stateMutability:"view"},{type:"function",inputs:[],name:"getApprovedProviders",outputs:[{name:"providerIds",internalType:"uint256[]",type:"uint256[]"}],stateMutability:"view"},{type:"function",inputs:[],name:"getChallengesPerProof",outputs:[{name:"",internalType:"uint64",type:"uint64"}],stateMutability:"pure"},{type:"function",inputs:[{name:"client",internalType:"address",type:"address"}],name:"getClientDataSets",outputs:[{name:"infos",internalType:"struct FilecoinWarmStorageService.DataSetInfo[]",type:"tuple[]",components:[{name:"pdpRailId",internalType:"uint256",type:"uint256"},{name:"cacheMissRailId",internalType:"uint256",type:"uint256"},{name:"cdnRailId",internalType:"uint256",type:"uint256"},{name:"payer",internalType:"address",type:"address"},{name:"payee",internalType:"address",type:"address"},{name:"serviceProvider",internalType:"address",type:"address"},{name:"commissionBps",internalType:"uint256",type:"uint256"},{name:"clientDataSetId",internalType:"uint256",type:"uint256"},{name:"pdpEndEpoch",internalType:"uint256",type:"uint256"},{name:"providerId",internalType:"uint256",type:"uint256"},{name:"cdnEndEpoch",internalType:"uint256",type:"uint256"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"getDataSet",outputs:[{name:"info",internalType:"struct FilecoinWarmStorageService.DataSetInfo",type:"tuple",components:[{name:"pdpRailId",internalType:"uint256",type:"uint256"},{name:"cacheMissRailId",internalType:"uint256",type:"uint256"},{name:"cdnRailId",internalType:"uint256",type:"uint256"},{name:"payer",internalType:"address",type:"address"},{name:"payee",internalType:"address",type:"address"},{name:"serviceProvider",internalType:"address",type:"address"},{name:"commissionBps",internalType:"uint256",type:"uint256"},{name:"clientDataSetId",internalType:"uint256",type:"uint256"},{name:"pdpEndEpoch",internalType:"uint256",type:"uint256"},{name:"providerId",internalType:"uint256",type:"uint256"},{name:"cdnEndEpoch",internalType:"uint256",type:"uint256"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"key",internalType:"string",type:"string"}],name:"getDataSetMetadata",outputs:[{name:"exists",internalType:"bool",type:"bool"},{name:"value",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[{name:"leafCount",internalType:"uint256",type:"uint256"}],name:"getDataSetSizeInBytes",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"pure"},{type:"function",inputs:[],name:"getMaxProvingPeriod",outputs:[{name:"",internalType:"uint64",type:"uint64"}],stateMutability:"view"},{type:"function",inputs:[],name:"getPDPConfig",outputs:[{name:"maxProvingPeriod",internalType:"uint64",type:"uint64"},{name:"challengeWindowSize",internalType:"uint256",type:"uint256"},{name:"challengesPerProof",internalType:"uint256",type:"uint256"},{name:"initChallengeWindowStart",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"pieceId",internalType:"uint256",type:"uint256"},{name:"key",internalType:"string",type:"string"}],name:"getPieceMetadata",outputs:[{name:"exists",internalType:"bool",type:"bool"},{name:"value",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],name:"isProviderApproved",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"nextPDPChallengeWindowStart",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"},{name:"periodId",internalType:"uint256",type:"uint256"}],name:"provenPeriods",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"provenThisPeriod",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"provingActivationEpoch",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"setId",internalType:"uint256",type:"uint256"}],name:"provingDeadline",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"railId",internalType:"uint256",type:"uint256"}],name:"railToDataSet",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"service",outputs:[{name:"",internalType:"contract FilecoinWarmStorageService",type:"address"}],stateMutability:"view"},{type:"error",inputs:[{name:"dataSetId",internalType:"uint256",type:"uint256"}],name:"ProvingPeriodNotInitialized"}],MULTICALL3:[{inputs:[{components:[{name:"target",type:"address"},{name:"allowFailure",type:"bool"},{name:"callData",type:"bytes"}],name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{name:"success",type:"bool"},{name:"returnData",type:"bytes"}],name:"returnData",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"}],SERVICE_PROVIDER_REGISTRY:[{type:"constructor",inputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"BURN_ACTOR",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[],name:"MAX_CAPABILITIES",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"MAX_CAPABILITY_KEY_LENGTH",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"MAX_CAPABILITY_VALUE_LENGTH",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"REGISTRATION_FEE",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"UPGRADE_INTERFACE_VERSION",outputs:[{name:"",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[],name:"VERSION",outputs:[{name:"",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"}],name:"activeProductTypeProviderCount",outputs:[{name:"count",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[],name:"activeProviderCount",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"productData",internalType:"bytes",type:"bytes"},{name:"capabilityKeys",internalType:"string[]",type:"string[]"},{name:"capabilityValues",internalType:"string[]",type:"string[]"}],name:"addProduct",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"providerAddress",internalType:"address",type:"address"}],name:"addressToProviderId",outputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"data",internalType:"bytes",type:"bytes"}],name:"decodePDPOffering",outputs:[{name:"",internalType:"struct ServiceProviderRegistryStorage.PDPOffering",type:"tuple",components:[{name:"serviceURL",internalType:"string",type:"string"},{name:"minPieceSizeInBytes",internalType:"uint256",type:"uint256"},{name:"maxPieceSizeInBytes",internalType:"uint256",type:"uint256"},{name:"ipniPiece",internalType:"bool",type:"bool"},{name:"ipniIpfs",internalType:"bool",type:"bool"},{name:"storagePricePerTibPerMonth",internalType:"uint256",type:"uint256"},{name:"minProvingPeriodInEpochs",internalType:"uint256",type:"uint256"},{name:"location",internalType:"string",type:"string"},{name:"paymentTokenAddress",internalType:"contract IERC20",type:"address"}]}],stateMutability:"pure"},{type:"function",inputs:[],name:"eip712Domain",outputs:[{name:"fields",internalType:"bytes1",type:"bytes1"},{name:"name",internalType:"string",type:"string"},{name:"version",internalType:"string",type:"string"},{name:"chainId",internalType:"uint256",type:"uint256"},{name:"verifyingContract",internalType:"address",type:"address"},{name:"salt",internalType:"bytes32",type:"bytes32"},{name:"extensions",internalType:"uint256[]",type:"uint256[]"}],stateMutability:"view"},{type:"function",inputs:[{name:"pdpOffering",internalType:"struct ServiceProviderRegistryStorage.PDPOffering",type:"tuple",components:[{name:"serviceURL",internalType:"string",type:"string"},{name:"minPieceSizeInBytes",internalType:"uint256",type:"uint256"},{name:"maxPieceSizeInBytes",internalType:"uint256",type:"uint256"},{name:"ipniPiece",internalType:"bool",type:"bool"},{name:"ipniIpfs",internalType:"bool",type:"bool"},{name:"storagePricePerTibPerMonth",internalType:"uint256",type:"uint256"},{name:"minProvingPeriodInEpochs",internalType:"uint256",type:"uint256"},{name:"location",internalType:"string",type:"string"},{name:"paymentTokenAddress",internalType:"contract IERC20",type:"address"}]}],name:"encodePDPOffering",outputs:[{name:"",internalType:"bytes",type:"bytes"}],stateMutability:"pure"},{type:"function",inputs:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"offset",internalType:"uint256",type:"uint256"},{name:"limit",internalType:"uint256",type:"uint256"}],name:"getActiveProvidersByProductType",outputs:[{name:"result",internalType:"struct ServiceProviderRegistryStorage.PaginatedProviders",type:"tuple",components:[{name:"providers",internalType:"struct ServiceProviderRegistryStorage.ProviderWithProduct[]",type:"tuple[]",components:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"providerInfo",internalType:"struct ServiceProviderRegistryStorage.ServiceProviderInfo",type:"tuple",components:[{name:"serviceProvider",internalType:"address",type:"address"},{name:"payee",internalType:"address",type:"address"},{name:"name",internalType:"string",type:"string"},{name:"description",internalType:"string",type:"string"},{name:"isActive",internalType:"bool",type:"bool"}]},{name:"product",internalType:"struct ServiceProviderRegistryStorage.ServiceProduct",type:"tuple",components:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"productData",internalType:"bytes",type:"bytes"},{name:"capabilityKeys",internalType:"string[]",type:"string[]"},{name:"isActive",internalType:"bool",type:"bool"}]}]},{name:"hasMore",internalType:"bool",type:"bool"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"offset",internalType:"uint256",type:"uint256"},{name:"limit",internalType:"uint256",type:"uint256"}],name:"getAllActiveProviders",outputs:[{name:"providerIds",internalType:"uint256[]",type:"uint256[]"},{name:"hasMore",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[],name:"getNextProviderId",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],name:"getPDPService",outputs:[{name:"pdpOffering",internalType:"struct ServiceProviderRegistryStorage.PDPOffering",type:"tuple",components:[{name:"serviceURL",internalType:"string",type:"string"},{name:"minPieceSizeInBytes",internalType:"uint256",type:"uint256"},{name:"maxPieceSizeInBytes",internalType:"uint256",type:"uint256"},{name:"ipniPiece",internalType:"bool",type:"bool"},{name:"ipniIpfs",internalType:"bool",type:"bool"},{name:"storagePricePerTibPerMonth",internalType:"uint256",type:"uint256"},{name:"minProvingPeriodInEpochs",internalType:"uint256",type:"uint256"},{name:"location",internalType:"string",type:"string"},{name:"paymentTokenAddress",internalType:"contract IERC20",type:"address"}]},{name:"capabilityKeys",internalType:"string[]",type:"string[]"},{name:"isActive",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"}],name:"getProduct",outputs:[{name:"productData",internalType:"bytes",type:"bytes"},{name:"capabilityKeys",internalType:"string[]",type:"string[]"},{name:"isActive",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"keys",internalType:"string[]",type:"string[]"}],name:"getProductCapabilities",outputs:[{name:"exists",internalType:"bool[]",type:"bool[]"},{name:"values",internalType:"string[]",type:"string[]"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"key",internalType:"string",type:"string"}],name:"getProductCapability",outputs:[{name:"exists",internalType:"bool",type:"bool"},{name:"value",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],name:"getProvider",outputs:[{name:"info",internalType:"struct ServiceProviderRegistryStorage.ServiceProviderInfo",type:"tuple",components:[{name:"serviceProvider",internalType:"address",type:"address"},{name:"payee",internalType:"address",type:"address"},{name:"name",internalType:"string",type:"string"},{name:"description",internalType:"string",type:"string"},{name:"isActive",internalType:"bool",type:"bool"}]}],stateMutability:"view"},{type:"function",inputs:[{name:"providerAddress",internalType:"address",type:"address"}],name:"getProviderByAddress",outputs:[{name:"info",internalType:"struct ServiceProviderRegistryStorage.ServiceProviderInfo",type:"tuple",components:[{name:"serviceProvider",internalType:"address",type:"address"},{name:"payee",internalType:"address",type:"address"},{name:"name",internalType:"string",type:"string"},{name:"description",internalType:"string",type:"string"},{name:"isActive",internalType:"bool",type:"bool"}]}],stateMutability:"view"},{type:"function",inputs:[],name:"getProviderCount",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerAddress",internalType:"address",type:"address"}],name:"getProviderIdByAddress",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"offset",internalType:"uint256",type:"uint256"},{name:"limit",internalType:"uint256",type:"uint256"}],name:"getProvidersByProductType",outputs:[{name:"result",internalType:"struct ServiceProviderRegistryStorage.PaginatedProviders",type:"tuple",components:[{name:"providers",internalType:"struct ServiceProviderRegistryStorage.ProviderWithProduct[]",type:"tuple[]",components:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"providerInfo",internalType:"struct ServiceProviderRegistryStorage.ServiceProviderInfo",type:"tuple",components:[{name:"serviceProvider",internalType:"address",type:"address"},{name:"payee",internalType:"address",type:"address"},{name:"name",internalType:"string",type:"string"},{name:"description",internalType:"string",type:"string"},{name:"isActive",internalType:"bool",type:"bool"}]},{name:"product",internalType:"struct ServiceProviderRegistryStorage.ServiceProduct",type:"tuple",components:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"productData",internalType:"bytes",type:"bytes"},{name:"capabilityKeys",internalType:"string[]",type:"string[]"},{name:"isActive",internalType:"bool",type:"bool"}]}]},{name:"hasMore",internalType:"bool",type:"bool"}]}],stateMutability:"view"},{type:"function",inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],name:"isProviderActive",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"provider",internalType:"address",type:"address"}],name:"isRegisteredProvider",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"newVersion",internalType:"string",type:"string"}],name:"migrate",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"owner",outputs:[{name:"",internalType:"address",type:"address"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"key",internalType:"string",type:"string"}],name:"productCapabilities",outputs:[{name:"value",internalType:"string",type:"string"}],stateMutability:"view"},{type:"function",inputs:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"}],name:"productTypeProviderCount",outputs:[{name:"count",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"}],name:"providerHasProduct",outputs:[{name:"",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"}],name:"providerProducts",outputs:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"productData",internalType:"bytes",type:"bytes"},{name:"isActive",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],name:"providers",outputs:[{name:"serviceProvider",internalType:"address",type:"address"},{name:"payee",internalType:"address",type:"address"},{name:"name",internalType:"string",type:"string"},{name:"description",internalType:"string",type:"string"},{name:"isActive",internalType:"bool",type:"bool"}],stateMutability:"view"},{type:"function",inputs:[],name:"proxiableUUID",outputs:[{name:"",internalType:"bytes32",type:"bytes32"}],stateMutability:"view"},{type:"function",inputs:[{name:"payee",internalType:"address",type:"address"},{name:"name",internalType:"string",type:"string"},{name:"description",internalType:"string",type:"string"},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"productData",internalType:"bytes",type:"bytes"},{name:"capabilityKeys",internalType:"string[]",type:"string[]"},{name:"capabilityValues",internalType:"string[]",type:"string[]"}],name:"registerProvider",outputs:[{name:"providerId",internalType:"uint256",type:"uint256"}],stateMutability:"payable"},{type:"function",inputs:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"}],name:"removeProduct",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"removeProvider",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newOwner",internalType:"address",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"pdpOffering",internalType:"struct ServiceProviderRegistryStorage.PDPOffering",type:"tuple",components:[{name:"serviceURL",internalType:"string",type:"string"},{name:"minPieceSizeInBytes",internalType:"uint256",type:"uint256"},{name:"maxPieceSizeInBytes",internalType:"uint256",type:"uint256"},{name:"ipniPiece",internalType:"bool",type:"bool"},{name:"ipniIpfs",internalType:"bool",type:"bool"},{name:"storagePricePerTibPerMonth",internalType:"uint256",type:"uint256"},{name:"minProvingPeriodInEpochs",internalType:"uint256",type:"uint256"},{name:"location",internalType:"string",type:"string"},{name:"paymentTokenAddress",internalType:"contract IERC20",type:"address"}]},{name:"capabilityKeys",internalType:"string[]",type:"string[]"},{name:"capabilityValues",internalType:"string[]",type:"string[]"}],name:"updatePDPServiceWithCapabilities",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8"},{name:"productData",internalType:"bytes",type:"bytes"},{name:"capabilityKeys",internalType:"string[]",type:"string[]"},{name:"capabilityValues",internalType:"string[]",type:"string[]"}],name:"updateProduct",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"name",internalType:"string",type:"string"},{name:"description",internalType:"string",type:"string"}],name:"updateProviderInfo",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"newImplementation",internalType:"address",type:"address"},{name:"data",internalType:"bytes",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable"},{type:"event",anonymous:!1,inputs:[{name:"version",internalType:"string",type:"string",indexed:!1},{name:"implementation",internalType:"address",type:"address",indexed:!1}],name:"ContractUpgraded"},{type:"event",anonymous:!1,inputs:[],name:"EIP712DomainChanged"},{type:"event",anonymous:!1,inputs:[{name:"version",internalType:"uint64",type:"uint64",indexed:!1}],name:"Initialized"},{type:"event",anonymous:!1,inputs:[{name:"previousOwner",internalType:"address",type:"address",indexed:!0},{name:"newOwner",internalType:"address",type:"address",indexed:!0}],name:"OwnershipTransferred"},{type:"event",anonymous:!1,inputs:[{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8",indexed:!0},{name:"serviceUrl",internalType:"string",type:"string",indexed:!1},{name:"serviceProvider",internalType:"address",type:"address",indexed:!1},{name:"capabilityKeys",internalType:"string[]",type:"string[]",indexed:!1},{name:"capabilityValues",internalType:"string[]",type:"string[]",indexed:!1}],name:"ProductAdded"},{type:"event",anonymous:!1,inputs:[{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8",indexed:!0}],name:"ProductRemoved"},{type:"event",anonymous:!1,inputs:[{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0},{name:"productType",internalType:"enum ServiceProviderRegistryStorage.ProductType",type:"uint8",indexed:!0},{name:"serviceUrl",internalType:"string",type:"string",indexed:!1},{name:"serviceProvider",internalType:"address",type:"address",indexed:!1},{name:"capabilityKeys",internalType:"string[]",type:"string[]",indexed:!1},{name:"capabilityValues",internalType:"string[]",type:"string[]",indexed:!1}],name:"ProductUpdated"},{type:"event",anonymous:!1,inputs:[{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0}],name:"ProviderInfoUpdated"},{type:"event",anonymous:!1,inputs:[{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0},{name:"serviceProvider",internalType:"address",type:"address",indexed:!0},{name:"payee",internalType:"address",type:"address",indexed:!0}],name:"ProviderRegistered"},{type:"event",anonymous:!1,inputs:[{name:"providerId",internalType:"uint256",type:"uint256",indexed:!0}],name:"ProviderRemoved"},{type:"event",anonymous:!1,inputs:[{name:"implementation",internalType:"address",type:"address",indexed:!0}],name:"Upgraded"},{type:"error",inputs:[{name:"target",internalType:"address",type:"address"}],name:"AddressEmptyCode"},{type:"error",inputs:[{name:"implementation",internalType:"address",type:"address"}],name:"ERC1967InvalidImplementation"},{type:"error",inputs:[],name:"ERC1967NonPayable"},{type:"error",inputs:[],name:"FailedCall"},{type:"error",inputs:[],name:"InvalidInitialization"},{type:"error",inputs:[],name:"NotInitializing"},{type:"error",inputs:[{name:"owner",internalType:"address",type:"address"}],name:"OwnableInvalidOwner"},{type:"error",inputs:[{name:"account",internalType:"address",type:"address"}],name:"OwnableUnauthorizedAccount"},{type:"error",inputs:[],name:"UUPSUnauthorizedCallContext"},{type:"error",inputs:[{name:"slot",internalType:"bytes32",type:"bytes32"}],name:"UUPSUnsupportedProxiableUUID"}],SESSION_KEY_REGISTRY:[{type:"function",inputs:[{name:"user",internalType:"address",type:"address"},{name:"signer",internalType:"address",type:"address"},{name:"permission",internalType:"bytes32",type:"bytes32"}],name:"authorizationExpiry",outputs:[{name:"",internalType:"uint256",type:"uint256"}],stateMutability:"view"},{type:"function",inputs:[{name:"signer",internalType:"address",type:"address"},{name:"expiry",internalType:"uint256",type:"uint256"},{name:"permissions",internalType:"bytes32[]",type:"bytes32[]"}],name:"login",outputs:[],stateMutability:"nonpayable"},{type:"function",inputs:[{name:"signer",internalType:"address payable",type:"address"},{name:"expiry",internalType:"uint256",type:"uint256"},{name:"permissions",internalType:"bytes32[]",type:"bytes32[]"}],name:"loginAndFund",outputs:[],stateMutability:"payable"},{type:"function",inputs:[{name:"signer",internalType:"address",type:"address"},{name:"permissions",internalType:"bytes32[]",type:"bytes32[]"}],name:"revoke",outputs:[],stateMutability:"nonpayable"}]},u={EPOCH_DURATION:30,EPOCHS_PER_DAY:2880n,EPOCHS_PER_MONTH:86400n,DAYS_PER_MONTH:30n,DEFAULT_LOCKUP_DAYS:10n},l={mainnet:1598306400,calibration:1667326380},y={KiB:1024n,MiB:1048576n,GiB:1073741824n,TiB:1099511627776n,MAX_UPLOAD_SIZE:209715200,MIN_UPLOAD_SIZE:127,DEFAULT_UPLOAD_BATCH_SIZE:32},c={TRANSACTION_PROPAGATION_TIMEOUT_MS:3e4,TRANSACTION_PROPAGATION_POLL_INTERVAL_MS:2e3,DATA_SET_CREATION_TIMEOUT_MS:42e4,DATA_SET_CREATION_POLL_INTERVAL_MS:2e3,PIECE_PARKING_TIMEOUT_MS:42e4,PIECE_PARKING_POLL_INTERVAL_MS:5e3,TRANSACTION_CONFIRMATIONS:1,PIECE_ADDITION_TIMEOUT_MS:42e4,PIECE_ADDITION_POLL_INTERVAL_MS:1e3},m={mainnet:{http:"https://api.node.glif.io/rpc/v1",websocket:"wss://wss.node.glif.io/apigw/lotus/rpc/v1"},calibration:{http:"https://api.calibration.node.glif.io/rpc/v1",websocket:"wss://wss.calibration.node.glif.io/apigw/lotus/rpc/v1"}},h={WARM_STORAGE:{mainnet:"",calibration:"0x80617b65FD2EEa1D7fDe2B4F85977670690ed348"},MULTICALL3:{mainnet:"0xcA11bde05977b3631167028862bE2a173976CA11",calibration:"0xcA11bde05977b3631167028862bE2a173976CA11"},USDFC:{mainnet:"0x80B98d3aa09ffff255c3ba4A241111Ff1262F045",calibration:"0xb3042734b608a1B16e9e86B374A3f3e389B4cDf0"}};function f(e,t,n,i){let a=`${e} ${t} failed: ${n}`;return null!=i&&i instanceof Error&&(a=`${a} - ${i.message}`),null!=i?new Error(a,{cause:i}):new Error(a)}function g(e,t){const n=l[t],i=u.EPOCH_DURATION;return new Date(1e3*(n+e*i))}function v(e,t){const n=l[t],i=u.EPOCH_DURATION,a=Math.floor(e.getTime()/1e3)-n;return Math.floor(a/i)}function w(e){return l[e]}function T(e,t){const n=e-t,i=n*u.EPOCH_DURATION;return{epochs:n,seconds:i,minutes:i/60,hours:i/3600,days:i/86400}}function S(e,t,n){if(0===e)return null;const i=e-t;return i<=0?null:g(i,n)}async function P(e){const t=await e.getBlockNumber();if(null==t)throw f("epoch","getCurrentEpoch","Failed to get latest block number");return BigInt(t)}async function b(e){try{const t=await e.getNetwork(),n=Number(t.chainId);if(n===p.mainnet)return"mainnet";if(n===p.calibration)return"calibration";throw f("NetworkUtils","getFilecoinNetworkType",`Unsupported network: chain ID ${n}. Only Filecoin mainnet (${p.mainnet}) and calibration (${p.calibration}) are supported.`)}catch(e){if(e instanceof Error&&e.message.includes("Unsupported network"))throw e;throw f("NetworkUtils","getFilecoinNetworkType",`Failed to detect network: ${e instanceof Error?e.message:String(e)}`)}}function I(e,t){return`${e.replace(/\/$/,"")}/piece/${t.toString()}`}function C(e,t){return`${e.replace(/\/$/,"")}/pdp/piece?${new URLSearchParams({pieceCid:t.toString()}).toString()}`}class A{_provider;_signer;_paymentsAddress;_usdfcAddress;_disableNonceManager;_usdfcContract=null;_paymentsContract=null;constructor(e,t,n,i,a){this._provider=e,this._signer=t,this._paymentsAddress=n,this._usdfcAddress=i,this._disableNonceManager=a}_getUsdfcContract(){return null==this._usdfcContract&&(this._usdfcContract=new e.Contract(this._usdfcAddress,d.ERC20,this._signer)),this._usdfcContract}_getPaymentsContract(){return null==this._paymentsContract&&(this._paymentsContract=new e.Contract(this._paymentsAddress,d.PAYMENTS,this._signer)),this._paymentsContract}async balance(e=o.USDFC){if(e!==o.USDFC)throw f("PaymentsService","payments contract balance check",`Token "${e}" is not supported. Currently only USDFC token is supported for payments contract balance queries.`);return(await this.accountInfo(e)).availableFunds}async accountInfo(e=o.USDFC){if(e!==o.USDFC)throw f("PaymentsService","account info",`Token "${e}" is not supported. Currently only USDFC token is supported.`);const t=await this._signer.getAddress(),n=this._getPaymentsContract();let i;try{i=await n.accounts(this._usdfcAddress,t)}catch(e){throw f("PaymentsService","account info","Failed to read account information from payments contract. This could indicate the contract is not properly deployed, the ABI is incorrect, or there are network connectivity issues.",e)}const[a,r,s,p]=i,d=await P(this._provider)-BigInt(p),u=BigInt(r)+BigInt(s)*d,l=BigInt(a)-u;return{funds:BigInt(a),lockupCurrent:BigInt(r),lockupRate:BigInt(s),lockupLastSettledAt:BigInt(p),availableFunds:l>0n?l:0n}}async walletBalance(e){if(null==e||e===o.FIL)try{const e=await this._signer.getAddress();return await this._provider.getBalance(e)}catch(e){throw f("PaymentsService","wallet FIL balance check","Unable to retrieve FIL balance from wallet. This could be due to network connectivity issues, RPC endpoint problems, or wallet connection issues.",e)}if(e===o.USDFC)try{const e=await this._signer.getAddress(),t=this._getUsdfcContract();return await t.balanceOf(e)}catch(e){throw f("PaymentsService","wallet USDFC balance check","Unexpected error while checking USDFC token balance in wallet.",e)}throw f("PaymentsService","wallet balance",`Token "${e}" is not supported. Currently only FIL and USDFC tokens are supported.`)}decimals(e=o.USDFC){return 18}async allowance(e,t=o.USDFC){if(t!==o.USDFC)throw f("PaymentsService","allowance",`Token "${t}" is not supported. Currently only USDFC token is supported.`);const n=await this._signer.getAddress(),i=this._getUsdfcContract();try{return await i.allowance(n,e)}catch(e){throw f("PaymentsService","allowance check","Failed to check token allowance. This could indicate network connectivity issues or an invalid spender address.",e)}}async approve(e,t,n=o.USDFC){if(n!==o.USDFC)throw f("PaymentsService","approve",`Token "${n}" is not supported. Currently only USDFC token is supported.`);const i="bigint"==typeof t?t:BigInt(t);if(i<0n)throw f("PaymentsService","approve","Approval amount cannot be negative");const a=await this._signer.getAddress(),r=this._getUsdfcContract(),s={};if(this._disableNonceManager){const e=await this._provider.getTransactionCount(a,"pending");s.nonce=e}try{return await r.approve(e,i,s)}catch(t){throw f("PaymentsService","approve",`Failed to approve ${e} to spend ${i.toString()} ${n}`,t)}}async approveService(e,t,n,i,a=o.USDFC){if(a!==o.USDFC)throw f("PaymentsService","approveService",`Token "${a}" is not supported. Currently only USDFC token is supported.`);const r="bigint"==typeof t?t:BigInt(t),s="bigint"==typeof n?n:BigInt(n),p="bigint"==typeof i?i:BigInt(i);if(r<0n||s<0n||p<0n)throw f("PaymentsService","approveService","Allowance values cannot be negative");const d=await this._signer.getAddress(),u=this._getPaymentsContract(),l={};if(this._disableNonceManager){const e=await this._provider.getTransactionCount(d,"pending");l.nonce=e}try{return await u.setOperatorApproval(this._usdfcAddress,e,!0,r,s,p,l)}catch(t){throw f("PaymentsService","approveService",`Failed to approve service ${e} as operator for ${a}`,t)}}async revokeService(e,t=o.USDFC){if(t!==o.USDFC)throw f("PaymentsService","revokeService",`Token "${t}" is not supported. Currently only USDFC token is supported.`);const n=await this._signer.getAddress(),i=this._getPaymentsContract(),a={};if(this._disableNonceManager){const e=await this._provider.getTransactionCount(n,"pending");a.nonce=e}try{return await i.setOperatorApproval(this._usdfcAddress,e,!1,0n,0n,0n,a)}catch(n){throw f("PaymentsService","revokeService",`Failed to revoke service ${e} as operator for ${t}`,n)}}async serviceApproval(e,t=o.USDFC){if(t!==o.USDFC)throw f("PaymentsService","serviceApproval",`Token "${t}" is not supported. Currently only USDFC token is supported.`);const n=await this._signer.getAddress(),i=this._getPaymentsContract();try{const t=await i.operatorApprovals(this._usdfcAddress,n,e);return{isApproved:t[0],rateAllowance:t[1],lockupAllowance:t[2],rateUsed:t[3],lockupUsed:t[4],maxLockupPeriod:t[5]}}catch(t){throw f("PaymentsService","serviceApproval",`Failed to check service approval status for ${e}`,t)}}async deposit(e,t=o.USDFC,n){if(t!==o.USDFC)throw f("PaymentsService","deposit",`Unsupported token: ${t}`);const i="bigint"==typeof e?e:BigInt(e);if(i<=0n)throw f("PaymentsService","deposit","Invalid amount");const a=await this._signer.getAddress(),r=this._getUsdfcContract(),s=this._getPaymentsContract(),p=await r.balanceOf(a);if(p<i)throw f("PaymentsService","deposit",`Insufficient USDFC: have ${BigInt(p).toString()}, need ${i.toString()}`);const d=await this.allowance(this._paymentsAddress,t);if(n?.onAllowanceCheck?.(d,i),d<i){const e=await this.approve(this._paymentsAddress,i,t);n?.onApprovalTransaction?.(e);const a=await e.wait(c.TRANSACTION_CONFIRMATIONS);null!=a&&n?.onApprovalConfirmed?.(a)}n?.onDepositStarting?.();const u={};if(this._disableNonceManager){const e=await this._provider.getTransactionCount(a,"pending");u.nonce=e}return await s.deposit(this._usdfcAddress,a,i,u)}async withdraw(e,t=o.USDFC){if(t!==o.USDFC)throw f("PaymentsService","withdraw",`Unsupported token: ${t}`);const n="bigint"==typeof e?e:BigInt(e);if(n<=0n)throw f("PaymentsService","withdraw","Invalid amount");const i=await this._signer.getAddress(),a=this._getPaymentsContract(),r=await this.accountInfo(t);if(r.availableFunds<n)throw f("PaymentsService","withdraw",`Insufficient available balance: have ${r.availableFunds.toString()}, need ${n.toString()}`);const s={};if(this._disableNonceManager){const e=await this._provider.getTransactionCount(i,"pending");s.nonce=e}return await a.withdraw(this._usdfcAddress,n,s)}}async function D(e,t){const n=xn(t);if(null==n)throw new Error(`Invalid PieceCID: ${String(t)}`);if(!e.ok)throw new Error(`Download failed: ${e.status} ${e.statusText}`);if(null==e.body)throw new Error("Response body is null");const{stream:i,getPieceCID:a}=kn(),r=[],s=new TransformStream({transform(e,t){r.push(e),t.enqueue(e)}}),o=e.body.pipeThrough(i).pipeThrough(s).getReader();try{for(;;){const{done:e}=await o.read();if(e)break}}finally{o.releaseLock()}if(0===r.length)throw new Error("Response body is null");const p=a();if(null==p)throw new Error("Failed to calculate PieceCID from stream");if(p.toString()!==n.toString())throw new Error(`PieceCID verification failed. Expected: ${String(n)}, Got: ${String(p)}`);const d=r.reduce((e,t)=>e+t.length,0),u=new Uint8Array(d);let l=0;for(const e of r)u.set(e,l),l+=e.length;return u}async function _(e,t){const n=await fetch(e);return await D(n,t)}BigInt(4);const E=127,x=BigInt(E),R=(BigInt(128),.9921875),M=32,k=BigInt(M),N=()=>U,U=(e=>{if(e instanceof Uint8Array){if(e.length>M)return e.subarray(0,M);if(e.length==M)return e}const t=new Uint8Array(M);return t.set([...e]),t})(new Uint8Array(M).fill(0));Object.freeze(U.buffer);const O=new Uint8Array(0);function F(e){if(e instanceof Uint8Array&&"Uint8Array"===e.constructor.name)return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")}function $(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function L(e,t){!function(e,...t){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}(e);const n=t.outputLen;if(e.length<n)throw new Error(`digestInto() expects output buffer of length at least ${n}`)}const B=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),z=(e,t)=>e<<32-t|e>>>t;if(68!==new Uint8Array(new Uint32Array([287454020]).buffer)[0])throw new Error("Non little-endian hardware is not supported");function V(e){if("string"==typeof e&&(e=function(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return new Uint8Array((new TextEncoder).encode(e))}(e)),!(e instanceof Uint8Array))throw new Error("expected Uint8Array, got "+typeof e);return e}class W{clone(){return this._cloneInto()}}function j(e){const t=t=>e().update(V(t)).digest(),n=e();return t.outputLen=n.outputLen,t.blockLen=n.blockLen,t.create=()=>e(),t}class H extends W{constructor(e,t,n,i){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=B(this.buffer)}update(e){$(this);const{view:t,buffer:n,blockLen:i}=this,a=(e=V(e)).length;for(let r=0;r<a;){const s=Math.min(i-this.pos,a-r);if(s===i){const t=B(e);for(;i<=a-r;r+=i)this.process(t,r);continue}n.set(e.subarray(r,r+s),this.pos),this.pos+=s,r+=s,this.pos===i&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){$(this),L(e,this),this.finished=!0;const{buffer:t,view:n,blockLen:i,isLE:a}=this;let{pos:r}=this;t[r++]=128,this.buffer.subarray(r).fill(0),this.padOffset>i-r&&(this.process(n,0),r=0);for(let e=r;e<i;e++)t[e]=0;!function(e,t,n,i){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,n,i);const a=BigInt(32),r=BigInt(4294967295),s=Number(n>>a&r),o=Number(n&r),p=i?4:0,d=i?0:4;e.setUint32(t+p,s,i),e.setUint32(t+d,o,i)}(n,i-8,BigInt(8*this.length),a),this.process(n,0);const s=B(e),o=this.outputLen;if(o%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const p=o/4,d=this.get();if(p>d.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<p;e++)s.setUint32(4*e,d[e],a)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:n,length:i,finished:a,destroyed:r,pos:s}=this;return e.length=i,e.pos=s,e.finished=a,e.destroyed=r,i%t&&e.buffer.set(n),e}}const G=(e,t,n)=>e&t^~e&n,q=(e,t,n)=>e&t^e&n^t&n,K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Z=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Q=new Uint32Array(64);class Y extends H{constructor(){super(64,32,8,!1),this.A=0|Z[0],this.B=0|Z[1],this.C=0|Z[2],this.D=0|Z[3],this.E=0|Z[4],this.F=0|Z[5],this.G=0|Z[6],this.H=0|Z[7]}get(){const{A:e,B:t,C:n,D:i,E:a,F:r,G:s,H:o}=this;return[e,t,n,i,a,r,s,o]}set(e,t,n,i,a,r,s,o){this.A=0|e,this.B=0|t,this.C=0|n,this.D=0|i,this.E=0|a,this.F=0|r,this.G=0|s,this.H=0|o}process(e,t){for(let n=0;n<16;n++,t+=4)Q[n]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=Q[e-15],n=Q[e-2],i=z(t,7)^z(t,18)^t>>>3,a=z(n,17)^z(n,19)^n>>>10;Q[e]=a+Q[e-7]+i+Q[e-16]|0}let{A:n,B:i,C:a,D:r,E:s,F:o,G:p,H:d}=this;for(let e=0;e<64;e++){const t=d+(z(s,6)^z(s,11)^z(s,25))+G(s,o,p)+K[e]+Q[e]|0,u=(z(n,2)^z(n,13)^z(n,22))+q(n,i,a)|0;d=p,p=o,o=s,s=r+t|0,r=a,a=i,i=n,n=t+u|0}n=n+this.A|0,i=i+this.B|0,a=a+this.C|0,r=r+this.D|0,s=s+this.E|0,o=o+this.F|0,p=p+this.G|0,d=d+this.H|0,this.set(n,i,a,r,s,o,p,d)}roundClean(){Q.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const X=j(()=>new Y),J="sha2-256",ee=32,te=new Uint8Array([18,32]);class ne{constructor(e){this.code=18,this.name=J,this.bytes=e,this.size=ee,this.digest=e.subarray(2)}}const ie=e=>{const t=new Uint8Array(te.length+ee);return t.set(te,0),t.set(X(e),te.length),new ne(t)},ae=18,re=["string","number","bigint","symbol"],se=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","HTMLElement","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];class oe{constructor(e,t,n){this.major=e,this.majorEncoded=e<<5,this.name=t,this.terminal=n}toString(){return`Type[${this.major}].${this.name}`}compare(e){return this.major<e.major?-1:this.major>e.major?1:0}}oe.uint=new oe(0,"uint",!0),oe.negint=new oe(1,"negint",!0),oe.bytes=new oe(2,"bytes",!0),oe.string=new oe(3,"string",!0),oe.array=new oe(4,"array",!1),oe.map=new oe(5,"map",!1),oe.tag=new oe(6,"tag",!1),oe.float=new oe(7,"float",!0),oe.false=new oe(7,"false",!0),oe.true=new oe(7,"true",!0),oe.null=new oe(7,"null",!0),oe.undefined=new oe(7,"undefined",!0),oe.break=new oe(7,"break",!0);class pe{constructor(e,t,n){this.type=e,this.value=t,this.encodedLength=n,this.encodedBytes=void 0,this.byteValue=void 0}toString(){return`Token[${this.type}].${this.value}`}}const de=globalThis.process&&!globalThis.process.browser&&globalThis.Buffer&&"function"==typeof globalThis.Buffer.isBuffer,ue=new TextDecoder,le=new TextEncoder;function ye(e){return de&&globalThis.Buffer.isBuffer(e)}const ce=de?(e,t,n)=>n-t>64?globalThis.Buffer.from(e.subarray(t,n)).toString("utf8"):we(e,t,n):(e,t,n)=>n-t>64?ue.decode(e.subarray(t,n)):we(e,t,n),me=de?e=>e.length>64?globalThis.Buffer.from(e):ve(e):e=>e.length>64?le.encode(e):ve(e),he=de?(e,t,n)=>ye(e)?new Uint8Array(e.subarray(t,n)):e.slice(t,n):(e,t,n)=>e.slice(t,n),fe=de?(e,t)=>{return e=e.map(e=>e instanceof Uint8Array?e:globalThis.Buffer.from(e)),(n=globalThis.Buffer.concat(e,t))instanceof Uint8Array?ye(n)?new Uint8Array(n.buffer,n.byteOffset,n.byteLength):n:Uint8Array.from(n);var n}:(e,t)=>{const n=new Uint8Array(t);let i=0;for(let t of e)i+t.length>n.length&&(t=t.subarray(0,n.length-i)),n.set(t,i),i+=t.length;return n},ge=de?e=>globalThis.Buffer.allocUnsafe(e):e=>new Uint8Array(e);function ve(e){const t=[];let n=0;for(let i=0;i<e.length;i++){let a=e.charCodeAt(i);a<128?t[n++]=a:a<2048?(t[n++]=a>>6|192,t[n++]=63&a|128):55296==(64512&a)&&i+1<e.length&&56320==(64512&e.charCodeAt(i+1))?(a=65536+((1023&a)<<10)+(1023&e.charCodeAt(++i)),t[n++]=a>>18|240,t[n++]=a>>12&63|128,t[n++]=a>>6&63|128,t[n++]=63&a|128):(t[n++]=a>>12|224,t[n++]=a>>6&63|128,t[n++]=63&a|128)}return t}function we(e,t,n){const i=[];for(;t<n;){const a=e[t];let r=null,s=a>239?4:a>223?3:a>191?2:1;if(t+s<=n){let n,i,o,p;switch(s){case 1:a<128&&(r=a);break;case 2:n=e[t+1],128==(192&n)&&(p=(31&a)<<6|63&n,p>127&&(r=p));break;case 3:n=e[t+1],i=e[t+2],128==(192&n)&&128==(192&i)&&(p=(15&a)<<12|(63&n)<<6|63&i,p>2047&&(p<55296||p>57343)&&(r=p));break;case 4:n=e[t+1],i=e[t+2],o=e[t+3],128==(192&n)&&128==(192&i)&&128==(192&o)&&(p=(15&a)<<18|(63&n)<<12|(63&i)<<6|63&o,p>65535&&p<1114112&&(r=p))}}null===r?(r=65533,s=1):r>65535&&(r-=65536,i.push(r>>>10&1023|55296),r=56320|1023&r),i.push(r),t+=s}return function(e){const t=e.length;if(t<=Te)return String.fromCharCode.apply(String,e);let n="",i=0;for(;i<t;)n+=String.fromCharCode.apply(String,e.slice(i,i+=Te));return n}(i)}const Te=4096;const Se="CBOR decode error:",Pe="CBOR encode error:",be=[];function Ie(e,t,n){if(e.length-t<n)throw new Error(`${Se} not enough data for type`)}be[23]=1,be[24]=2,be[25]=3,be[26]=5,be[27]=9;const Ce=[24,256,65536,4294967296,BigInt("18446744073709551616")];function Ae(e,t,n){Ie(e,t,1);const i=e[t];if(!0===n.strict&&i<Ce[0])throw new Error(`${Se} integer encoded in more bytes than necessary (strict decode)`);return i}function De(e,t,n){Ie(e,t,2);const i=e[t]<<8|e[t+1];if(!0===n.strict&&i<Ce[1])throw new Error(`${Se} integer encoded in more bytes than necessary (strict decode)`);return i}function _e(e,t,n){Ie(e,t,4);const i=16777216*e[t]+(e[t+1]<<16)+(e[t+2]<<8)+e[t+3];if(!0===n.strict&&i<Ce[2])throw new Error(`${Se} integer encoded in more bytes than necessary (strict decode)`);return i}function Ee(e,t,n){Ie(e,t,8);const i=16777216*e[t]+(e[t+1]<<16)+(e[t+2]<<8)+e[t+3],a=16777216*e[t+4]+(e[t+5]<<16)+(e[t+6]<<8)+e[t+7],r=(BigInt(i)<<BigInt(32))+BigInt(a);if(!0===n.strict&&r<Ce[3])throw new Error(`${Se} integer encoded in more bytes than necessary (strict decode)`);if(r<=Number.MAX_SAFE_INTEGER)return Number(r);if(!0===n.allowBigInt)return r;throw new Error(`${Se} integers outside of the safe integer range are not supported`)}function xe(e,t){return Re(e,0,t.value)}function Re(e,t,n){if(n<Ce[0]){const i=Number(n);e.push([t|i])}else if(n<Ce[1]){const i=Number(n);e.push([24|t,i])}else if(n<Ce[2]){const i=Number(n);e.push([25|t,i>>>8,255&i])}else if(n<Ce[3]){const i=Number(n);e.push([26|t,i>>>24&255,i>>>16&255,i>>>8&255,255&i])}else{const i=BigInt(n);if(!(i<Ce[4]))throw new Error(`${Se} encountered BigInt larger than allowable range`);{const n=[27|t,0,0,0,0,0,0,0];let a=Number(i&BigInt(4294967295)),r=Number(i>>BigInt(32)&BigInt(4294967295));n[8]=255&a,a>>=8,n[7]=255&a,a>>=8,n[6]=255&a,a>>=8,n[5]=255&a,n[4]=255&r,r>>=8,n[3]=255&r,r>>=8,n[2]=255&r,r>>=8,n[1]=255&r,e.push(n)}}}xe.encodedSize=function(e){return Re.encodedSize(e.value)},Re.encodedSize=function(e){return e<Ce[0]?1:e<Ce[1]?2:e<Ce[2]?3:e<Ce[3]?5:9},xe.compareTokens=function(e,t){return e.value<t.value?-1:e.value>t.value?1:0};const Me=BigInt(-1),ke=BigInt(1);function Ne(e,t){const n=t.value,i="bigint"==typeof n?n*Me-ke:-1*n-1;Re(e,t.type.majorEncoded,i)}function Ue(e,t,n,i){Ie(e,t,n+i);const a=he(e,t+n,t+n+i);return new pe(oe.bytes,a,n+i)}function Oe(e,t,n,i){return Ue(e,t,1,n)}function Fe(e){return void 0===e.encodedBytes&&(e.encodedBytes=e.type===oe.string?me(e.value):e.value),e.encodedBytes}function $e(e,t){const n=Fe(t);Re(e,t.type.majorEncoded,n.length),e.push(n)}function Le(e,t,n,i,a){const r=n+i;Ie(e,t,r);const s=new pe(oe.string,ce(e,t+n,t+r),r);return!0===a.retainStringBytes&&(s.byteValue=he(e,t+n,t+r)),s}function Be(e,t,n,i){return Le(e,t,1,n,i)}Ne.encodedSize=function(e){const t=e.value,n="bigint"==typeof t?t*Me-ke:-1*t-1;return n<Ce[0]?1:n<Ce[1]?2:n<Ce[2]?3:n<Ce[3]?5:9},Ne.compareTokens=function(e,t){return e.value<t.value?1:e.value>t.value?-1:0},$e.encodedSize=function(e){const t=Fe(e);return Re.encodedSize(t.length)+t.length},$e.compareTokens=function(e,t){return n=Fe(e),i=Fe(t),n.length<i.length?-1:n.length>i.length?1:function(e,t){if(ye(e)&&ye(t))return e.compare(t);for(let n=0;n<e.length;n++)if(e[n]!==t[n])return e[n]<t[n]?-1:1;return 0}(n,i);var n,i};const ze=$e;function Ve(e,t,n,i){return new pe(oe.array,i,n)}function We(e,t,n,i){return Ve(0,0,1,n)}function je(e,t){Re(e,oe.array.majorEncoded,t.value)}function He(e,t,n,i){return new pe(oe.map,i,n)}function Ge(e,t,n,i){return He(0,0,1,n)}function qe(e,t){Re(e,oe.map.majorEncoded,t.value)}function Ke(e,t,n,i){return new pe(oe.tag,n,1)}function Ze(e,t){Re(e,oe.tag.majorEncoded,t.value)}function Qe(e,t,n){if(n){if(!1===n.allowNaN&&Number.isNaN(e))throw new Error(`${Se} NaN values are not supported`);if(!1===n.allowInfinity&&(e===1/0||e===-1/0))throw new Error(`${Se} Infinity values are not supported`)}return new pe(oe.float,e,t)}function Ye(e,t,n){const i=t.value;if(!1===i)e.push([20|oe.float.majorEncoded]);else if(!0===i)e.push([21|oe.float.majorEncoded]);else if(null===i)e.push([22|oe.float.majorEncoded]);else if(void 0===i)e.push([23|oe.float.majorEncoded]);else{let t,r=!1;n&&!0===n.float64||(tt(i),t=nt(et,1),i===t||Number.isNaN(i)?(et[0]=249,e.push(et.slice(0,3)),r=!0):(it(i),t=at(et,1),i===t&&(et[0]=250,e.push(et.slice(0,5)),r=!0))),r||(a=i,Je.setFloat64(0,a,!1),t=rt(et,1),et[0]=251,e.push(et.slice(0,9)))}var a}je.compareTokens=xe.compareTokens,je.encodedSize=function(e){return Re.encodedSize(e.value)},qe.compareTokens=xe.compareTokens,qe.encodedSize=function(e){return Re.encodedSize(e.value)},Ze.compareTokens=xe.compareTokens,Ze.encodedSize=function(e){return Re.encodedSize(e.value)},Ye.encodedSize=function(e,t){const n=e.value;if(!1===n||!0===n||null==n)return 1;if(!t||!0!==t.float64){tt(n);let e=nt(et,1);if(n===e||Number.isNaN(n))return 3;if(it(n),e=at(et,1),n===e)return 5}return 9};const Xe=new ArrayBuffer(9),Je=new DataView(Xe,1),et=new Uint8Array(Xe,0);function tt(e){if(e===1/0)Je.setUint16(0,31744,!1);else if(e===-1/0)Je.setUint16(0,64512,!1);else if(Number.isNaN(e))Je.setUint16(0,32256,!1);else{Je.setFloat32(0,e);const t=Je.getUint32(0),n=(2139095040&t)>>23,i=8388607&t;if(255===n)Je.setUint16(0,31744,!1);else if(0===n)Je.setUint16(0,(2147483648&e)>>16|i>>13,!1);else{const e=n-127;e<-24?Je.setUint16(0,0):e<-14?Je.setUint16(0,(2147483648&t)>>16|1<<24+e,!1):Je.setUint16(0,(2147483648&t)>>16|e+15<<10|i>>13,!1)}}}function nt(e,t){if(e.length-t<2)throw new Error(`${Se} not enough data for float16`);const n=(e[t]<<8)+e[t+1];if(31744===n)return 1/0;if(64512===n)return-1/0;if(32256===n)return NaN;const i=n>>10&31,a=1023&n;let r;return r=0===i?a*2**-24:31!==i?(a+1024)*2**(i-25):0===a?1/0:NaN,32768&n?-r:r}function it(e){Je.setFloat32(0,e,!1)}function at(e,t){if(e.length-t<4)throw new Error(`${Se} not enough data for float32`);const n=(e.byteOffset||0)+t;return new DataView(e.buffer,n,4).getFloat32(0,!1)}function rt(e,t){if(e.length-t<8)throw new Error(`${Se} not enough data for float64`);const n=(e.byteOffset||0)+t;return new DataView(e.buffer,n,8).getFloat64(0,!1)}function st(e,t,n){throw new Error(`${Se} encountered invalid minor (${n}) for major ${e[t]>>>5}`)}function ot(e){return()=>{throw new Error(`${Se} ${e}`)}}Ye.compareTokens=xe.compareTokens;const pt=[];for(let e=0;e<=23;e++)pt[e]=st;pt[24]=function(e,t,n,i){return new pe(oe.uint,Ae(e,t+1,i),2)},pt[25]=function(e,t,n,i){return new pe(oe.uint,De(e,t+1,i),3)},pt[26]=function(e,t,n,i){return new pe(oe.uint,_e(e,t+1,i),5)},pt[27]=function(e,t,n,i){return new pe(oe.uint,Ee(e,t+1,i),9)},pt[28]=st,pt[29]=st,pt[30]=st,pt[31]=st;for(let e=32;e<=55;e++)pt[e]=st;pt[56]=function(e,t,n,i){return new pe(oe.negint,-1-Ae(e,t+1,i),2)},pt[57]=function(e,t,n,i){return new pe(oe.negint,-1-De(e,t+1,i),3)},pt[58]=function(e,t,n,i){return new pe(oe.negint,-1-_e(e,t+1,i),5)},pt[59]=function(e,t,n,i){const a=Ee(e,t+1,i);if("bigint"!=typeof a){const e=-1-a;if(e>=Number.MIN_SAFE_INTEGER)return new pe(oe.negint,e,9)}if(!0!==i.allowBigInt)throw new Error(`${Se} integers outside of the safe integer range are not supported`);return new pe(oe.negint,Me-BigInt(a),9)},pt[60]=st,pt[61]=st,pt[62]=st,pt[63]=st;for(let e=64;e<=87;e++)pt[e]=Oe;pt[88]=function(e,t,n,i){return Ue(e,t,2,Ae(e,t+1,i))},pt[89]=function(e,t,n,i){return Ue(e,t,3,De(e,t+1,i))},pt[90]=function(e,t,n,i){return Ue(e,t,5,_e(e,t+1,i))},pt[91]=function(e,t,n,i){const a=Ee(e,t+1,i);if("bigint"==typeof a)throw new Error(`${Se} 64-bit integer bytes lengths not supported`);return Ue(e,t,9,a)},pt[92]=st,pt[93]=st,pt[94]=st,pt[95]=ot("indefinite length bytes/strings are not supported");for(let e=96;e<=119;e++)pt[e]=Be;pt[120]=function(e,t,n,i){return Le(e,t,2,Ae(e,t+1,i),i)},pt[121]=function(e,t,n,i){return Le(e,t,3,De(e,t+1,i),i)},pt[122]=function(e,t,n,i){return Le(e,t,5,_e(e,t+1,i),i)},pt[123]=function(e,t,n,i){const a=Ee(e,t+1,i);if("bigint"==typeof a)throw new Error(`${Se} 64-bit integer string lengths not supported`);return Le(e,t,9,a,i)},pt[124]=st,pt[125]=st,pt[126]=st,pt[127]=ot("indefinite length bytes/strings are not supported");for(let e=128;e<=151;e++)pt[e]=We;pt[152]=function(e,t,n,i){return Ve(0,0,2,Ae(e,t+1,i))},pt[153]=function(e,t,n,i){return Ve(0,0,3,De(e,t+1,i))},pt[154]=function(e,t,n,i){return Ve(0,0,5,_e(e,t+1,i))},pt[155]=function(e,t,n,i){const a=Ee(e,t+1,i);if("bigint"==typeof a)throw new Error(`${Se} 64-bit integer array lengths not supported`);return Ve(0,0,9,a)},pt[156]=st,pt[157]=st,pt[158]=st,pt[159]=function(e,t,n,i){if(!1===i.allowIndefinite)throw new Error(`${Se} indefinite length items not allowed`);return Ve(0,0,1,1/0)};for(let e=160;e<=183;e++)pt[e]=Ge;pt[184]=function(e,t,n,i){return He(0,0,2,Ae(e,t+1,i))},pt[185]=function(e,t,n,i){return He(0,0,3,De(e,t+1,i))},pt[186]=function(e,t,n,i){return He(0,0,5,_e(e,t+1,i))},pt[187]=function(e,t,n,i){const a=Ee(e,t+1,i);if("bigint"==typeof a)throw new Error(`${Se} 64-bit integer map lengths not supported`);return He(0,0,9,a)},pt[188]=st,pt[189]=st,pt[190]=st,pt[191]=function(e,t,n,i){if(!1===i.allowIndefinite)throw new Error(`${Se} indefinite length items not allowed`);return He(0,0,1,1/0)};for(let e=192;e<=215;e++)pt[e]=Ke;pt[216]=function(e,t,n,i){return new pe(oe.tag,Ae(e,t+1,i),2)},pt[217]=function(e,t,n,i){return new pe(oe.tag,De(e,t+1,i),3)},pt[218]=function(e,t,n,i){return new pe(oe.tag,_e(e,t+1,i),5)},pt[219]=function(e,t,n,i){return new pe(oe.tag,Ee(e,t+1,i),9)},pt[220]=st,pt[221]=st,pt[222]=st,pt[223]=st;for(let e=224;e<=243;e++)pt[e]=ot("simple values are not supported");pt[244]=st,pt[245]=st,pt[246]=st,pt[247]=function(e,t,n,i){if(!1===i.allowUndefined)throw new Error(`${Se} undefined values are not supported`);return!0===i.coerceUndefinedToNull?new pe(oe.null,null,1):new pe(oe.undefined,void 0,1)},pt[248]=ot("simple values are not supported"),pt[249]=function(e,t,n,i){return Qe(nt(e,t+1),3,i)},pt[250]=function(e,t,n,i){return Qe(at(e,t+1),5,i)},pt[251]=function(e,t,n,i){return Qe(rt(e,t+1),9,i)},pt[252]=st,pt[253]=st,pt[254]=st,pt[255]=function(e,t,n,i){if(!1===i.allowIndefinite)throw new Error(`${Se} indefinite length items not allowed`);return new pe(oe.break,void 0,1)};const dt=[];for(let e=0;e<24;e++)dt[e]=new pe(oe.uint,e,1);for(let e=-1;e>=-24;e--)dt[31-e]=new pe(oe.negint,e,1);dt[64]=new pe(oe.bytes,new Uint8Array(0),1),dt[96]=new pe(oe.string,"",1),dt[128]=new pe(oe.array,0,1),dt[160]=new pe(oe.map,0,1),dt[244]=new pe(oe.false,!1,1),dt[245]=new pe(oe.true,!0,1),dt[246]=new pe(oe.null,null,1),function(){const e=[];e[oe.uint.major]=xe,e[oe.negint.major]=Ne,e[oe.bytes.major]=$e,e[oe.string.major]=ze,e[oe.array.major]=je,e[oe.map.major]=qe,e[oe.tag.major]=Ze,e[oe.float.major]=Ye}(),new class{constructor(e=256){this.chunkSize=e,this.cursor=0,this.maxCursor=-1,this.chunks=[],this._initReuseChunk=null}reset(){this.cursor=0,this.maxCursor=-1,this.chunks.length&&(this.chunks=[]),null!==this._initReuseChunk&&(this.chunks.push(this._initReuseChunk),this.maxCursor=this._initReuseChunk.length-1)}push(e){let t=this.chunks[this.chunks.length-1];if(this.cursor+e.length<=this.maxCursor+1){const n=t.length-(this.maxCursor-this.cursor)-1;t.set(e,n)}else{if(t){const e=t.length-(this.maxCursor-this.cursor)-1;e<t.length&&(this.chunks[this.chunks.length-1]=t.subarray(0,e),this.maxCursor=this.cursor-1)}e.length<64&&e.length<this.chunkSize?(t=ge(this.chunkSize),this.chunks.push(t),this.maxCursor+=t.length,null===this._initReuseChunk&&(this._initReuseChunk=t),t.set(e,0)):(this.chunks.push(e),this.maxCursor+=e.length)}this.cursor+=e.length}toBytes(e=!1){let t;if(1===this.chunks.length){const n=this.chunks[0];e&&this.cursor>n.length/2?(t=this.cursor===n.length?n:n.subarray(0,this.cursor),this._initReuseChunk=null,this.chunks=[]):t=he(n,0,this.cursor)}else t=fe(this.chunks,this.cursor);return e&&this.reset(),t}};class ut{constructor(e,t){this.obj=e,this.parent=t}includes(e){let t=this;do{if(t.obj===e)return!0}while(t=t.parent);return!1}static createCheck(e,t){if(e&&e.includes(t))throw new Error(`${Pe} object contains circular references`);return new ut(t,e)}}const lt={null:new pe(oe.null,null),undefined:new pe(oe.undefined,void 0),true:new pe(oe.true,!0),false:new pe(oe.false,!1),emptyArray:new pe(oe.array,0),emptyMap:new pe(oe.map,0)},yt={number:(e,t,n,i)=>Number.isInteger(e)&&Number.isSafeInteger(e)?new pe(e>=0?oe.uint:oe.negint,e):new pe(oe.float,e),bigint:(e,t,n,i)=>e>=BigInt(0)?new pe(oe.uint,e):new pe(oe.negint,e),Uint8Array:(e,t,n,i)=>new pe(oe.bytes,e),string:(e,t,n,i)=>new pe(oe.string,e),boolean:(e,t,n,i)=>e?lt.true:lt.false,null:(e,t,n,i)=>lt.null,undefined:(e,t,n,i)=>lt.undefined,ArrayBuffer:(e,t,n,i)=>new pe(oe.bytes,new Uint8Array(e)),DataView:(e,t,n,i)=>new pe(oe.bytes,new Uint8Array(e.buffer,e.byteOffset,e.byteLength)),Array(e,t,n,i){if(!e.length)return!0===n.addBreakTokens?[lt.emptyArray,new pe(oe.break)]:lt.emptyArray;i=ut.createCheck(i,e);const a=[];let r=0;for(const t of e)a[r++]=ct(t,n,i);return n.addBreakTokens?[new pe(oe.array,e.length),a,new pe(oe.break)]:[new pe(oe.array,e.length),a]},Object(e,t,n,i){const a="Object"!==t,r=a?e.keys():Object.keys(e),s=a?e.size:r.length;if(!s)return!0===n.addBreakTokens?[lt.emptyMap,new pe(oe.break)]:lt.emptyMap;i=ut.createCheck(i,e);const o=[];let p=0;for(const t of r)o[p++]=[ct(t,n,i),ct(a?e.get(t):e[t],n,i)];return function(e,t){t.mapSorter&&e.sort(t.mapSorter)}(o,n),n.addBreakTokens?[new pe(oe.map,s),o,new pe(oe.break)]:[new pe(oe.map,s),o]}};yt.Map=yt.Object,yt.Buffer=yt.Uint8Array;for(const e of"Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" "))yt[`${e}Array`]=yt.DataView;function ct(e,t={},n){const i=function(e){if(null===e)return"null";if(void 0===e)return"undefined";if(!0===e||!1===e)return"boolean";const t=typeof e;if(re.includes(t))return t;if("function"===t)return"Function";if(Array.isArray(e))return"Array";if(function(e){return e&&e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer.call(null,e)}(e))return"Buffer";return function(e){const t=Object.prototype.toString.call(e).slice(8,-1);if(se.includes(t))return t}(e)||"Object"}(e),a=t&&t.typeEncoders&&t.typeEncoders[i]||yt[i];if("function"==typeof a){const r=a(e,i,t,n);if(null!=r)return r}const r=yt[i];if(!r)throw new Error(`${Pe} unsupported type: ${i}`);return r(e,i,t,n)}Symbol.for("DONE"),Symbol.for("BREAK");const mt=function(e,t){if(e.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),i=0;i<n.length;i++)n[i]=255;for(var a=0;a<e.length;a++){var r=e.charAt(a),s=r.charCodeAt(0);if(255!==n[s])throw new TypeError(r+" is ambiguous");n[s]=a}var o=e.length,p=e.charAt(0),d=Math.log(o)/Math.log(256),u=Math.log(256)/Math.log(o);function l(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;var t=0;if(" "!==e[t]){for(var i=0,a=0;e[t]===p;)i++,t++;for(var r=(e.length-t)*d+1>>>0,s=new Uint8Array(r);e[t];){var u=n[e.charCodeAt(t)];if(255===u)return;for(var l=0,y=r-1;(0!==u||l<a)&&-1!==y;y--,l++)u+=o*s[y]>>>0,s[y]=u%256>>>0,u=u/256>>>0;if(0!==u)throw new Error("Non-zero carry");a=l,t++}if(" "!==e[t]){for(var c=r-a;c!==r&&0===s[c];)c++;for(var m=new Uint8Array(i+(r-c)),h=i;c!==r;)m[h++]=s[c++];return m}}}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var n=0,i=0,a=0,r=t.length;a!==r&&0===t[a];)a++,n++;for(var s=(r-a)*u+1>>>0,d=new Uint8Array(s);a!==r;){for(var l=t[a],y=0,c=s-1;(0!==l||y<i)&&-1!==c;c--,y++)l+=256*d[c]>>>0,d[c]=l%o>>>0,l=l/o>>>0;if(0!==l)throw new Error("Non-zero carry");i=y,a++}for(var m=s-i;m!==s&&0===d[m];)m++;for(var h=p.repeat(n);m<s;++m)h+=e.charAt(d[m]);return h},decodeUnsafe:l,decode:function(e){var n=l(e);if(n)return n;throw new Error(`Non-${t} character`)}}};class ht{name;prefix;baseEncode;constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class ft{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,n){this.name=e,this.prefix=t;const i=t.codePointAt(0);if(void 0===i)throw new Error("Invalid prefix character");this.prefixCodePoint=i,this.baseDecode=n}decode(e){if("string"==typeof e){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}throw Error("Can only multibase decode strings")}or(e){return vt(this,e)}}class gt{decoders;constructor(e){this.decoders=e}or(e){return vt(this,e)}decode(e){const t=e[0],n=this.decoders[t];if(null!=n)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}function vt(e,t){return new gt({...e.decoders??{[e.prefix]:e},...t.decoders??{[t.prefix]:t}})}class wt{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,n,i){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=i,this.encoder=new ht(e,t,n),this.decoder=new ft(e,t,i)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}function Tt({name:e,prefix:t,encode:n,decode:i}){return new wt(e,t,n,i)}function St({name:e,prefix:t,alphabet:n}){const{encode:i,decode:a}=mt(n,e);return Tt({prefix:t,name:e,encode:i,decode:e=>F(a(e))})}function Pt({name:e,prefix:t,bitsPerChar:n,alphabet:i}){const a=function(e){const t={};for(let n=0;n<e.length;++n)t[e[n]]=n;return t}(i);return Tt({prefix:t,name:e,encode:e=>function(e,t,n){const i="="===t[t.length-1],a=(1<<n)-1;let r="",s=0,o=0;for(let i=0;i<e.length;++i)for(o=o<<8|e[i],s+=8;s>n;)s-=n,r+=t[a&o>>s];if(0!==s&&(r+=t[a&o<<n-s]),i)for(;r.length*n&7;)r+="=";return r}(e,i,n),decode:t=>function(e,t,n,i){let a=e.length;for(;"="===e[a-1];)--a;const r=new Uint8Array(a*n/8|0);let s=0,o=0,p=0;for(let d=0;d<a;++d){const a=t[e[d]];if(void 0===a)throw new SyntaxError(`Non-${i} character`);o=o<<n|a,s+=n,s>=8&&(s-=8,r[p++]=255&o>>s)}if(s>=n||255&o<<8-s)throw new SyntaxError("Unexpected end of data");return r}(t,a,n,e)})}const bt=Pt({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),It=(Pt({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Pt({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),Pt({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),Pt({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Pt({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Pt({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Pt({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Pt({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),St({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"})),Ct=(St({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),St({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}));St({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var At=128,Dt=-128,_t=Math.pow(2,31),Et=128,xt=127,Rt=Math.pow(2,7),Mt=Math.pow(2,14),kt=Math.pow(2,21),Nt=Math.pow(2,28),Ut=Math.pow(2,35),Ot=Math.pow(2,42),Ft=Math.pow(2,49),$t=Math.pow(2,56),Lt=Math.pow(2,63);const Bt={encode:function e(t,n,i){n=n||[];for(var a=i=i||0;t>=_t;)n[i++]=255&t|At,t/=128;for(;t&Dt;)n[i++]=255&t|At,t>>>=7;return n[i]=0|t,e.bytes=i-a+1,n},decode:function e(t,n){var i,a=0,r=(n=n||0,0),s=n,o=t.length;do{if(s>=o)throw e.bytes=0,new RangeError("Could not decode varint");i=t[s++],a+=r<28?(i&xt)<<r:(i&xt)*Math.pow(2,r),r+=7}while(i>=Et);return e.bytes=s-n,a},encodingLength:function(e){return e<Rt?1:e<Mt?2:e<kt?3:e<Nt?4:e<Ut?5:e<Ot?6:e<Ft?7:e<$t?8:e<Lt?9:10}};function zt(e,t=0){return[Bt.decode(e,t),Bt.decode.bytes]}function Vt(e,t,n=0){return Bt.encode(e,t,n),t}function Wt(e){return Bt.encodingLength(e)}function jt(e,t){const n=t.byteLength,i=Wt(e),a=i+Wt(n),r=new Uint8Array(a+n);return Vt(e,r,0),Vt(n,r,i),r.set(t,a),new Ht(e,n,t,r)}class Ht{code;size;digest;bytes;constructor(e,t,n,i){this.code=e,this.size=t,this.digest=n,this.bytes=i}}function Gt(e,t){const{bytes:n,version:i}=e;return 0===i?function(e,t,n){const{prefix:i}=n;if(i!==Ct.prefix)throw Error(`Cannot string encode V0 in ${n.name} encoding`);const a=t.get(i);if(null==a){const a=n.encode(e).slice(1);return t.set(i,a),a}return a}(n,Kt(e),t??Ct.encoder):function(e,t,n){const{prefix:i}=n,a=t.get(i);if(null==a){const a=n.encode(e);return t.set(i,a),a}return a}(n,Kt(e),t??bt.encoder)}const qt=new WeakMap;function Kt(e){const t=qt.get(e);if(null==t){const t=new Map;return qt.set(e,t),t}return t}class Zt{code;version;multihash;bytes;"/";constructor(e,t,n,i){this.code=t,this.version=e,this.multihash=n,this.bytes=i,this["/"]=i}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:t}=this;if(e!==Qt)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Yt)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Zt.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,n=jt(e,t);return Zt.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Zt.equals(this,e)}static equals(e,t){const n=t;return null!=n&&e.code===n.code&&e.version===n.version&&function(e,t){if(e===t)return!0;{const n=t;return e.code===n.code&&e.size===n.size&&n.bytes instanceof Uint8Array&&function(e,t){if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(let n=0;n<e.byteLength;n++)if(e[n]!==t[n])return!1;return!0}(e.bytes,n.bytes)}}(e.multihash,n.multihash)}toString(e){return Gt(this,e)}toJSON(){return{"/":Gt(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(null==e)return null;const t=e;if(t instanceof Zt)return t;if(null!=t["/"]&&t["/"]===t.bytes||t.asCID===t){const{version:e,code:n,multihash:i,bytes:a}=t;return new Zt(e,n,i,a??Xt(e,n,i.bytes))}if(!0===t[Jt]){const{version:e,multihash:n,code:i}=t,a=function(e){const t=F(e),[n,i]=zt(t),[a,r]=zt(t.subarray(i)),s=t.subarray(i+r);if(s.byteLength!==a)throw new Error("Incorrect length");return new Ht(n,a,s,t)}(n);return Zt.create(e,i,a)}return null}static create(e,t,n){if("number"!=typeof t)throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:if(t!==Qt)throw new Error(`Version 0 CID must use dag-pb (code: ${Qt}) block encoding`);return new Zt(e,t,n,n.bytes);case 1:{const i=Xt(e,t,n.bytes);return new Zt(e,t,n,i)}default:throw new Error("Invalid version")}}static createV0(e){return Zt.create(0,Qt,e)}static createV1(e,t){return Zt.create(1,e,t)}static decode(e){const[t,n]=Zt.decodeFirst(e);if(0!==n.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=Zt.inspectBytes(e),n=t.size-t.multihashSize,i=F(e.subarray(n,n+t.multihashSize));if(i.byteLength!==t.multihashSize)throw new Error("Incorrect length");const a=i.subarray(t.multihashSize-t.digestSize),r=new Ht(t.multihashCode,t.digestSize,a,i);return[0===t.version?Zt.createV0(r):Zt.createV1(t.codec,r),e.subarray(t.size)]}static inspectBytes(e){let t=0;const n=()=>{const[n,i]=zt(e.subarray(t));return t+=i,n};let i=n(),a=Qt;if(18===i?(i=0,t=0):a=n(),0!==i&&1!==i)throw new RangeError(`Invalid CID version ${i}`);const r=t,s=n(),o=n(),p=t+o;return{version:i,codec:a,multihashCode:s,digestSize:o,multihashSize:p-r,size:p}}static parse(e,t){const[n,i]=function(e,t){switch(e[0]){case"Q":{const n=t??Ct;return[Ct.prefix,n.decode(`${Ct.prefix}${e}`)]}case Ct.prefix:{const n=t??Ct;return[Ct.prefix,n.decode(e)]}case bt.prefix:{const n=t??bt;return[bt.prefix,n.decode(e)]}case It.prefix:{const n=t??It;return[It.prefix,n.decode(e)]}default:if(null==t)throw Error("To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided");return[e[0],t.decode(e)]}}(e,t),a=Zt.decode(i);if(0===a.version&&"Q"!==e[0])throw Error("Version 0 CID string must not include multibase prefix");return Kt(a).set(n,e),a}}const Qt=112,Yt=18;function Xt(e,t,n){const i=Wt(e),a=i+Wt(t),r=new Uint8Array(a+n.byteLength);return Vt(e,r,0),Vt(t,r,i),r.set(n,a),r}const Jt=Symbol.for("@ipld/js-cid/CID"),en={allowIndefinite:!1,coerceUndefinedToNull:!0,allowNaN:!1,allowInfinity:!1,allowBigInt:!0,strict:!0,useMaps:!1,rejectDuplicateMapKeys:!0,tags:[]};function tn(e,t){return Zt.create(1,e,t)}en.tags[42]=function(e){if(0!==e[0])throw new Error("Invalid CID for CBOR tag 42; expected leading 0x00");return Zt.decode(e.subarray(1))},en.tags.slice();const nn=(e,t,i)=>{const a=new Uint8Array(e.length+t.length);return a.set(e,0),a.set(t,e.length),function(e,t={}){const i=t.hasher||n,{digest:a}=i.digest(e);return(r=a)[31]&=63,r;var r}(a,i)},an=new class{constructor(){this.bytes=new Uint8Array(2048),this.bytes.set(N(),0),this.node=N(),this.length=M}slice(e,t){for(;this.length<t;)this.node=nn(this.node,this.node),this.bytes.set(this.node,this.length),this.length+=M;return this.bytes.subarray(e,t)}},rn=e=>{if(e<0||e>=64)throw new Error("Only levels between 0 and 63 inclusive are available");return an.slice(M*e,M*(e+1))},sn=e=>{const t=e.length/M,n=new Array(t);for(let i=0;i<t;i++){const t=i*M,a=e.subarray(t,t+M);n[i]=a}return n};function on(e){const t=Math.max(e,65),n=Math.floor(Math.log2(t)),i=Math.ceil(R*2**(n+1));return t<=i?i:Math.ceil(R*2**(n+2))}const pn=(e,t=new Uint8Array((e=>on(e)/R)(e.length)))=>{const n=on(e.byteLength)/E;for(let i=0;i<n;i++){const n=i*E,a=128*i;t.set(e.subarray(n,n+32),a),t[a+31]&=63;for(let i=32;i<64;i++)t[a+i]=e[n+i]<<2|e[n+i-1]>>6;t[a+63]&=63;for(let i=64;i<96;i++)t[a+i]=e[n+i]<<4|e[n+i-1]>>4;t[a+95]&=63;for(let i=96;i<127;i++)t[a+i]=e[n+i]<<6|e[n+i-1]>>2;t[a+127]=e[n+126]>>2}return t},dn=e=>{return 2n**BigInt((t=(e+x-1n)/x)<=1n?0:(e=>{let t=0n;for(;e>>=1n;)t++;return Number(t)})(BigInt(t)-1n)+1);var t},un=e=>ln(2n**BigInt(e)),ln=e=>e*k,yn=4113,cn=ee,mn=10+ee,hn=Wt(yn),fn=hn+Wt(mn)+mn;un(255),BigInt(254),BigInt(256);class gn{constructor(e){this.bytes=e;const[t]=zt(e);if(t!==yn)throw new RangeError("Expected multihash with code 4113");let n=hn;const[i,a]=zt(e,n);n+=a;const r=e.subarray(n);if(r.length!==i)throw new RangeError(`Invalid multihash size expected ${n+i} bytes, got ${e.length} bytes`);this.digest=r}get name(){return"fr32-sha2-256-trunc254-padded-binary-tree"}get code(){return yn}get size(){return this.digest.length}get padding(){return(({digest:e})=>{const[t]=zt(e);return BigInt(t)})(this)}get height(){return(({digest:e})=>{const[,t]=zt(e);return e[t]})(this)}get root(){return(({digest:e})=>{const[,t]=zt(e);return e.subarray(t+1,t+1+ee)})(this)}}const vn=4113,wn=un(255)*BigInt(254)/BigInt(256),Tn=()=>new Sn;class Sn{constructor(){this.bytesWritten=0n,this.buffer=new Uint8Array(E),this.offset=0,this.layers=[[]]}count(){return this.bytesWritten}digest(){const e=new Uint8Array(fn),t=this.digestInto(e,0,!0);return(e=>new gn(e))(e.subarray(0,t))}digestInto(e,t=0,n=!0){const{buffer:i,layers:a,offset:r,bytesWritten:s}=this;let[o,...p]=a;(r>0||0n===s)&&(o=[...o,...sn(pn(i.fill(0,r)))]);const d=bn([o,...p]),u=d.length-1,[l]=d[u],y=Number((e=>(e=>dn(e)*x)(e)-e)(this.bytesWritten)),c=Wt(y);let m=t;if(n){Vt(vn,e,m),m+=hn;const t=c+1+cn,n=Wt(t);Vt(t,e,m),m+=n}return Vt(y,e,m),m+=c,e[m]=u,m+=1,e.set(l,m),m+=l.length,m-t}write(e){const{buffer:t,offset:n,layers:i}=this,a=i[0],{length:r}=e;if(0===r)return this;if(this.bytesWritten+BigInt(r)>wn)throw new RangeError(`Writing ${r} bytes exceeds max payload size of ${wn}`);if(n+r<t.length)return t.set(e,n),this.offset+=r,this.bytesWritten+=BigInt(r),this;{const i=t.length-n;t.set(e.subarray(0,i),n),a.push(...sn(pn(t)));let s=i;for(;s+E<r;){const t=e.subarray(s,s+E);a.push(...sn(pn(t))),s+=E}return this.buffer.set(e.subarray(s),0),this.offset=r-s,this.bytesWritten+=BigInt(r),Pn(this.layers),this}}reset(){return this.offset=0,this.bytesWritten=0n,this.layers.length=1,this.layers[0].length=0,this}dispose(){this.reset()}get code(){return vn}get name(){return"fr32-sha2-256-trunc254-padded-binary-tree"}}const Pn=e=>In(e,!1),bn=e=>In([...e],!0),In=(e,t)=>{let n=0;for(;n<e.length;){let i=e[n+1];const a=e[n];t&&a.length%2>0&&i&&a.push(rn(n)),n+=1,i=i?t?[...i]:i:[];let r=0;for(;r+1<a.length;){const e=nn(a[r],a[r+1]);delete a[r],delete a[r+1],i.push(e),r+=2}i.length&&(e[n]=i),a.splice(0,r)}return e},Cn=85,An=61697,Dn=4114;function _n(e){return e.code===Cn&&e.multihash.code===vn}function En(e){return e.code===An&&e.multihash.code===Dn}function xn(e){return"string"==typeof e?function(e){try{const t=Zt.parse(e);if(_n(t))return t}catch{}return null}(e):"object"==typeof e&&null!==Zt.asCID(e)&&_n(e)?e:null}function Rn(e){const t=xn(e);if(null!=t){const e=jt(Dn,t.multihash.digest.subarray(-32));return tn(An,e)}return"string"==typeof e?function(e){try{const t=Zt.parse(e);if(En(t))return t}catch{}return null}(e):"object"==typeof e&&null!==Zt.asCID(e)&&En(e)?e:null}function Mn(e){const t=Tn();for(let n=0;n<e.length;n+=2048)t.write(e.subarray(n,n+2048));const n=t.digest();return tn(Cn,n)}function kn(){const e=Tn();let t=!1,n=null;const i=new TransformStream({transform(t,n){e.write(t),n.enqueue(t)},flush(){const i=e.digest();n=tn(Cn,i),t=!0}});return{stream:i,getPieceCID:()=>t?n:null}}const Nn={MetadataEntry:[{name:"key",type:"string"},{name:"value",type:"string"}],CreateDataSet:[{name:"clientDataSetId",type:"uint256"},{name:"payee",type:"address"},{name:"metadata",type:"MetadataEntry[]"}],Cid:[{name:"data",type:"bytes"}],PieceMetadata:[{name:"pieceIndex",type:"uint256"},{name:"metadata",type:"MetadataEntry[]"}],AddPieces:[{name:"clientDataSetId",type:"uint256"},{name:"firstAdded",type:"uint256"},{name:"pieceData",type:"Cid[]"},{name:"pieceMetadata",type:"PieceMetadata[]"}],SchedulePieceRemovals:[{name:"clientDataSetId",type:"uint256"},{name:"pieceIds",type:"uint256[]"}],DeleteDataSet:[{name:"clientDataSetId",type:"uint256"}]};class Un{signer;domain;WITH_CDN_METADATA={key:"withCDN",value:""};constructor(e,t,n){this.signer=t,this.domain={name:"FilecoinWarmStorageService",version:"1",chainId:Number(n),verifyingContract:e}}getUnderlyingSigner(){return"signer"in this.signer&&"NonceManager"===this.signer.constructor.name?this.signer.signer:this.signer}async isMetaMaskSigner(){try{const e=this.getUnderlyingSigner();if("Wallet"===e.constructor.name)return!1;const t=e.provider;if(null==t)return!1;if("_eip1193Provider"in t)return!0;if("undefined"!=typeof globalThis&&"window"in globalThis){const e=globalThis;if(null!=e.window?.ethereum)return!0}if("send"in t||"request"in t)return!0}catch{}return!1}async signWithMetaMask(e,t){const n=this.signer.provider;if(null==n)throw new Error("No provider available");const i=await this.signer.getAddress();let a="";for(const t of Object.keys(e))if("Cid"!==t&&"PieceData"!==t){a=t;break}const r={types:{EIP712Domain:[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],...e},primaryType:a,domain:this.domain,message:t};let s,o;return s="_eip1193Provider"in n?n._eip1193Provider:n,o=null!=s&&"request"in s?await s.request({method:"eth_signTypedData_v4",params:[i.toLowerCase(),JSON.stringify(r)]}):await n.send("eth_signTypedData_v4",[i.toLowerCase(),JSON.stringify(r)]),o}async signCreateDataSet(t,n,i=[]){let a;const r={CreateDataSet:Nn.CreateDataSet,MetadataEntry:Nn.MetadataEntry};if(await this.isMetaMaskSigner()){const e={clientDataSetId:t.toString(),metadata:i,payee:n};a=await this.signWithMetaMask(r,e)}else{const e={clientDataSetId:BigInt(t),metadata:i,payee:n},s=this.getUnderlyingSigner();a=await s.signTypedData(this.domain,r,e)}const s=e.Signature.from(a),o=e.TypedDataEncoder.hash(this.domain,r,{clientDataSetId:BigInt(t),metadata:i,payee:n});return{signature:a,v:s.v,r:s.r,s:s.s,signedData:o}}async signAddPieces(t,n,i,a=[]){if(0===a.length)a=Array(i.length).fill([]);else if(a.length!==i.length)throw new Error("metadata length must match pieceDataArray length");const r=[],s=[];for(let e=0;e<i.length;e++){const t=i[e],n="string"==typeof t?xn(t):t;if(null==n)throw new Error(`Invalid PieceCID: ${String(n)}`);s.push({data:n.bytes}),r.push({pieceIndex:e,metadata:a[e]})}const o={AddPieces:Nn.AddPieces,Cid:Nn.Cid,PieceMetadata:Nn.PieceMetadata,MetadataEntry:Nn.MetadataEntry};let p;if(await this.isMetaMaskSigner()){const i={clientDataSetId:t.toString(),firstAdded:n.toString(),pieceData:s.map(t=>({data:e.hexlify(t.data)})),pieceMetadata:r};p=await this.signWithMetaMask(o,i)}else{const e={clientDataSetId:BigInt(t),firstAdded:BigInt(n),pieceData:s,pieceMetadata:r},i=this.getUnderlyingSigner();p=await i.signTypedData(this.domain,o,e)}const d=e.Signature.from(p),u=e.TypedDataEncoder.hash(this.domain,o,{clientDataSetId:BigInt(t),firstAdded:BigInt(n),pieceData:s,pieceMetadata:r});return{signature:p,v:d.v,r:d.r,s:d.s,signedData:u}}async signSchedulePieceRemovals(t,n){const i=n.map(e=>BigInt(e));let a;if(await this.isMetaMaskSigner()){const e={clientDataSetId:t.toString(),pieceIds:i.map(e=>e.toString())};a=await this.signWithMetaMask({SchedulePieceRemovals:Nn.SchedulePieceRemovals},e)}else{const e={clientDataSetId:BigInt(t),pieceIds:i},n=this.getUnderlyingSigner();a=await n.signTypedData(this.domain,{SchedulePieceRemovals:Nn.SchedulePieceRemovals},e)}const r=e.Signature.from(a),s=e.TypedDataEncoder.hash(this.domain,{SchedulePieceRemovals:Nn.SchedulePieceRemovals},{clientDataSetId:BigInt(t),pieceIds:i});return{signature:a,v:r.v,r:r.r,s:r.s,signedData:s}}async signDeleteDataSet(t){let n;if(await this.isMetaMaskSigner()){const e={clientDataSetId:t.toString()};n=await this.signWithMetaMask({DeleteDataSet:Nn.DeleteDataSet},e)}else{const e={clientDataSetId:BigInt(t)},i=this.getUnderlyingSigner();n=await i.signTypedData(this.domain,{DeleteDataSet:Nn.DeleteDataSet},e)}const i=e.Signature.from(n),a=e.TypedDataEncoder.hash(this.domain,{DeleteDataSet:Nn.DeleteDataSet},{clientDataSetId:BigInt(t)});return{signature:n,v:i.v,r:i.r,s:i.s,signedData:a}}async getSignerAddress(){return await this.signer.getAddress()}}function On(e){if("object"!=typeof e||null==e)return!1;const t=e;return!("string"!=typeof t.createMessageHash||"boolean"!=typeof t.dataSetCreated||"string"!=typeof t.service||"string"!=typeof t.txStatus||null!==t.ok&&"boolean"!=typeof t.ok||void 0!==t.dataSetId&&"number"!=typeof t.dataSetId)}function Fn(e){if("object"!=typeof e||null==e)return!1;const t=e;if("string"!=typeof t.txHash)return!1;if("string"!=typeof t.txStatus)return!1;if("number"!=typeof t.dataSetId)return!1;if("number"!=typeof t.pieceCount)return!1;if(null!==t.addMessageOk&&"boolean"!=typeof t.addMessageOk)return!1;if(void 0!==t.confirmedPieceIds){if(!Array.isArray(t.confirmedPieceIds))return!1;for(const e of t.confirmedPieceIds)if("number"!=typeof e)return!1}return!0}function $n(e){if("object"!=typeof e||null==e)return!1;const t=e;return"string"==typeof t.pieceCid&&null!=xn(t.pieceCid)}function Ln(e){if(!On(e))throw new Error("Invalid data set creation status response format");return e}function Bn(e){if(!Fn(e))throw new Error("Invalid piece addition status response format");return e}function zn(e){if(!$n(e)){if("object"==typeof e&&null!=e){const t=e,n=t.pieceCid??t.piece_cid;if(null!=n&&null==xn(n))throw new Error("Invalid find piece response: pieceCid is not a valid PieceCID")}throw new Error("Invalid find piece response format")}const t=e,n=xn(t.pieceCid??t.piece_cid);if(null==n)throw new Error("Invalid find piece response: pieceCid is not a valid PieceCID");return{pieceCid:n,piece_cid:t.piece_cid}}function Vn(e){if("object"!=typeof e||null==e)return null;const t=e;if("number"!=typeof t.pieceId)return null;if("string"!=typeof t.pieceCid)return null;if("string"!=typeof t.subPieceCid)return null;if("number"!=typeof t.subPieceOffset)return null;const n=xn(t.pieceCid),i=xn(t.subPieceCid);return null==n||null==i?null:{pieceId:t.pieceId,pieceCid:n,subPieceCid:i,subPieceOffset:t.subPieceOffset}}function Wn(e){if("object"!=typeof e||null==e)return null;const t=e;if("number"!=typeof t.id)return null;if(!Array.isArray(t.pieces))return null;const n=[];for(const e of t.pieces){const t=Vn(e);if(null==t)return null;n.push(t)}return"number"!=typeof t.nextChallengeEpoch?null:{id:t.id,pieces:n,nextChallengeEpoch:t.nextChallengeEpoch}}class jn{_serviceURL;_authHelper;constructor(e,t){if(""===t.trim())throw new Error("PDP service URL is required");this._serviceURL=t.replace(/\/$/,""),this._authHelper=e}async createDataSet(e,t,n,i){const a=n?[this.getAuthHelper().WITH_CDN_METADATA]:[],r=await this.getAuthHelper().signCreateDataSet(e,t,a),s={recordKeeper:i,extraData:`0x${this._encodeDataSetCreateData({payer:await this.getAuthHelper().getSignerAddress(),metadata:a,signature:r.signature})}`},o=await fetch(`${this._serviceURL}/pdp/data-sets`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});if(201!==o.status){const e=await o.text();throw new Error(`Failed to create data set: ${o.status} ${o.statusText} - ${e}`)}const p=o.headers.get("Location");if(null==p)throw new Error("Server did not provide Location header in response");const d=p.match(/\/pdp\/data-sets\/created\/(.+)$/);if(null==d)throw new Error(`Invalid Location header format: ${p}`);return{txHash:d[1],statusUrl:`${this._serviceURL}${p}`}}async addPieces(e,t,n,i){if(0===i.length)throw new Error("At least one piece must be provided");const a=[];for(const e of i){if(null==xn(e))throw new Error(`Invalid PieceCID: ${String(e)}`);a.push([])}const r=await this.getAuthHelper().signAddPieces(t,n,i,a),s=this._encodeAddPiecesExtraData({signature:r.signature,metadata:a}),o={pieces:i.map(e=>{const t="string"==typeof e?e:e.toString();return{pieceCid:t,subPieces:[{subPieceCid:t}]}}),extraData:`0x${s}`},p=await fetch(`${this._serviceURL}/pdp/data-sets/${e}/pieces`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(201!==p.status){const e=await p.text();throw new Error(`Failed to add pieces to data set: ${p.status} ${p.statusText} - ${e}`)}const d=p.headers.get("Location");let u,l;if(null!=d){const e=d.match(/\/pieces\/added\/([0-9a-fA-Fx]+)$/);null!=e&&(u=e[1],u.startsWith("0x")||(u=`0x${u}`),l=`${this._serviceURL}${d}`)}const y=await p.text();return{message:""!==y?y:`Pieces added to data set ID ${e} successfully`,txHash:u,statusUrl:l}}async getDataSetCreationStatus(e){const t=await fetch(`${this._serviceURL}/pdp/data-sets/created/${e}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(404===t.status)throw new Error(`Data set creation not found for transaction hash: ${e}`);if(200!==t.status){const e=await t.text();throw new Error(`Failed to get data set creation status: ${t.status} ${t.statusText} - ${e}`)}return Ln(await t.json())}async getPieceAdditionStatus(e,t){const n=await fetch(`${this._serviceURL}/pdp/data-sets/${e}/pieces/added/${t}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(404===n.status)throw new Error(`Piece addition not found for transaction: ${t}`);if(200!==n.status){const e=await n.text();throw new Error(`Failed to get piece addition status: ${n.status} ${n.statusText} - ${e}`)}return Bn(await n.json())}async findPiece(e){const t=xn(e);if(null==t)throw new Error(`Invalid PieceCID: ${String(e)}`);const n=C(this._serviceURL,t),i=await fetch(n,{method:"GET",headers:{}});if(404===i.status)throw new Error(`Piece not found: ${t.toString()}`);if(!i.ok){const e=await i.text();throw new Error(`Failed to find piece: ${i.status} ${i.statusText} - ${e}`)}return zn(await i.json())}async uploadPiece(e){const t=e instanceof ArrayBuffer?new Uint8Array(e):e;performance.mark("synapse:calculatePieceCID-start");const n=Mn(t);performance.mark("synapse:calculatePieceCID-end"),performance.measure("synapse:calculatePieceCID","synapse:calculatePieceCID-start","synapse:calculatePieceCID-end");const i=t.length,a={pieceCid:n.toString()};performance.mark("synapse:POST.pdp.piece-start");const r=await fetch(`${this._serviceURL}/pdp/piece`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(performance.mark("synapse:POST.pdp.piece-end"),performance.measure("synapse:POST.pdp.piece","synapse:POST.pdp.piece-start","synapse:POST.pdp.piece-end"),200===r.status)return{pieceCid:n,size:i};if(201!==r.status){const e=await r.text();throw new Error(`Failed to create upload session: ${r.status} ${r.statusText} - ${e}`)}const s=r.headers.get("Location");if(null==s)throw new Error("Server did not provide Location header in response (may be restricted by CORS policy)");const o=s.match(/\/(?:pdp\/)?piece\/upload\/([a-fA-F0-9-]+)/);if(null==o)throw new Error(`Invalid Location header format: ${s}`);const p=o[1];performance.mark("synapse:PUT.pdp.piece.upload-start");const d=await fetch(`${this._serviceURL}/pdp/piece/upload/${p}`,{method:"PUT",headers:{"Content-Type":"application/octet-stream","Content-Length":t.length.toString()},body:t});if(performance.mark("synapse:PUT.pdp.piece.upload-end"),performance.measure("synapse:PUT.pdp.piece.upload","synapse:PUT.pdp.piece.upload-start","synapse:PUT.pdp.piece.upload-end"),204!==d.status){const e=await d.text();throw new Error(`Failed to upload piece: ${d.status} ${d.statusText} - ${e}`)}return{pieceCid:n,size:i}}async downloadPiece(e){const t=xn(e);if(null==t)throw new Error(`Invalid PieceCID: ${String(e)}`);const n=I(this._serviceURL,t),i=await fetch(n);return await D(i,t)}async getDataSet(e){const t=await fetch(`${this._serviceURL}/pdp/data-sets/${e}`,{method:"GET",headers:{Accept:"application/json"}});if(404===t.status)throw new Error(`Data set not found: ${e}`);if(!t.ok){const e=await t.text();throw new Error(`Failed to fetch data set: ${t.status} ${t.statusText} - ${e}`)}const n=await t.json(),i=Wn(n);if(null==i)throw console.error("Invalid data set data response:",n),new Error("Invalid data set data response format");return i}_encodeDataSetCreateData(t){const n=t.signature.startsWith("0x")?t.signature:`0x${t.signature}`,i=t.metadata.map(e=>e.key),a=t.metadata.map(e=>e.value);return e.AbiCoder.defaultAbiCoder().encode(["address","string[]","string[]","bytes"],[t.payer,i,a,n]).slice(2)}_encodeAddPiecesExtraData(t){const n=t.signature.startsWith("0x")?t.signature:`0x${t.signature}`,i=t.metadata.map(e=>e.map(e=>e.key)),a=t.metadata.map(e=>e.map(e=>e.value));return e.AbiCoder.defaultAbiCoder().encode(["bytes","string[][]","string[][]"],[n,i,a]).slice(2)}async ping(){const e=await fetch(`${this._serviceURL}/pdp/ping`,{method:"GET",headers:{}});if(200!==e.status){const t=await e.text().catch(()=>"Unknown error");throw new Error(`Provider ping failed: ${e.status} ${e.statusText} - ${t}`)}}getServiceURL(){return this._serviceURL}getAuthHelper(){if(null==this._authHelper)throw new Error("AuthHelper is not available for an operation that requires signing");return this._authHelper}}class Hn{_provider;_contractAddress;_contract;constructor(t,n){this._provider=t,this._contractAddress=n,this._contract=new e.Contract(this._contractAddress,d.PDP_VERIFIER,this._provider)}async dataSetLive(e){return await this._contract.dataSetLive(e)}async getNextPieceId(e){const t=await this._contract.getNextPieceId(e);return Number(t)}async getDataSetListener(e){return await this._contract.getDataSetListener(e)}async getDataSetStorageProvider(e){const[t,n]=await this._contract.getDataSetStorageProvider(e);return{storageProvider:t,proposedStorageProvider:n}}async getDataSetLeafCount(e){const t=await this._contract.getDataSetLeafCount(e);return Number(t)}extractDataSetIdFromReceipt(e){try{for(const t of e.logs)try{const e=this._contract.interface.parseLog({topics:t.topics,data:t.data});if(null!=e&&"DataSetCreated"===e.name)return Number(e.args.setId)}catch{}return null}catch(e){throw new Error(`Failed to extract data set ID from receipt: ${e instanceof Error?e.message:String(e)}`)}}getContractAddress(){return this._contract.target}}class Gn{_provider;_registryAddress;_registryContract=null;constructor(e,t){this._provider=e,this._registryAddress=t}static async create(e,t){return new Gn(e,t)}_getRegistryContract(){return null==this._registryContract&&(this._registryContract=new e.Contract(this._registryAddress,d.SERVICE_PROVIDER_REGISTRY,this._provider)),this._registryContract}async registerProvider(e,t){const n=this._getRegistryContract().connect(e),i=await n.REGISTRATION_FEE();let a=0,r="0x",s=[],o=[];if(null!=t.pdpOffering&&(a=0,r=await this.encodePDPOffering(t.pdpOffering),null!=t.capabilities)){s=[],o=[];for(const[e,n]of Object.entries(t.capabilities))s.push(e),o.push(n??"")}return await n.registerProvider(t.payee,t.name,t.description,a,r,s,o,{value:i})}async updateProviderInfo(e,t,n){const i=this._getRegistryContract().connect(e);return await i.updateProviderInfo(t,n)}async removeProvider(e){const t=this._getRegistryContract().connect(e);return await t.removeProvider()}async getProvider(t){try{const n=this._getRegistryContract(),i=await n.getProvider(t);if(i.serviceProvider===e.ZeroAddress)return null;const a=await this._getProviderProducts(t);return this._convertToProviderInfo(t,i,a)}catch(e){if(e instanceof Error&&e.message.includes("Provider not found"))return null;throw e}}async getProviderByAddress(t){try{const n=this._getRegistryContract(),[i,a]=await Promise.all([n.getProviderByAddress(t),n.getProviderIdByAddress(t)]);if(i.serviceProvider===e.ZeroAddress)return null;const r=await this._getProviderProducts(Number(a));return this._convertToProviderInfo(Number(a),i,r)}catch{return null}}async getProviderIdByAddress(e){const t=this._getRegistryContract(),n=await t.getProviderIdByAddress(e);return Number(n)}async getAllActiveProviders(){const e=this._getRegistryContract(),t=[];let n=0,i=!0;for(;i;){const a=await e.getAllActiveProviders(n,50),r=a[0];if(i=a[1],r.length>0){const e=r.map(e=>Number(e));t.push(this.getProviders(e))}n+=50}return(await Promise.all(t)).flat()}async getActiveProvidersByProductType(e){const t=this._getRegistryContract(),n=[];let i=0,a=!0;for(;a;){const r=await t.getProvidersByProductType(e,i,50);if(r.providerIds.length>0){const e=r.providerIds.map(e=>Number(e));n.push(this.getProviders(e))}a=r.hasMore,i+=50}return(await Promise.all(n)).flat().filter(e=>e.active)}async isProviderActive(e){const t=this._getRegistryContract();return await t.isProviderActive(e)}async isRegisteredProvider(e){const t=this._getRegistryContract();return await t.isRegisteredProvider(e)}async getProviderCount(){const e=this._getRegistryContract(),t=await e.getProviderCount();return Number(t)}async activeProviderCount(){const e=this._getRegistryContract(),t=await e.activeProviderCount();return Number(t)}async addPDPProduct(e,t,n={}){const i=this._getRegistryContract().connect(e),a=await this.encodePDPOffering(t),r=Object.entries(n),s=r.map(([e])=>e),o=r.map(([,e])=>e||"");return await i.addProduct(0,a,s,o)}async updatePDPProduct(e,t,n={}){const i=this._getRegistryContract().connect(e),a=await this.encodePDPOffering(t),r=Object.entries(n),s=r.map(([e])=>e),o=r.map(([,e])=>e||"");return await i.updateProduct(0,a,s,o)}async removeProduct(e,t){const n=this._getRegistryContract().connect(e);return await n.removeProduct(t)}async getPDPService(e){try{const t=this._getRegistryContract(),n=await t.getPDPService(e);return n.pdpOffering.serviceURL?{offering:{serviceURL:n.pdpOffering.serviceURL,minPieceSizeInBytes:n.pdpOffering.minPieceSizeInBytes,maxPieceSizeInBytes:n.pdpOffering.maxPieceSizeInBytes,ipniPiece:n.pdpOffering.ipniPiece,ipniIpfs:n.pdpOffering.ipniIpfs,storagePricePerTibPerMonth:n.pdpOffering.storagePricePerTibPerMonth,minProvingPeriodInEpochs:Number(n.pdpOffering.minProvingPeriodInEpochs),location:n.pdpOffering.location,paymentTokenAddress:n.pdpOffering.paymentTokenAddress},capabilities:this._convertCapabilitiesToObject(n.capabilityKeys,n.capabilityValues||[]),isActive:n.isActive}:null}catch{return null}}async providerHasProduct(e,t){const n=this._getRegistryContract();return await n.providerHasProduct(e,t)}async getProviders(e){if(0===e.length)return[];try{return await this._getProvidersWithMulticall(e)}catch{return await this._getProvidersIndividually(e)}}async _getProvidersWithMulticall(t){const n=await b(this._provider),i=h.MULTICALL3[n],a=new e.Contract(i,d.MULTICALL3,this._provider),r=new e.Interface(d.SERVICE_PROVIDER_REGISTRY),s=this._prepareMulticallCalls(t,r),o=await a.aggregate3.staticCall(s);return this._processMulticallResults(t,o,r)}_prepareMulticallCalls(e,t){const n=[];for(const i of e)n.push({target:this._registryAddress,allowFailure:!0,callData:t.encodeFunctionData("getProvider",[i])}),n.push({target:this._registryAddress,allowFailure:!0,callData:t.encodeFunctionData("getPDPService",[i])});return n}_processMulticallResults(e,t,n){const i=[];for(let a=0;a<e.length;a++){const r=2*a,s=2*a+1;if(t[r].success)try{const o=n.decodeFunctionResult("getProvider",t[r].returnData)[0],p=this._extractProductsFromMulticallResult(t[s],n),d=this._convertToProviderInfo(e[a],o,p);i.push(d)}catch{}}return i}_extractProductsFromMulticallResult(e,t){const n=[];if(!e.success)return n;try{const i=t.decodeFunctionResult("getPDPService",e.returnData),[a,r,s]=i;if(!a[0])return n;const o=this._buildCapabilitiesFromKeys(r);n.push({type:"PDP",isActive:s,capabilities:o,data:{serviceURL:a[0],minPieceSizeInBytes:a[1],maxPieceSizeInBytes:a[2],ipniPiece:a[3],ipniIpfs:a[4],storagePricePerTibPerMonth:a[5],minProvingPeriodInEpochs:Number(a[6]),location:a[7],paymentTokenAddress:a[8]}})}catch{}return n}_buildCapabilitiesFromKeys(e){const t={};if(e&&Array.isArray(e))for(const n of e)t[n]="";return t}async _getProvidersIndividually(e){const t=[],n=e.map(e=>this.getProvider(e)),i=await Promise.all(n);for(const e of i)null!=e&&t.push(e);return t}async _getProviderProducts(e){const t=[],n=await this.getPDPService(e);return null!=n&&t.push({type:"PDP",isActive:n.isActive,capabilities:n.capabilities,data:n.offering}),t}_convertToProviderInfo(e,t,n){const i={};for(const e of n)"PDP"===e.type&&(i.PDP=e);return{id:e,serviceProvider:t.serviceProvider,payee:t.payee,name:t.name,description:t.description,active:t.isActive,products:i}}_convertCapabilitiesToObject(e,t){const n={};for(let i=0;i<e.length;i++)n[e[i]]=t[i]||"";return n}async encodePDPOffering(e){const t=this._getRegistryContract();return await t.encodePDPOffering(e)}}class qn{warmStorage;spRegistry;constructor(e,t){this.warmStorage=e,this.spRegistry=t}async getApprovedProviders(e=50){const t=await this.warmStorage.getApprovedProviderIds();if(t.length<=e)return await this.spRegistry.getProviders(t);const n=[];let i=0;for(;i<t.length;){const a=t.slice(i,i+e),r=await this.spRegistry.getProviders(a);n.push(...r),i+=e}return n}async getApprovedProvider(e){return await this.warmStorage.isProviderIdApproved(e)?await this.spRegistry.getProvider(e):null}async getApprovedProvidersByIds(t){if(0===t.length)return[];try{const n=this.warmStorage.getProvider(),i=await b(n),a=h.MULTICALL3[i],r=new e.Contract(a,d.MULTICALL3,n),s=this.warmStorage.getViewContractAddress(),o=new e.Interface(d.WARM_STORAGE_VIEW),p=t.map(e=>({target:s,allowFailure:!0,callData:o.encodeFunctionData("isProviderApproved",[e])})),u=(await r.aggregate3.staticCall(p)).map(e=>{if(!e.success)return!1;try{return o.decodeFunctionResult("isProviderApproved",e.returnData)[0]}catch{return!1}}),l=t.filter((e,t)=>u[t]);if(0===l.length)return t.map(()=>null);const y=await this.spRegistry.getProviders(l),c=new Map;for(const e of y)c.set(e.id,e);return t.map((e,t)=>u[t]?c.get(e)??null:null)}catch{const e=await Promise.all(t.map(e=>this.warmStorage.isProviderIdApproved(e))),n=t.filter((t,n)=>e[n]);if(0===n.length)return t.map(()=>null);const i=await this.spRegistry.getProviders(n),a=new Map;for(const e of i)a.set(e.id,e);return t.map((t,n)=>e[n]?a.get(t)??null:null)}}async getApprovedProviderByAddress(e){const t=await this.spRegistry.getProviderByAddress(e);return null==t?null:await this.warmStorage.isProviderIdApproved(t.id)?t:null}async isProviderApproved(e){return!!await this.warmStorage.isProviderIdApproved(e)&&await this.spRegistry.isProviderActive(e)}}class Kn{_synapse;_provider;_pdpServer;_warmStorageService;_warmStorageAddress;_withCDN;_dataSetId;_signer;_uploadBatchSize;_pendingPieces=[];_isProcessing=!1;dataSetId;serviceProvider;get withCDN(){return this._withCDN}get provider(){return this._provider}static validateRawSize(e,t){if(e<y.MIN_UPLOAD_SIZE)throw f("StorageContext",t,`Data size ${e} bytes is below minimum allowed size of ${y.MIN_UPLOAD_SIZE} bytes`);if(e>y.MAX_UPLOAD_SIZE)throw f("StorageContext",t,`Data size ${e} bytes exceeds maximum allowed size of ${y.MAX_UPLOAD_SIZE} bytes (${Math.floor(y.MAX_UPLOAD_SIZE/1024/1024)} MiB)`)}constructor(e,t,n,i,a){this._synapse=e,this._provider=n,this._dataSetId=i,this._withCDN=a.withCDN??!1,this._signer=e.getSigner(),this._warmStorageService=t,this._uploadBatchSize=Math.max(1,a.uploadBatchSize??y.DEFAULT_UPLOAD_BATCH_SIZE),this.dataSetId=i,this.serviceProvider=n.serviceProvider,this._warmStorageAddress=e.getWarmStorageAddress();const r=new Un(this._warmStorageAddress,this._signer,BigInt(e.getChainId()));if(!n.products.PDP?.data.serviceURL)throw new Error(`Provider ${n.id} does not have a PDP product with serviceURL`);this._pdpServer=new jn(r,n.products.PDP.data.serviceURL)}static async create(e,t,n={}){const i=t.getServiceProviderRegistryAddress(),a=new Gn(e.getProvider(),i),r=new qn(t,a),s=await Kn.resolveProviderAndDataSet(e,t,r,n);try{n.callbacks?.onProviderSelected?.(s.provider)}catch(e){console.error("Error in onProviderSelected callback:",e)}let o;if(-1===s.dataSetId||!0===n.forceCreateDataSet)o=await Kn.createDataSet(e,t,s.provider,n.withCDN??!1,n.callbacks);else{o=s.dataSetId;try{n.callbacks?.onDataSetResolved?.({isExisting:s.isExisting??!0,dataSetId:o,provider:s.provider})}catch(e){console.error("Error in onDataSetResolved callback:",e)}}return new Kn(e,t,s.provider,o,n)}static async createDataSet(e,t,n,i,a){performance.mark("synapse:createDataSet-start");const r=e.getSigner(),s=await r.getAddress(),o=await t.getNextClientDataSetId(s),p=e.getWarmStorageAddress(),d=new Un(p,r,BigInt(e.getChainId()));if(!n.products.PDP?.data.serviceURL)throw new Error(`Provider ${n.id} does not have a PDP product with serviceURL`);const u=new jn(d,n.products.PDP.data.serviceURL);performance.mark("synapse:pdpServer.createDataSet-start");const l=await u.createDataSet(o,n.payee,i,p);performance.mark("synapse:pdpServer.createDataSet-end"),performance.measure("synapse:pdpServer.createDataSet","synapse:pdpServer.createDataSet-start","synapse:pdpServer.createDataSet-end");const{txHash:y,statusUrl:m}=l,h=e.getProvider();let g=null;const v=Date.now(),w=c.TRANSACTION_PROPAGATION_TIMEOUT_MS,T=c.TRANSACTION_PROPAGATION_POLL_INTERVAL_MS;for(performance.mark("synapse:getTransaction-start");Date.now()-v<w;){try{if(g=await h.getTransaction(y),null!==g)break}catch(e){console.warn(`Failed to fetch transaction ${y}, retrying...`,e)}await new Promise(e=>setTimeout(e,T))}if(performance.mark("synapse:getTransaction-end"),performance.measure("synapse:getTransaction","synapse:getTransaction-start","synapse:getTransaction-end"),null===g)throw f("StorageContext","create",`Transaction ${y} not found after ${w/1e3} seconds. The transaction may not have propagated to the RPC node.`);try{a?.onDataSetCreationStarted?.(g,m)}catch(e){console.error("Error in onDataSetCreationStarted callback:",e)}let S;performance.mark("synapse:waitForDataSetCreationWithStatus-start");try{S=await t.waitForDataSetCreationWithStatus(g,u,c.DATA_SET_CREATION_TIMEOUT_MS,c.DATA_SET_CREATION_POLL_INTERVAL_MS,async(e,t)=>{if(null!=a?.onDataSetCreationProgress)try{let n;if(e.chainStatus.transactionMined&&null!=e.chainStatus.blockNumber)try{n=await g.wait(c.TRANSACTION_CONFIRMATIONS)??void 0}catch(e){console.error("Failed to fetch transaction receipt:",e)}a.onDataSetCreationProgress({transactionMined:e.chainStatus.transactionMined,transactionSuccess:e.chainStatus.transactionSuccess,dataSetLive:e.chainStatus.dataSetLive,serverConfirmed:!0===e.serverStatus?.ok,dataSetId:e.summary.dataSetId??void 0,elapsedMs:t,receipt:n})}catch(e){console.error("Error in onDataSetCreationProgress callback:",e)}})}catch(e){throw performance.mark("synapse:waitForDataSetCreationWithStatus-end"),performance.measure("synapse:waitForDataSetCreationWithStatus","synapse:waitForDataSetCreationWithStatus-start","synapse:waitForDataSetCreationWithStatus-end"),f("StorageContext","waitForDataSetCreation",e instanceof Error?e.message:"Data set creation failed")}if(performance.mark("synapse:waitForDataSetCreationWithStatus-end"),performance.measure("synapse:waitForDataSetCreationWithStatus","synapse:waitForDataSetCreationWithStatus-start","synapse:waitForDataSetCreationWithStatus-end"),!S.summary.isComplete||null==S.summary.dataSetId)throw f("StorageContext","waitForDataSetCreation",`Data set creation failed: ${S.summary.error??"Transaction may have failed"}`);const P=S.summary.dataSetId;try{a?.onDataSetResolved?.({isExisting:!1,dataSetId:P,provider:n})}catch(e){console.error("Error in onDataSetResolved callback:",e)}return performance.mark("synapse:createDataSet-end"),performance.measure("synapse:createDataSet","synapse:createDataSet-start","synapse:createDataSet-end"),P}static async resolveProviderAndDataSet(e,t,n,i){const a=e.getSigner(),r=await a.getAddress();return null!=i.dataSetId?await Kn.resolveByDataSetId(i.dataSetId,t,n,r,i):null!=i.providerId?await Kn.resolveByProviderId(r,i.providerId,i.withCDN??!1,t,n):null!=i.providerAddress?await Kn.resolveByProviderAddress(i.providerAddress,t,n,r,i.withCDN??!1):await Kn.smartSelectProvider(r,i.withCDN??!1,t,n,a)}static async resolveByDataSetId(e,t,n,i,a){const r=(await t.getClientDataSetsWithDetails(i)).find(t=>t.pdpVerifierDataSetId===e);if(null==r||!r.isLive||!r.isManaged)throw f("StorageContext","resolveByDataSetId",`Data set ${e} not found, not owned by ${i}, or not managed by the current WarmStorage contract`);null==a.providerId&&null==a.providerAddress||await Kn.validateDataSetConsistency(r,a,n);const s=await n.getApprovedProvider(r.providerId);if(null==s)throw f("StorageContext","resolveByDataSetId",`Provider ID ${r.providerId} for data set ${e} is not currently approved`);if(null!=a.withCDN&&r.withCDN!==a.withCDN)throw f("StorageContext","resolveByDataSetId",`Data set ${e} has CDN ${r.withCDN?"enabled":"disabled"}, but requested `+(a.withCDN?"enabled":"disabled"));return{provider:s,dataSetId:e,isExisting:!0}}static async validateDataSetConsistency(e,t,n){if(null!=t.providerId&&e.providerId!==t.providerId)throw f("StorageContext","validateDataSetConsistency",`Data set ${e.pdpVerifierDataSetId} belongs to provider ID ${e.providerId}, but provider ID ${t.providerId} was requested`);if(null!=t.providerAddress){const i=await n.getApprovedProvider(e.providerId);if(null==i||i.serviceProvider.toLowerCase()!==t.providerAddress.toLowerCase())throw f("StorageContext","validateDataSetConsistency",`Data set ${e.pdpVerifierDataSetId} belongs to provider ${i?.serviceProvider??"unknown"}, but provider ${t.providerAddress} was requested`)}}static async resolveByProviderId(e,t,n,i,a){const[r,s]=await Promise.all([a.getApprovedProvider(t),i.getClientDataSetsWithDetails(e)]);if(null==r)throw f("StorageContext","resolveByProviderId",`Provider ID ${t} is not currently approved`);const o=s.filter(e=>e.providerId===r.id&&e.isLive&&e.isManaged&&e.withCDN===n);if(o.length>0){const e=o.sort((e,t)=>e.currentPieceCount>0&&0===t.currentPieceCount?-1:t.currentPieceCount>0&&0===e.currentPieceCount?1:e.pdpVerifierDataSetId-t.pdpVerifierDataSetId);return{provider:r,dataSetId:e[0].pdpVerifierDataSetId,isExisting:!0}}return{provider:r,dataSetId:-1,isExisting:!1}}static async resolveByProviderAddress(e,t,n,i,a){const r=await n.getApprovedProviderByAddress(e);if(null==r)throw f("StorageContext","resolveByProviderAddress",`Provider ${e} is not currently approved`);return await Kn.resolveByProviderId(i,r.id,a,t,n)}static async smartSelectProvider(e,t,n,i,a){const r=(await n.getClientDataSetsWithDetails(e)).filter(e=>e.isLive&&e.isManaged&&e.withCDN===t);if(r.length>0){const o=r.sort((e,t)=>e.currentPieceCount>0&&0===t.currentPieceCount?-1:t.currentPieceCount>0&&0===e.currentPieceCount?1:e.pdpVerifierDataSetId-t.pdpVerifierDataSetId);async function*p(){const e=new Set;for(const t of o){const n=await i.getApprovedProvider(t.providerId);null!=n?e.has(n.serviceProvider.toLowerCase())||(e.add(n.serviceProvider.toLowerCase()),yield n):console.warn(`Provider ID ${t.providerId} for data set ${t.pdpVerifierDataSetId} is not currently approved`)}}try{const d=await Kn.selectProviderWithPing(p()),u=o.find(e=>e.providerId===d.id);if(null!=u)return{provider:d,dataSetId:u.pdpVerifierDataSetId,isExisting:!0};console.warn(`Could not match selected provider ${d.serviceProvider} (ID: ${d.id}) to existing data sets. Falling back to selecting from all providers.`)}catch(l){console.warn("All providers from existing data sets failed health check. Falling back to all providers.")}}const s=await i.getApprovedProviders();if(0===s.length)throw f("StorageContext","smartSelectProvider","No approved service providers available");return{provider:await Kn.selectRandomProvider(s,a),dataSetId:-1,isExisting:!1}}static async selectRandomProvider(e,t){if(0===e.length)throw f("StorageContext","selectRandomProvider","No providers available");return await Kn.selectProviderWithPing(async function*(){const n=[...e];for(;n.length>0;){let e;if(void 0!==globalThis.crypto&&null!=globalThis.crypto.getRandomValues){const t=new Uint8Array(1);globalThis.crypto.getRandomValues(t),e=t[0]%n.length}else{const i=Date.now(),a=Math.random();if(null!=t){const r=i*a*(await t.getAddress()).split("").reduce((e,t)=>e+t.charCodeAt(0),0)%n.length;e=Math.floor(Math.abs(r))}else e=Math.floor(Math.random()*n.length)}const i=n.splice(e,1)[0];yield i}}())}static async selectProviderWithPing(e){let t=0;for await(const n of e){t++;try{if(!n.products.PDP?.data.serviceURL)continue;const e=new jn(null,n.products.PDP.data.serviceURL);return await e.ping(),n}catch(e){console.warn(`Provider ${n.serviceProvider} failed ping test:`,e instanceof Error?e.message:String(e))}}if(0===t)throw f("StorageContext","selectProviderWithPing","No providers available to select from");throw f("StorageContext","selectProviderWithPing",`All ${t} providers failed health check. Storage may be temporarily unavailable.`)}static async performPreflightCheck(e,t,n,i){Kn.validateRawSize(e,"preflightUpload");const a=await n.checkAllowanceForStorage(e,t,i);return{estimatedCost:{perEpoch:a.costs.perEpoch,perDay:a.costs.perDay,perMonth:a.costs.perMonth},allowanceCheck:{sufficient:a.sufficient,message:a.message},selectedProvider:null,selectedDataSetId:null}}async preflightUpload(e){return{...await Kn.performPreflightCheck(e,this._withCDN,this._warmStorageService,this._synapse.payments),selectedProvider:this._provider,selectedDataSetId:this._dataSetId}}async upload(e,t){performance.mark("synapse:upload-start");const n=e instanceof ArrayBuffer?new Uint8Array(e):e,i=n.length;let a;Kn.validateRawSize(i,"upload");try{performance.mark("synapse:pdpServer.uploadPiece-start"),a=await this._pdpServer.uploadPiece(n),performance.mark("synapse:pdpServer.uploadPiece-end"),performance.measure("synapse:pdpServer.uploadPiece","synapse:pdpServer.uploadPiece-start","synapse:pdpServer.uploadPiece-end")}catch(e){throw performance.mark("synapse:pdpServer.uploadPiece-end"),performance.measure("synapse:pdpServer.uploadPiece","synapse:pdpServer.uploadPiece-start","synapse:pdpServer.uploadPiece-end"),f("StorageContext","uploadPiece","Failed to upload piece to service provider",e)}const r=c.PIECE_PARKING_TIMEOUT_MS,s=c.PIECE_PARKING_POLL_INTERVAL_MS,o=Date.now();let p=!1;for(performance.mark("synapse:findPiece-start");Date.now()-o<r;)try{await this._pdpServer.findPiece(a.pieceCid),p=!0;break}catch{Date.now()-o+s<r&&await new Promise(e=>setTimeout(e,s))}if(performance.mark("synapse:findPiece-end"),performance.measure("synapse:findPiece","synapse:findPiece-start","synapse:findPiece-end"),!p)throw f("StorageContext","findPiece","Timeout waiting for piece to be parked on service provider");null!=t?.onUploadComplete&&t.onUploadComplete(a.pieceCid);const d=a.pieceCid,u=await new Promise((e,n)=>{this._pendingPieces.push({pieceData:d,resolve:e,reject:n,callbacks:t}),setTimeout(()=>{this._processPendingPieces().catch(e=>{console.error("Failed to process pending pieces batch:",e)})},0)});return performance.mark("synapse:upload-end"),performance.measure("synapse:upload","synapse:upload-start","synapse:upload-end"),{pieceCid:a.pieceCid,size:a.size,pieceId:u}}async _processPendingPieces(){if(this._isProcessing||0===this._pendingPieces.length)return;this._isProcessing=!0;const e=this._pendingPieces.slice(0,this._uploadBatchSize);this._pendingPieces=this._pendingPieces.slice(this._uploadBatchSize);try{performance.mark("synapse:getAddPiecesInfo-start");const t=await this._warmStorageService.getAddPiecesInfo(this._dataSetId);performance.mark("synapse:getAddPiecesInfo-end"),performance.measure("synapse:getAddPiecesInfo","synapse:getAddPiecesInfo-start","synapse:getAddPiecesInfo-end");const n=e.map(e=>e.pieceData);performance.mark("synapse:pdpServer.addPieces-start");const i=await this._pdpServer.addPieces(this._dataSetId,t.clientDataSetId,t.nextPieceId,n);performance.mark("synapse:pdpServer.addPieces-end"),performance.measure("synapse:pdpServer.addPieces","synapse:pdpServer.addPieces-start","synapse:pdpServer.addPieces-end");let a=[];if(null==i.txHash)throw f("StorageContext","addPieces","Server did not return a transaction hash for piece addition");let r=null;const s=Date.now(),o=c.TRANSACTION_PROPAGATION_TIMEOUT_MS,p=c.TRANSACTION_PROPAGATION_POLL_INTERVAL_MS;for(performance.mark("synapse:getTransaction.addPieces-start");Date.now()-s<o;){try{if(r=await this._synapse.getProvider().getTransaction(i.txHash),null!==r)break}catch{}await new Promise(e=>setTimeout(e,p))}if(performance.mark("synapse:getTransaction.addPieces-end"),performance.measure("synapse:getTransaction.addPieces","synapse:getTransaction.addPieces-start","synapse:getTransaction.addPieces-end"),null==r)throw f("StorageContext","addPieces",`Server returned transaction hash ${i.txHash} but transaction was not found on-chain after ${o/1e3} seconds`);let d;e.forEach(e=>{e.callbacks?.onPieceAdded?.(r)});try{performance.mark("synapse:transaction.wait-start"),d=await r.wait(c.TRANSACTION_CONFIRMATIONS),performance.mark("synapse:transaction.wait-end"),performance.measure("synapse:transaction.wait","synapse:transaction.wait-start","synapse:transaction.wait-end")}catch(e){throw performance.mark("synapse:transaction.wait-end"),performance.measure("synapse:transaction.wait","synapse:transaction.wait-start","synapse:transaction.wait-end"),f("StorageContext","addPieces","Failed to wait for transaction confirmation",e)}if(1!==d?.status)throw f("StorageContext","addPieces","Piece addition transaction  failed on-chain");const u=c.PIECE_ADDITION_TIMEOUT_MS,l=c.PIECE_ADDITION_POLL_INTERVAL_MS,y=Date.now();let m=null,h=!1;for(performance.mark("synapse:getPieceAdditionStatus-start");Date.now()-y<u;)try{const t=await this._pdpServer.getPieceAdditionStatus(this._dataSetId,i.txHash);if("pending"===t.txStatus||null===t.addMessageOk){await new Promise(e=>setTimeout(e,l));continue}if(!t.addMessageOk)throw new Error("Piece addition failed: Transaction was unsuccessful");if(null!=t.confirmedPieceIds&&t.confirmedPieceIds.length>0){a=t.confirmedPieceIds,e.forEach(e=>{e.callbacks?.onPieceConfirmed?.(t.confirmedPieceIds??[])}),h=!0;break}await new Promise(e=>setTimeout(e,l))}catch(e){if(m=e,e instanceof Error&&e.message.includes("not found")){await new Promise(e=>setTimeout(e,l));continue}throw f("StorageContext","addPieces",`Failed to verify piece addition with server: ${e instanceof Error?e.message:"Unknown error"}`,e)}if(performance.mark("synapse:getPieceAdditionStatus-end"),performance.measure("synapse:getPieceAdditionStatus","synapse:getPieceAdditionStatus-start","synapse:getPieceAdditionStatus-end"),!h)throw f("StorageContext","addPieces",`Failed to verify piece addition after ${u/1e3} seconds: ${null!=m?m.message:"Server did not provide confirmation"}. The transaction was confirmed on-chain but the server failed to acknowledge it.`,m);e.forEach((e,n)=>{const i=a[n]??t.nextPieceId+n;e.resolve(i)})}catch(t){const n=f("StorageContext","addPieces","Failed to add piece to data set",t);e.forEach(e=>{e.reject(n)})}finally{this._isProcessing=!1,this._pendingPieces.length>0&&this._processPendingPieces().catch(e=>{console.error("Failed to process pending pieces batch:",e)})}}async download(e,t){const n=this._synapse.storage?.download??this._synapse.download;return await n.call(this._synapse.storage??this._synapse,e,{providerAddress:this._provider.serviceProvider,withCDN:t?.withCDN??this._withCDN})}async providerDownload(e,t){return console.warn("providerDownload() is deprecated. Use download() instead."),await this.download(e,t)}async getProviderInfo(){return await this._synapse.getProviderInfo(this.serviceProvider)}async getDataSetPieces(){return(await this._pdpServer.getDataSet(this._dataSetId)).pieces.map(e=>e.pieceCid)}async hasPiece(e){const t=xn(e);if(null==t)return!1;try{return await this._pdpServer.findPiece(t),!0}catch{return!1}}async pieceStatus(e){const t=xn(e);if(null==t)throw f("StorageContext","pieceStatus","Invalid PieceCID provided");const[n,i,a]=await Promise.all([this.hasPiece(t),this._pdpServer.getDataSet(this._dataSetId).catch(e=>(console.debug("Failed to get data set data:",e),null)),P(this._synapse.getProvider())]),r=this._synapse.getNetwork();let s,o=null,p=null,d=null,u=!1,l=0,y=!1;if(n){const[e,n]=await Promise.all([this.getProviderInfo().catch(()=>null),null!=i?Promise.all([this._warmStorageService.getMaxProvingPeriod(),this._warmStorageService.getChallengeWindow()]).then(([e,t])=>({maxProvingPeriod:e,challengeWindow:t})).catch(()=>null):Promise.resolve(null)]);if(null!=e){if(!e.products.PDP?.data.serviceURL)throw new Error(`Provider ${e.id} does not have a PDP product with serviceURL`);o=`${e.products.PDP.data.serviceURL.replace(/\/$/,"")}/piece/${t.toString()}`}if(null!=i&&null!=n){const e=i.pieces.find(e=>e.pieceCid.toString()===t.toString());if(null!=e)if(s=e.pieceId,i.nextChallengeEpoch>0){const e=i.nextChallengeEpoch,t=e+n.challengeWindow;d=g(t,r);const s=S(i.nextChallengeEpoch,n.maxProvingPeriod,r);null!=s&&(p=s),u=Number(a)>=e&&Number(a)<t,y=Number(a)>=t,Number(a)<e&&(l=T(e,Number(a)).hours)}else console.debug("Data set has nextChallengeEpoch=0, may have just been proven")}}return{exists:n,dataSetLastProven:p,dataSetNextProofDue:d,retrievalUrl:o,pieceId:s,inChallengeWindow:u,hoursUntilChallengeWindow:l,isProofOverdue:y}}}class Zn{_synapse;_warmStorageService;_pieceRetriever;_withCDN;_defaultContext;constructor(e,t,n,i){this._synapse=e,this._warmStorageService=t,this._pieceRetriever=n,this._withCDN=i}async upload(e,t){if(null!=t?.context){const e=[];if(void 0!==t.providerId&&e.push("providerId"),void 0!==t.providerAddress&&e.push("providerAddress"),void 0!==t.dataSetId&&e.push("dataSetId"),void 0!==t.withCDN&&e.push("withCDN"),void 0!==t.forceCreateDataSet&&e.push("forceCreateDataSet"),void 0!==t.uploadBatchSize&&e.push("uploadBatchSize"),e.length>0)throw f("StorageManager","upload",`Cannot specify both 'context' and other options: ${e.join(", ")}`)}const n=t?.context??await this.createContext({providerId:t?.providerId,providerAddress:t?.providerAddress,dataSetId:t?.dataSetId,withCDN:t?.withCDN,forceCreateDataSet:t?.forceCreateDataSet,uploadBatchSize:t?.uploadBatchSize,callbacks:t?.callbacks});return await n.upload(e,t?.callbacks)}async download(e,t){if(null!=t?.context){const n=[];if(void 0!==t.providerAddress&&n.push("providerAddress"),void 0!==t.withCDN&&n.push("withCDN"),n.length>0)throw f("StorageManager","download",`Cannot specify both 'context' and other options: ${n.join(", ")}`);return await t.context.download(e,t)}const n=xn(e);if(null==n)throw f("StorageManager","download",`Invalid PieceCID: ${String(e)}`);const i=t?.withCDN??this._withCDN;if(null!=this._defaultContext&&!i&&null==t?.providerAddress&&!1===(this._defaultContext._withCDN??this._withCDN)&&await this._defaultContext.hasPiece(n))return await this._defaultContext.download(e,t);const a=await this._synapse.getSigner().getAddress(),r=await this._pieceRetriever.fetchPiece(n,a,{providerAddress:t?.providerAddress,withCDN:i});return await D(r,n)}async preflightUpload(e,t){const n=t?.withCDN??this._withCDN;return await Kn.performPreflightCheck(e,n,this._warmStorageService,this._synapse.payments)}async createContext(e){const t=e?.withCDN??this._withCDN;if(null==e||null==e.providerId&&null==e.providerAddress&&null==e.dataSetId&&!0!==e.forceCreateDataSet&&null==e.uploadBatchSize){if(null!=this._defaultContext&&(this._defaultContext.withCDN??this._withCDN)===t){if(null!=e?.callbacks){try{e.callbacks.onProviderSelected?.(this._defaultContext.provider)}catch(e){console.error("Error in onProviderSelected callback:",e)}try{e.callbacks.onDataSetResolved?.({isExisting:!0,dataSetId:this._defaultContext.dataSetId,provider:this._defaultContext.provider})}catch(e){console.error("Error in onDataSetResolved callback:",e)}}return this._defaultContext}const n=await Kn.create(this._synapse,this._warmStorageService,{withCDN:t,callbacks:e?.callbacks});return this._defaultContext=n,n}return await Kn.create(this._synapse,this._warmStorageService,{...e,withCDN:t})}async getDefaultContext(){return await this.createContext()}async findDataSets(e){const t=e??await this._synapse.getSigner().getAddress();return await this._warmStorageService.getClientDataSetsWithDetails(t)}async getStorageInfo(){try{const t=async()=>{try{const e=this._synapse.getWarmStorageAddress(),t=await this._synapse.payments.serviceApproval(e,o.USDFC);return{service:e,rateAllowance:t.rateAllowance,lockupAllowance:t.lockupAllowance,rateUsed:t.rateUsed,lockupUsed:t.lockupUsed}}catch{return null}},n=this._warmStorageService.getServiceProviderRegistryAddress(),i=new Gn(this._synapse.getProvider(),n),a=new qn(this._warmStorageService,i),[r,s,p]=await Promise.all([this._warmStorageService.getServicePrice(),a.getApprovedProviders(),t()]),d=BigInt(r.epochsPerMonth),l=BigInt(r.pricePerTiBPerMonthNoCDN)/d,c=BigInt(r.pricePerTiBPerMonthWithCDN)/d,m=BigInt(r.pricePerTiBPerMonthNoCDN)/u.DAYS_PER_MONTH,h=BigInt(r.pricePerTiBPerMonthWithCDN)/u.DAYS_PER_MONTH,f=s.filter(t=>t.serviceProvider!==e.ZeroAddress),g=this._synapse.getNetwork();return{pricing:{noCDN:{perTiBPerMonth:BigInt(r.pricePerTiBPerMonthNoCDN),perTiBPerDay:m,perTiBPerEpoch:l},withCDN:{perTiBPerMonth:BigInt(r.pricePerTiBPerMonthWithCDN),perTiBPerDay:h,perTiBPerEpoch:c},tokenAddress:r.tokenAddress,tokenSymbol:"USDFC"},providers:f,serviceParameters:{network:g,epochsPerMonth:d,epochsPerDay:u.EPOCHS_PER_DAY,epochDuration:u.EPOCH_DURATION,minUploadSize:y.MIN_UPLOAD_SIZE,maxUploadSize:y.MAX_UPLOAD_SIZE,warmStorageAddress:this._synapse.getWarmStorageAddress(),paymentsAddress:this._warmStorageService.getPaymentsAddress(),pdpVerifierAddress:this._warmStorageService.getPDPVerifierAddress()},allowances:p}}catch(e){throw new Error(`Failed to get storage service information: ${e instanceof Error?e.message:String(e)}`)}}}const Qn="\n    query GetApprovedProvidersForCommP($cid: Bytes!) {\n      pieces(where: { cid: $cid }) {\n        id\n        dataSet {\n          setId\n          owner {\n            id\n            address\n            pdpUrl\n            pieceRetrievalUrl\n            registeredAt\n            status\n            approvedAt\n          }\n        }\n      }\n    }\n  ",Yn="\n    query Provider($providerId: ID!) {\n      provider(id: $providerId) {\n        id\n        address\n        pdpUrl\n        pieceRetrievalUrl\n        registeredAt\n        approvedAt\n      }\n    }\n  ",Xn="\n    query ProvidersFlexible($where: Provider_filter, $first: Int, $skip: Int, $orderBy: Provider_orderBy, $orderDirection: OrderDirection) {\n      providers(\n        where: $where\n        first: $first\n        skip: $skip\n        orderBy: $orderBy\n        orderDirection: $orderDirection\n      ) {\n        id\n        address\n        pdpUrl\n        pieceRetrievalUrl\n        registeredAt\n        approvedAt\n        status\n        totalFaultedPeriods\n        totalFaultedPieces\n        totalDataSets\n        totalPieces\n        totalDataSize\n        createdAt\n        updatedAt\n      }\n    }\n  ",Jn="\n    query DataSetsFlexible($where: DataSet_filter, $first: Int, $skip: Int, $orderBy: DataSet_orderBy, $orderDirection: OrderDirection) {\n      dataSets(\n        where: $where\n        first: $first\n        skip: $skip\n        orderBy: $orderBy\n        orderDirection: $orderDirection\n      ) {\n        id\n        setId\n        listener\n        clientAddr\n        withCDN\n        isActive\n        leafCount\n        challengeRange\n        lastProvenEpoch\n        nextChallengeEpoch\n        totalPieces\n        totalDataSize\n        totalProofs\n        totalProvedPieces\n        totalFaultedPeriods\n        totalFaultedPieces\n        metadata\n        createdAt\n        updatedAt\n        owner {\n          id\n          address\n          pdpUrl\n          pieceRetrievalUrl\n          registeredAt\n          approvedAt\n        }\n        rail {\n          id\n          railId\n          token\n          paymentRate\n          lockupPeriod\n          settledUpto\n          endEpoch\n        }\n      }\n    }\n  ",ei="\n    query PiecesFlexible($where: Piece_filter, $first: Int, $skip: Int, $orderBy: Piece_orderBy, $orderDirection: OrderDirection) {\n      pieces(\n        where: $where\n        first: $first\n        skip: $skip\n        orderBy: $orderBy\n        orderDirection: $orderDirection\n      ) {\n        id\n        setId\n        pieceId\n        rawSize\n        leafCount\n        cid\n        removed\n        totalProofsSubmitted\n        totalPeriodsFaulted\n        lastProvenEpoch\n        lastProvenAt\n        lastFaultedEpoch\n        lastFaultedAt\n        createdAt\n        metadata\n        dataSet {\n          id\n          setId\n          isActive\n          owner {\n            id\n            address\n            pdpUrl\n            pieceRetrievalUrl\n            registeredAt\n            approvedAt\n          }\n        }\n      }\n    }\n  ",ti="\n    query FaultRecordsFlexible($where: FaultRecord_filter, $first: Int, $skip: Int, $orderBy: FaultRecord_orderBy, $orderDirection: OrderDirection) {\n      faultRecords(\n        where: $where\n        first: $first\n        skip: $skip\n        orderBy: $orderBy\n        orderDirection: $orderDirection\n      ) {\n        id\n        dataSetId\n        pieceIds\n        currentChallengeEpoch\n        nextChallengeEpoch\n        periodsFaulted\n        deadline\n        createdAt\n        dataSet {\n          id\n          setId\n          owner {\n            id\n            address\n            pdpUrl\n            pieceRetrievalUrl\n            registeredAt\n            approvedAt\n          }\n        }\n      }\n    }\n  ";class ni{endpoint;headers;constructor(e){this.endpoint=this.resolveEndpoint(e),this.headers=this.buildHeaders(e.apiKey)}resolveEndpoint(e){if(null!=e.endpoint&&""!==e.endpoint.trim())return e.endpoint.trim();if(null!=e.goldsky)return this.buildGoldskyEndpoint(e.goldsky);throw f("SubgraphService","constructor","Invalid configuration: provide either endpoint or complete goldsky config")}buildGoldskyEndpoint(e){const{projectId:t,subgraphName:n,version:i}=e;if(null==t?.trim()||""===t?.trim()||null==n?.trim()||""===n?.trim()||null==i?.trim()||""===i?.trim())throw f("SubgraphService","constructor","Incomplete Goldsky config: projectId, subgraphName, and version required");return`https://api.goldsky.com/api/public/${t}/subgraphs/${n}/${i}/gn`}buildHeaders(e){const t={"Content-Type":"application/json"};return null!=e&&""!==e?{...t,Authorization:`Bearer ${e}`}:t}normalizeQueryOptions(e={}){return{where:{},first:10,skip:0,orderBy:"createdAt",orderDirection:"desc",...e}}async executeQuery(e,t,n){try{const i=await fetch(this.endpoint,{method:"POST",headers:this.headers,body:JSON.stringify({query:e,variables:t})});if(!i.ok){const e=await i.text();throw f("SubgraphService",n,`HTTP ${i.status}: ${e}`)}const a=await i.json();if(null!=a.errors&&a.errors.length>0)throw f("SubgraphService",n,`GraphQL errors: ${a.errors.map(e=>e.message).join("; ")}`);return a.data}catch(e){if(e instanceof Error&&"SynapseError"===e.name)throw e;throw f("SubgraphService",n,`Query execution failed: ${e.message}`,{cause:e})}}transformProviderData(e){const t=e.serviceURL??e.pdpUrl??"https://unknown.provider";return{id:1,serviceProvider:e.serviceProvider??e.serviceProvider??e.id,payee:e.payee??e.serviceProvider??e.id,name:"Subgraph Provider",description:"Provider from subgraph",active:!0,products:{PDP:{type:"PDP",isActive:!0,capabilities:{},data:{serviceURL:t,minPieceSizeInBytes:BigInt(1024),maxPieceSizeInBytes:BigInt(1073741824),ipniPiece:!1,ipniIpfs:!1,storagePricePerTibPerMonth:BigInt(1e6),minProvingPeriodInEpochs:2880,location:"Unknown",paymentTokenAddress:"0x0000000000000000000000000000000000000000"}}}}}parseTimestamp(e){if(null==e)return 0;const t=Number(e);return Number.isNaN(t)?0:t}safeConvertHexToCid(e){try{const t=function(e){const t=e.match(/../g);return null!=t?new Uint8Array(t.map(e=>parseInt(e,16))):O}(e.startsWith("0x")?e.slice(2):e),n=xn(Zt.decode(t));if(null==n)throw new Error(`Failed to convert CID to PieceCID format: ${e}`);return n}catch(e){return console.warn(`SubgraphService: queryProviders: Failed to convert CID to PieceCID format: ${e instanceof Error?e.message:"Unknown error"}`),null}}isValidProviderData(e){return null!=e?.id&&""!==e.id.trim()&&null!=e?.serviceURL&&""!==e.serviceURL.trim()}async getApprovedProvidersForPieceCID(e){const t=xn(e);if(null==t)throw f("SubgraphService","getApprovedProvidersForPieceCID","Invalid PieceCID");const n=t.bytes.reduce((e,t)=>e+t.toString(16).padStart(2,"0"),""),i=await this.executeQuery(Qn,{cid:n},"getApprovedProvidersForPieceCID");if(null==i?.pieces||0===i.pieces.length)return console.log(`SubgraphService: No providers found for PieceCID: ${t.toString()}`),[];const a=i.pieces.reduce((e,t)=>{const n=t.dataSet.serviceProvider,i=n?.serviceProvider?.toLowerCase();return"Approved"!==n?.status||null==i||""===i||e.has(i)?e:this.isValidProviderData(n)?(e.set(i,n),e):(console.warn("SubgraphService: Skipping incomplete provider data for approved provider:",n),e)},new Map);return Array.from(a.values()).map(e=>this.transformProviderData(e))}async getProviderByAddress(e){const t=await this.executeQuery(Yn,{providerId:e},"getProviderByAddress");return null==t?.provider?(console.log(`SubgraphService: No provider found for address: ${e}`),null):this.transformProviderData(t.provider)}async queryProviders(e={}){const t=await this.executeQuery(Xn,this.normalizeQueryOptions(e),"queryProviders");return null==t?.providers||0===t?.providers?.length?(console.log("SubgraphService: No providers found for the given criteria"),[]):t.providers.filter(e=>this.isValidProviderData(e)).map(e=>this.transformProviderData(e))}async queryDataSets(e={}){const t=await this.executeQuery(Jn,this.normalizeQueryOptions(e),"queryDataSets");return null==t?.dataSets||0===t?.dataSets?.length?(console.log("SubgraphService: No data sets found for the given criteria"),[]):t.dataSets.map(e=>({id:e.id,setId:this.parseTimestamp(e.setId),listener:e.listener??"",clientAddr:e.clientAddr??"",withCDN:e.withCDN??!1,isActive:e.isActive,leafCount:this.parseTimestamp(e.leafCount),challengeRange:this.parseTimestamp(e.challengeRange),lastProvenEpoch:this.parseTimestamp(e.lastProvenEpoch),nextChallengeEpoch:this.parseTimestamp(e.nextChallengeEpoch),totalPieces:this.parseTimestamp(e.totalPieces),totalDataSize:this.parseTimestamp(e.totalDataSize),totalProofs:this.parseTimestamp(e.totalProofs),totalProvedPieces:this.parseTimestamp(e.totalProvedPieces),totalFaultedPeriods:this.parseTimestamp(e.totalFaultedPeriods),totalFaultedPieces:this.parseTimestamp(e.totalFaultedPieces),metadata:e.metadata??"",createdAt:this.parseTimestamp(e.createdAt),updatedAt:this.parseTimestamp(e.updatedAt),owner:null!=e.owner?this.transformProviderData(e.owner):this.transformProviderData({}),serviceProvider:null!=e.serviceProvider?this.transformProviderData(e.serviceProvider):this.transformProviderData({}),rail:null!=e.rail?{id:e.rail.id,railId:this.parseTimestamp(e.rail.railId),token:e.rail.token,paymentRate:this.parseTimestamp(e.rail.paymentRate),lockupPeriod:this.parseTimestamp(e.rail.lockupPeriod),settledUpto:this.parseTimestamp(e.rail.settledUpto),endEpoch:this.parseTimestamp(e.rail.endEpoch)}:void 0}))}async queryPieces(e={}){const t=await this.executeQuery(ei,this.normalizeQueryOptions(e),"queryPieces");return null==t?.pieces||0===t?.pieces?.length?(console.log("SubgraphService: No pieces found for the given criteria"),[]):t.pieces.map(e=>({id:e.id,setId:this.parseTimestamp(e.setId),pieceId:this.parseTimestamp(e.pieceId),rawSize:this.parseTimestamp(e.rawSize),leafCount:this.parseTimestamp(e.leafCount),cid:this.safeConvertHexToCid(e.cid),removed:e.removed,totalProofsSubmitted:this.parseTimestamp(e.totalProofsSubmitted),totalPeriodsFaulted:this.parseTimestamp(e.totalPeriodsFaulted),lastProvenEpoch:this.parseTimestamp(e.lastProvenEpoch),lastProvenAt:this.parseTimestamp(e.lastProvenAt),lastFaultedEpoch:this.parseTimestamp(e.lastFaultedEpoch),lastFaultedAt:this.parseTimestamp(e.lastFaultedAt),createdAt:this.parseTimestamp(e.createdAt),metadata:e.metadata??"",dataSet:{id:e.dataSet.id,setId:this.parseTimestamp(e.dataSet.setId),isActive:e.dataSet.isActive,serviceProvider:this.transformProviderData(e.dataSet.serviceProvider)}}))}async queryFaultRecords(e={}){const t=await this.executeQuery(ti,this.normalizeQueryOptions(e),"queryFaultRecords");return null==t?.faultRecords||0===t?.faultRecords?.length?(console.log("SubgraphService: No fault records found for the given criteria"),[]):t.faultRecords.map(e=>({id:e.id,dataSetId:this.parseTimestamp(e.dataSetId),pieceIds:e.pieceIds.map(e=>this.parseTimestamp(e)),currentChallengeEpoch:this.parseTimestamp(e.currentChallengeEpoch),nextChallengeEpoch:this.parseTimestamp(e.nextChallengeEpoch),periodsFaulted:this.parseTimestamp(e.periodsFaulted),deadline:this.parseTimestamp(e.deadline),createdAt:this.parseTimestamp(e.createdAt),dataSet:{id:e.dataSet.id,setId:this.parseTimestamp(e.dataSet.setId),serviceProvider:this.transformProviderData(e.dataSet.serviceProvider)}}))}}async function ii(e,t,n,i){const a=[],r=[],s=e.map(async(e,n)=>{const s=new AbortController;r[n]=s,null!=i&&(i.addEventListener("abort",()=>{s.abort(i.reason)},{once:!0}),i.aborted&&s.abort(i.reason));try{if(!e.products.PDP?.data.serviceURL)throw new Error(`Provider ${e.id} does not have PDP product with serviceURL`);const i=C(e.products.PDP.data.serviceURL,t),r=await fetch(i,{signal:s.signal});if(!r.ok)throw a.push({provider:e.serviceProvider,error:`findPiece returned ${r.status}`}),new Error("Provider does not have piece");const o=I(e.products.PDP.data.serviceURL,t),p=await fetch(o,{signal:s.signal});if(p.ok)return{response:p,index:n};throw a.push({provider:e.serviceProvider,error:`download returned ${p.status}`}),new Error(`Download failed with status ${p.status}`)}catch(t){const n=t.message??"Unknown error";throw a.some(t=>t.provider===e.serviceProvider)||a.push({provider:e.serviceProvider,error:n}),console.warn(`Failed to fetch from provider ${e.serviceProvider}:`,n),t}});try{const{response:e,index:t}=await Promise.any(s);return r.forEach((e,n)=>{n!==t&&e.abort()}),e}catch(e){if(e instanceof AggregateError){const e=a.map(e=>`${e.provider}: ${e.error}`).join("; ");throw f(n,"fetchPiecesFromProviders",`All providers failed to serve piece ${t.toString()}. Details: ${e}`)}throw e}}class ai{warmStorageService;childRetriever;spRegistry;constructor(e,t,n){this.warmStorageService=e,this.spRegistry=t,this.childRetriever=n}async findProviders(e,t){const n=new qn(this.warmStorageService,this.spRegistry);if(null!=t){const e=await n.getApprovedProviderByAddress(t);if(null==e)throw f("ChainRetriever","findProviders",`Provider ${t} not found or not approved`);return[e]}const i=(await this.warmStorageService.getClientDataSetsWithDetails(e)).filter(e=>e.isLive&&e.currentPieceCount>0);if(0===i.length)throw f("ChainRetriever","findProviders",`No active data sets with data found for client ${e}`);const a=[...new Set(i.map(e=>e.providerId))],r=(await n.getApprovedProvidersByIds(a)).filter(e=>null!=e);if(0===r.length)throw f("ChainRetriever","findProviders","No valid providers found (all providers may have been removed or are inactive)");return r}async fetchPiece(e,t,n){const i=async i=>{if(void 0!==this.childRetriever)return await this.childRetriever.fetchPiece(e,t,n);throw f("ChainRetriever","fetchPiece",`Failed to retrieve piece ${e.toString()}: ${i}`)};let a=[];try{a=await this.findProviders(t,n?.providerAddress)}catch(e){const t=e instanceof Error?e.message:"Provider discovery failed";return await i(t)}if(0===a.length)return await i("No providers found and no additional retriever method was configured");try{return await ii(a,e,"ChainRetriever",n?.signal)}catch{return await i("All provider retrieval attempts failed and no additional retriever method was configured")}}}class ri{baseRetriever;network;constructor(e,t){this.baseRetriever=e,this.network=t}hostname(){return"mainnet"===this.network?"filcdn.io":"calibration.filcdn.io"}async fetchPiece(e,t,n){if(!0===n?.withCDN){const i=`https://${t}.${this.hostname()}/${e.toString()}`;try{const e=await fetch(i,{signal:n?.signal});if(e.ok)return e;402===e.status?console.warn("CDN requires payment. Please initialise Synapse SDK with the option `withCDN: true` and re-upload your files."):console.warn("CDN fetch failed with status:",e.status)}catch(e){console.warn("CDN fetch failed:",e)}}return console.log("Falling back to direct retrieval"),await this.baseRetriever.fetchPiece(e,t,n)}}class si{subgraphService;childRetriever;constructor(e,t){this.subgraphService=e,this.childRetriever=t}async findProviders(e,t){if(null!=t){const e=await this.subgraphService.getProviderByAddress(t);return null!==e?[e]:[]}return await this.subgraphService.getApprovedProvidersForPieceCID(e)}async fetchPiece(e,t,n){const i=async i=>{if(void 0!==this.childRetriever)return await this.childRetriever.fetchPiece(e,t,n);throw f("SubgraphRetriever","fetchPiece",`Failed to retrieve piece ${e.toString()}: ${i}`)};let a=[];try{a=await this.findProviders(e,n?.providerAddress)}catch{return await i("Provider discovery failed and no additional retriever method was configured")}if(0===a.length)return await i("No providers found and no additional retriever method was configured");try{return await ii(a,e,"SubgraphRetriever",n?.signal)}catch{return await i("All provider retrieval attempts failed and no additional retriever method was configured")}}}class oi{_provider;_warmStorageAddress;_warmStorageContract=null;_warmStorageViewContract=null;_pdpVerifier=null;_addresses;constructor(e,t,n){this._provider=e,this._warmStorageAddress=t,this._addresses=n}static async create(t,n){const i=await b(t),a=new e.Contract(h.MULTICALL3[i],d.MULTICALL3,t),r=new e.Interface(d.WARM_STORAGE),s=[{target:n,allowFailure:!1,callData:r.encodeFunctionData("pdpVerifierAddress")},{target:n,allowFailure:!1,callData:r.encodeFunctionData("paymentsContractAddress")},{target:n,allowFailure:!1,callData:r.encodeFunctionData("usdfcTokenAddress")},{target:n,allowFailure:!1,callData:r.encodeFunctionData("filCDNBeneficiaryAddress")},{target:n,allowFailure:!1,callData:r.encodeFunctionData("viewContractAddress")},{target:n,allowFailure:!1,callData:r.encodeFunctionData("serviceProviderRegistry")}],o=await a.aggregate3.staticCall(s),p={pdpVerifier:r.decodeFunctionResult("pdpVerifierAddress",o[0].returnData)[0],payments:r.decodeFunctionResult("paymentsContractAddress",o[1].returnData)[0],usdfcToken:r.decodeFunctionResult("usdfcTokenAddress",o[2].returnData)[0],filCDNBeneficiary:r.decodeFunctionResult("filCDNBeneficiaryAddress",o[3].returnData)[0],viewContract:r.decodeFunctionResult("viewContractAddress",o[4].returnData)[0],serviceProviderRegistry:r.decodeFunctionResult("serviceProviderRegistry",o[5].returnData)[0]};return new oi(t,n,p)}getPDPVerifierAddress(){return this._addresses.pdpVerifier}getPaymentsAddress(){return this._addresses.payments}getUSDFCTokenAddress(){return this._addresses.usdfcToken}getViewContractAddress(){return this._addresses.viewContract}getServiceProviderRegistryAddress(){return this._addresses.serviceProviderRegistry}getProvider(){return this._provider}_getWarmStorageContract(){return null==this._warmStorageContract&&(this._warmStorageContract=new e.Contract(this._warmStorageAddress,d.WARM_STORAGE,this._provider)),this._warmStorageContract}_getWarmStorageViewContract(){if(null==this._warmStorageViewContract){const t=this.getViewContractAddress();this._warmStorageViewContract=new e.Contract(t,d.WARM_STORAGE_VIEW,this._provider)}return this._warmStorageViewContract}_getPDPVerifier(){if(null==this._pdpVerifier){const e=this.getPDPVerifierAddress();this._pdpVerifier=new Hn(this._provider,e)}return this._pdpVerifier}async getClientDataSets(e){try{const t=this._getWarmStorageViewContract();return(await t.getClientDataSets(e)).map(e=>({pdpRailId:Number(e.pdpRailId),cacheMissRailId:Number(e.cacheMissRailId),cdnRailId:Number(e.cdnRailId),payer:e.payer,payee:e.payee,commissionBps:Number(e.commissionBps),clientDataSetId:Number(e.clientDataSetId),paymentEndEpoch:Number(e.paymentEndEpoch),providerId:Number(e.providerId)}))}catch(e){throw new Error(`Failed to get client data sets: ${e instanceof Error?e.message:String(e)}`)}}async getClientDataSetsWithDetails(e,t=!1){const n=await this.getClientDataSets(e),i=this._getPDPVerifier(),a=this._getWarmStorageViewContract(),r=n.map(async e=>{try{const n=Number(await a.railToDataSet(e.pdpRailId));if(0===e.pdpRailId)return t?null:{...e,pdpVerifierDataSetId:0,nextPieceId:0,currentPieceCount:0,isLive:!1,isManaged:!1,withCDN:e.cdnRailId>0};const[r,s]=await Promise.all([i.dataSetLive(n),i.getDataSetListener(n).catch(()=>null)]),o=null!=s&&s.toLowerCase()===this._warmStorageAddress.toLowerCase();if(t&&!o)return null;const p=r?await i.getNextPieceId(n):0;return{...e,pdpVerifierDataSetId:n,nextPieceId:Number(p),currentPieceCount:Number(p),isLive:r,isManaged:o,withCDN:e.cdnRailId>0}}catch(t){throw new Error(`Failed to get details for data set with enhanced info ${e.pdpRailId}: ${t instanceof Error?t.message:String(t)}`)}});return(await Promise.all(r)).filter(e=>null!==e)}async getAddPiecesInfo(e){try{const t=this._getWarmStorageViewContract(),n=this._getPDPVerifier(),[i,a,r,s]=await Promise.all([n.dataSetLive(Number(e)),n.getNextPieceId(Number(e)),n.getDataSetListener(Number(e)),t.getDataSet(Number(e))]);if(!i)throw new Error(`Data set ${e} does not exist or is not live`);if(r.toLowerCase()!==this._warmStorageAddress.toLowerCase())throw new Error(`Data set ${e} is not managed by this WarmStorage contract (${this._warmStorageAddress}), managed by ${String(r)}`);const o=Number(s.clientDataSetId);return{nextPieceId:Number(a),clientDataSetId:o,currentPieceCount:Number(a)}}catch(e){throw new Error(`Failed to get add pieces info: ${e instanceof Error?e.message:String(e)}`)}}async getNextClientDataSetId(e){try{const t=this._getWarmStorageViewContract(),n=await t.clientDataSetIDs(e);return Number(n)}catch(e){throw new Error(`Failed to get next client dataset ID: ${e instanceof Error?e.message:String(e)}`)}}async verifyDataSetCreation(e){try{const t="string"==typeof e?e:e.hash;let n;if(n="string"==typeof e?await this._provider.getTransactionReceipt(t):await e.wait(c.TRANSACTION_CONFIRMATIONS),null==n)return{transactionMined:!1,transactionSuccess:!1,dataSetLive:!1};if(1!==n.status)return{transactionMined:!0,transactionSuccess:!1,dataSetLive:!1,blockNumber:n.blockNumber,gasUsed:n.gasUsed,error:"Transaction failed"};const i=this._getPDPVerifier(),a=await i.extractDataSetIdFromReceipt(n);return null==a?{transactionMined:!0,transactionSuccess:!0,dataSetLive:!1,blockNumber:n.blockNumber,gasUsed:n.gasUsed,error:"Could not find DataSetCreated event in transaction"}:{transactionMined:!0,transactionSuccess:!0,dataSetId:a,dataSetLive:await i.dataSetLive(a),blockNumber:n.blockNumber,gasUsed:n.gasUsed}}catch(e){return{transactionMined:!1,transactionSuccess:!1,dataSetLive:!1,error:e instanceof Error?e.message:"Unknown error"}}}async getComprehensiveDataSetStatus(e,t){const n="string"==typeof e?e:e.hash;let i=null;if(null!=t)try{performance.mark("synapse:pdpServer.getDataSetCreationStatus-start"),i=await t.getDataSetCreationStatus(n),performance.mark("synapse:pdpServer.getDataSetCreationStatus-end"),performance.measure("synapse:pdpServer.getDataSetCreationStatus","synapse:pdpServer.getDataSetCreationStatus-start","synapse:pdpServer.getDataSetCreationStatus-end")}catch{performance.mark("synapse:pdpServer.getDataSetCreationStatus-end"),performance.measure("synapse:pdpServer.getDataSetCreationStatus","synapse:pdpServer.getDataSetCreationStatus-start","synapse:pdpServer.getDataSetCreationStatus-end")}performance.mark("synapse:verifyDataSetCreation-start");const a=await this.verifyDataSetCreation(e);performance.mark("synapse:verifyDataSetCreation-end"),performance.measure("synapse:verifyDataSetCreation","synapse:verifyDataSetCreation-start","synapse:verifyDataSetCreation-end");const r=a.transactionMined&&a.transactionSuccess&&null!=a.dataSetId&&a.dataSetLive&&null!=i&&!0===i.ok&&i.dataSetCreated,s=i?.dataSetId??a.dataSetId??null;let o=a.error??null;return null!=i&&!1===i.ok&&(o=`Server reported transaction failed (status: ${i.txStatus})`),{txHash:n,serverStatus:i,chainStatus:a,summary:{isComplete:r,isLive:a.dataSetLive,dataSetId:s,error:o}}}async waitForDataSetCreationWithStatus(e,t,n=c.DATA_SET_CREATION_TIMEOUT_MS,i=c.DATA_SET_CREATION_POLL_INTERVAL_MS,a){const r=Date.now();for(;Date.now()-r<n;){const n=await this.getComprehensiveDataSetStatus(e,t),s=Date.now()-r;if(null!=a)try{await a(n,s)}catch(e){console.error("Error in progress callback:",e)}if(n.summary.isComplete)return n;if(null!=n.summary.error&&n.chainStatus.transactionMined)throw new Error(n.summary.error);await new Promise(e=>setTimeout(e,i))}throw new Error(`Data set creation timed out after ${n/1e3} seconds`)}async getServicePrice(){const e=this._getWarmStorageContract(),t=await e.getServicePrice();return{pricePerTiBPerMonthNoCDN:t.pricePerTiBPerMonthNoCDN,pricePerTiBPerMonthWithCDN:t.pricePerTiBPerMonthWithCDN,tokenAddress:t.tokenAddress,epochsPerMonth:t.epochsPerMonth}}async calculateStorageCost(e){const t=await this.getServicePrice(),n=BigInt(e),i=t.pricePerTiBPerMonthNoCDN*n/(y.TiB*t.epochsPerMonth),a=t.pricePerTiBPerMonthWithCDN*n/(y.TiB*t.epochsPerMonth);return{perEpoch:i,perDay:i*BigInt(u.EPOCHS_PER_DAY),perMonth:i*t.epochsPerMonth,withCDN:{perEpoch:a,perDay:a*BigInt(u.EPOCHS_PER_DAY),perMonth:a*t.epochsPerMonth}}}async checkAllowanceForStorage(e,t,n,i){const[a,r]=await Promise.all([n.serviceApproval(this._warmStorageAddress,o.USDFC),this.calculateStorageCost(e)]),s=t?r.withCDN:r,p=s.perEpoch,d=p*(BigInt(i??Number(u.DEFAULT_LOCKUP_DAYS))*BigInt(u.EPOCHS_PER_DAY)),l=BigInt(a.rateUsed)+p,y=BigInt(a.lockupUsed)+d,c=a.rateAllowance>=l&&a.lockupAllowance>=y,m=l>a.rateAllowance?l-a.rateAllowance:0n,h=y>a.lockupAllowance?y-a.lockupAllowance:0n;let f;if(!c){const e=m>0n,t=h>0n;e&&t?f="Insufficient rate and lockup allowances":e?f="Insufficient rate allowance":t&&(f="Insufficient lockup allowance")}return{rateAllowanceNeeded:m,lockupAllowanceNeeded:h,currentRateAllowance:a.rateAllowance,currentLockupAllowance:a.lockupAllowance,currentRateUsed:a.rateUsed,currentLockupUsed:a.lockupUsed,sufficient:c,message:f,costs:s,depositAmountNeeded:d}}async prepareStorageUpload(e,t){const[n,i]=await Promise.all([this.calculateStorageCost(e.dataSize),this.checkAllowanceForStorage(e.dataSize,e.withCDN??!1,t)]),a=e.withCDN?n.withCDN:n,r=[],s=await t.accountInfo(o.USDFC),p=a.perMonth;if(s.availableFunds<p){const e=p-s.availableFunds;r.push({type:"deposit",description:`Deposit ${e} USDFC to payments contract`,execute:async()=>await t.deposit(e,o.USDFC)})}return i.sufficient||r.push({type:"approveService",description:`Approve service with rate allowance ${i.rateAllowanceNeeded} and lockup allowance ${i.lockupAllowanceNeeded}`,execute:async()=>await t.approveService(this._warmStorageAddress,i.rateAllowanceNeeded,i.lockupAllowanceNeeded,86400n,o.USDFC)}),{estimatedCost:{perEpoch:a.perEpoch,perDay:a.perDay,perMonth:a.perMonth},allowanceCheck:{sufficient:i.sufficient,message:i.sufficient?void 0:`Insufficient allowances: rate needed ${i.rateAllowanceNeeded}, lockup needed ${i.lockupAllowanceNeeded}`},actions:r}}async addApprovedProvider(e,t){const n=this._getWarmStorageContract().connect(e);return await n.addApprovedProvider(t)}async removeApprovedProvider(e,t){const n=this._getWarmStorageContract().connect(e),i=this._getWarmStorageViewContract(),a=(await i.getApprovedProviders()).findIndex(e=>Number(e)===t);if(-1===a)throw new Error(`Provider ${t} is not in the approved list`);return await n.removeApprovedProvider(t,a)}async getApprovedProviderIds(){const e=this._getWarmStorageViewContract();return(await e.getApprovedProviders()).map(e=>Number(e))}async isProviderIdApproved(e){const t=this._getWarmStorageViewContract();return await t.isProviderApproved(e)}async getOwner(){const e=this._getWarmStorageContract();return await e.owner()}async isOwner(e){const t=await e.getAddress(),n=await this.getOwner();return t.toLowerCase()===n.toLowerCase()}async getMaxProvingPeriod(){const e=this._getWarmStorageViewContract(),t=await e.getMaxProvingPeriod();return Number(t)}async getChallengeWindow(){const e=this._getWarmStorageViewContract(),t=await e.challengeWindow();return Number(t)}}class pi{_signer;_network;_withCDN;_payments;_provider;_warmStorageAddress;_warmStorageService;_pieceRetriever;_storageManager;static async create(t){if(1!==[t.privateKey,t.provider,t.signer].filter(Boolean).length)throw new Error("Must provide exactly one of: privateKey, provider, or signer");let n,i,a;if(null!=t.privateKey){const r=t.rpcURL??t.rpcURL;if(null==r)throw new Error("rpcURL is required when using privateKey");let s=t.privateKey;s.startsWith("0x")||(s=`0x${s}`),a=new e.JsonRpcProvider(r),n=await b(a);const o=new e.Wallet(s,a);i=!0===t.disableNonceManager?o:new e.NonceManager(o)}else if(null!=t.provider){if(a=t.provider,n=await b(a),!("getSigner"in a)||"function"!=typeof a.getSigner)throw new Error("Provider does not support signing operations");{const n=await a.getSigner(0);i=!0===t.disableNonceManager?n:new e.NonceManager(n)}}else{if(null==t.signer)throw new Error("No valid authentication method provided");if(i=t.signer,!0===t.disableNonceManager||i instanceof e.NonceManager||(i=new e.NonceManager(i)),null==i.provider)throw new Error("Signer must have a provider");a=i.provider,n=await b(a)}if("mainnet"!==n&&"calibration"!==n)throw new Error(`Invalid network: ${String(n)}. Only 'mainnet' and 'calibration' are supported.`);const r=t.warmStorageAddress??h.WARM_STORAGE[n];if(!r)throw new Error(`No Warm Storage address configured for network: ${n}`);const s=await oi.create(a,r),o=s.getPaymentsAddress(),p=s.getUSDFCTokenAddress(),d=new A(a,i,o,p,!0===t.disableNonceManager),u=s.getServiceProviderRegistryAddress(),l=new Gn(a,u);let y;if(null!=t.pieceRetriever)y=t.pieceRetriever;else{let e=new ai(s,l);if(null!=t.subgraphConfig||null!=t.subgraphService){const n=null!=t.subgraphService?t.subgraphService:new ni(t.subgraphConfig);e=new si(n)}y=new ri(e,n)}return new pi(i,a,n,d,!0===t.withCDN,r,s,y)}constructor(e,t,n,i,a,r,s,o){this._signer=e,this._provider=t,this._network=n,this._payments=i,this._withCDN=a,this._warmStorageService=s,this._pieceRetriever=o,this._warmStorageAddress=r,this._storageManager=new Zn(this,this._warmStorageService,this._pieceRetriever,this._withCDN)}getNetwork(){return this._network}getSigner(){return this._signer}getProvider(){return this._provider}getChainId(){return"mainnet"===this._network?p.mainnet:p.calibration}getWarmStorageAddress(){return this._warmStorageAddress}getPaymentsAddress(){return this._warmStorageService.getPaymentsAddress()}getPDPVerifierAddress(){return this._warmStorageService.getPDPVerifierAddress()}get payments(){return this._payments}get storage(){return this._storageManager}async createStorage(e={}){return await this._storageManager.createContext(e)}async download(e,t){return console.warn("synapse.download() is deprecated. Use synapse.storage.download() instead."),await this._storageManager.download(e,t)}async getProviderInfo(t){try{if("string"==typeof t)try{e.getAddress(t)}catch{throw new Error(`Invalid provider address: ${t}`)}const n=this._warmStorageService.getServiceProviderRegistryAddress(),i=new Gn(this._provider,n),a=new qn(this._warmStorageService,i);let r;if(r="string"==typeof t?await a.getApprovedProviderByAddress(t):await a.getApprovedProvider(t),null==r)throw new Error(`Provider ${t} not found or not approved`);return r}catch(e){if(e instanceof Error&&e.message.includes("Invalid provider address"))throw e;if(e instanceof Error&&e.message.includes("is not approved"))throw e;if(e instanceof Error&&e.message.includes("not found"))throw e;throw new Error(`Failed to get provider info: ${e instanceof Error?e.message:String(e)}`)}}async getStorageInfo(){return console.warn("synapse.getStorageInfo() is deprecated. Use synapse.storage.getStorageInfo() instead."),await this._storageManager.getStorageInfo()}}const di={...s,...i,...a,...r};export{di as default};